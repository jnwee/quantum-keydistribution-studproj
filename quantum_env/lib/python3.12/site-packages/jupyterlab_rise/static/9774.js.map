{"version":3,"file":"9774.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/providers/genericsearchprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/providers/textprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchview.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchproviderregistry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/tokens.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\n/**\n * Abstract class implementing the search provider interface.\n */\nexport class SearchProvider {\n    /**\n     * Constructor\n     *\n     * @param widget The widget to search in\n     */\n    constructor(widget) {\n        this.widget = widget;\n        this._stateChanged = new Signal(this);\n        this._filtersChanged = new Signal(this);\n        this._disposed = false;\n    }\n    /**\n     * Signal indicating that something in the search has changed, so the UI should update\n     */\n    get stateChanged() {\n        return this._stateChanged;\n    }\n    /**\n     * Signal indicating that filter definition changed.\n     */\n    get filtersChanged() {\n        return this._filtersChanged;\n    }\n    /**\n     * The current index of the selected match.\n     */\n    get currentMatchIndex() {\n        return null;\n    }\n    /**\n     * Whether the search provider is disposed or not.\n     */\n    get isDisposed() {\n        return this._disposed;\n    }\n    /**\n     * The number of matches.\n     */\n    get matchesCount() {\n        return null;\n    }\n    /**\n     * Dispose of the resources held by the search provider.\n     *\n     * #### Notes\n     * If the object's `dispose` method is called more than once, all\n     * calls made after the first will be a no-op.\n     *\n     * #### Undefined Behavior\n     * It is undefined behavior to use any functionality of the object\n     * after it has been disposed unless otherwise explicitly noted.\n     */\n    dispose() {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        Signal.clearData(this);\n    }\n    /**\n     * Get an initial query value if applicable so that it can be entered\n     * into the search box as an initial query\n     *\n     * @returns Initial value used to populate the search box.\n     */\n    getInitialQuery() {\n        return '';\n    }\n    /**\n     * Get the filters for the given provider.\n     *\n     * @returns The filters.\n     *\n     * ### Notes\n     * TODO For now it only supports boolean filters (represented with checkboxes)\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * Utility for copying the letter case from old to new text.\n     */\n    static preserveCase(oldText, newText) {\n        if (oldText.toUpperCase() === oldText) {\n            return newText.toUpperCase();\n        }\n        if (oldText.toLowerCase() === oldText) {\n            return newText.toLowerCase();\n        }\n        if (toSentenceCase(oldText) === oldText) {\n            return toSentenceCase(newText);\n        }\n        return newText;\n    }\n}\n/**\n * Capitalise first letter of provided word.\n */\nfunction toSentenceCase([first = '', ...suffix]) {\n    return first.toUpperCase() + '' + suffix.join('').toLowerCase();\n}\n//# sourceMappingURL=searchprovider.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Widget } from '@lumino/widgets';\nimport { SearchProvider } from '../searchprovider';\nexport const FOUND_CLASSES = ['cm-string', 'cm-overlay', 'cm-searching'];\nconst SELECTED_CLASSES = ['CodeMirror-selectedtext'];\n/**\n * HTML search engine\n */\nexport class HTMLSearchEngine {\n    /**\n     * Search for a `query` in a DOM tree.\n     *\n     * @param query Regular expression to search\n     * @param rootNode DOM root node to search in\n     * @returns The list of matches\n     */\n    static search(query, rootNode) {\n        if (!(rootNode instanceof Node)) {\n            console.warn('Unable to search with HTMLSearchEngine the provided object.', rootNode);\n            return Promise.resolve([]);\n        }\n        if (!query.global) {\n            query = new RegExp(query.source, query.flags + 'g');\n        }\n        const matches = [];\n        const walker = document.createTreeWalker(rootNode, NodeFilter.SHOW_TEXT, {\n            acceptNode: node => {\n                // Filter subtrees of UNSUPPORTED_ELEMENTS and nodes that\n                // do not contain our search text\n                let parentElement = node.parentElement;\n                while (parentElement !== rootNode) {\n                    if (parentElement.nodeName in HTMLSearchEngine.UNSUPPORTED_ELEMENTS) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                    parentElement = parentElement.parentElement;\n                }\n                return query.test(node.textContent)\n                    ? NodeFilter.FILTER_ACCEPT\n                    : NodeFilter.FILTER_REJECT;\n            }\n        });\n        let node = null;\n        while ((node = walker.nextNode()) !== null) {\n            // Reset query index\n            query.lastIndex = 0;\n            let match = null;\n            while ((match = query.exec(node.textContent)) !== null) {\n                matches.push({\n                    text: match[0],\n                    position: match.index,\n                    node: node\n                });\n            }\n        }\n        return Promise.resolve(matches);\n    }\n}\n/**\n * We choose opt out as most node types should be searched (e.g. script).\n * Even nodes like <data>, could have textContent we care about.\n *\n * Note: nodeName is capitalized, so we do the same here\n */\nHTMLSearchEngine.UNSUPPORTED_ELEMENTS = {\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Document_metadata\n    BASE: true,\n    HEAD: true,\n    LINK: true,\n    META: true,\n    STYLE: true,\n    TITLE: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Sectioning_root\n    BODY: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Content_sectioning\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Text_content\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Inline_text_semantics\n    // Above is searched\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Image_and_multimedia\n    AREA: true,\n    AUDIO: true,\n    IMG: true,\n    MAP: true,\n    TRACK: true,\n    VIDEO: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Embedded_content\n    APPLET: true,\n    EMBED: true,\n    IFRAME: true,\n    NOEMBED: true,\n    OBJECT: true,\n    PARAM: true,\n    PICTURE: true,\n    SOURCE: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Scripting\n    CANVAS: true,\n    NOSCRIPT: true,\n    SCRIPT: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Demarcating_edits\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Table_content\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Forms\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Interactive_elements\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Web_Components\n    // Above is searched\n    // Other:\n    SVG: true\n};\n/**\n * Generic DOM tree search provider.\n */\nexport class GenericSearchProvider extends SearchProvider {\n    constructor() {\n        super(...arguments);\n        /**\n         * Set to true if the widget under search is read-only, false\n         * if it is editable.  Will be used to determine whether to show\n         * the replace option.\n         */\n        this.isReadOnly = true;\n        this._matches = [];\n        this._mutationObserver = new MutationObserver(this._onWidgetChanged.bind(this));\n        this._markNodes = new Array();\n    }\n    /**\n     * Report whether or not this provider has the ability to search on the given object\n     */\n    static isApplicable(domain) {\n        return domain instanceof Widget;\n    }\n    /**\n     * Instantiate a generic search provider for the widget.\n     *\n     * #### Notes\n     * The widget provided is always checked using `isApplicable` before calling\n     * this factory.\n     *\n     * @param widget The widget to search on\n     * @param registry The search provider registry\n     * @param translator [optional] The translator object\n     *\n     * @returns The search provider on the widget\n     */\n    static createNew(widget, registry, translator) {\n        return new GenericSearchProvider(widget);\n    }\n    /**\n     * The current index of the selected match.\n     */\n    get currentMatchIndex() {\n        return this._currentMatchIndex >= 0 ? this._currentMatchIndex : null;\n    }\n    /**\n     * The current match\n     */\n    get currentMatch() {\n        var _a;\n        return (_a = this._matches[this._currentMatchIndex]) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * The current matches\n     */\n    get matches() {\n        // Ensure that no other fn can overwrite matches index property\n        // We shallow clone each node\n        return this._matches\n            ? this._matches.map(m => Object.assign({}, m))\n            : this._matches;\n    }\n    /**\n     * The number of matches.\n     */\n    get matchesCount() {\n        return this._matches.length;\n    }\n    /**\n     * Clear currently highlighted match.\n     */\n    clearHighlight() {\n        if (this._currentMatchIndex >= 0) {\n            const hit = this._markNodes[this._currentMatchIndex];\n            hit.classList.remove(...SELECTED_CLASSES);\n        }\n        this._currentMatchIndex = -1;\n        return Promise.resolve();\n    }\n    /**\n     * Dispose of the resources held by the search provider.\n     *\n     * #### Notes\n     * If the object's `dispose` method is called more than once, all\n     * calls made after the first will be a no-op.\n     *\n     * #### Undefined Behavior\n     * It is undefined behavior to use any functionality of the object\n     * after it has been disposed unless otherwise explicitly noted.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.endQuery().catch(reason => {\n            console.error(`Failed to end search query.`, reason);\n        });\n        super.dispose();\n    }\n    /**\n     * Move the current match indicator to the next match.\n     *\n     * @param loop Whether to loop within the matches list.\n     *\n     * @returns A promise that resolves once the action has completed.\n     */\n    async highlightNext(loop) {\n        var _a;\n        return (_a = this._highlightNext(false, loop !== null && loop !== void 0 ? loop : true)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    /**\n     * Move the current match indicator to the previous match.\n     *\n     * @param loop Whether to loop within the matches list.\n     *\n     * @returns A promise that resolves once the action has completed.\n     */\n    async highlightPrevious(loop) {\n        var _a;\n        return (_a = this._highlightNext(true, loop !== null && loop !== void 0 ? loop : true)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    /**\n     * Replace the currently selected match with the provided text\n     *\n     * @param newText The replacement text\n     * @param loop Whether to loop within the matches list.\n     *\n     * @returns A promise that resolves with a boolean indicating whether a replace occurred.\n     */\n    async replaceCurrentMatch(newText, loop) {\n        return Promise.resolve(false);\n    }\n    /**\n     * Replace all matches in the notebook with the provided text\n     *\n     * @param newText The replacement text\n     *\n     * @returns A promise that resolves with a boolean indicating whether a replace occurred.\n     */\n    async replaceAllMatches(newText) {\n        // This is read only, but we could loosen this in theory for input boxes...\n        return Promise.resolve(false);\n    }\n    /**\n     * Initialize the search using the provided options.  Should update the UI\n     * to highlight all matches and \"select\" whatever the first match should be.\n     *\n     * @param query A RegExp to be use to perform the search\n     * @param filters Filter parameters to pass to provider\n     */\n    async startQuery(query, filters = {}) {\n        await this.endQuery();\n        this._query = query;\n        if (query === null) {\n            return Promise.resolve();\n        }\n        const matches = await HTMLSearchEngine.search(query, this.widget.node);\n        // Transform the DOM\n        let nodeIdx = 0;\n        while (nodeIdx < matches.length) {\n            let activeNode = matches[nodeIdx].node;\n            let parent = activeNode.parentNode;\n            let subMatches = [matches[nodeIdx]];\n            while (++nodeIdx < matches.length &&\n                matches[nodeIdx].node === activeNode) {\n                subMatches.unshift(matches[nodeIdx]);\n            }\n            const markedNodes = subMatches.map(match => {\n                // TODO: support tspan for svg when svg support is added\n                const markedNode = document.createElement('mark');\n                markedNode.classList.add(...FOUND_CLASSES);\n                markedNode.textContent = match.text;\n                const newNode = activeNode.splitText(match.position);\n                newNode.textContent = newNode.textContent.slice(match.text.length);\n                parent.insertBefore(markedNode, newNode);\n                return markedNode;\n            });\n            // Insert node in reverse order as we replace from last to first\n            // to maintain match position.\n            for (let i = markedNodes.length - 1; i >= 0; i--) {\n                this._markNodes.push(markedNodes[i]);\n            }\n        }\n        // Watch for future changes:\n        this._mutationObserver.observe(this.widget.node, \n        // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit\n        {\n            attributes: false,\n            characterData: true,\n            childList: true,\n            subtree: true\n        });\n        this._matches = matches;\n    }\n    /**\n     * Clear the highlighted matches and any internal state.\n     */\n    async endQuery() {\n        this._mutationObserver.disconnect();\n        this._markNodes.forEach(el => {\n            const parent = el.parentNode;\n            parent.replaceChild(document.createTextNode(el.textContent), el);\n            parent.normalize();\n        });\n        this._markNodes = [];\n        this._matches = [];\n        this._currentMatchIndex = -1;\n    }\n    _highlightNext(reverse, loop) {\n        if (this._matches.length === 0) {\n            return null;\n        }\n        if (this._currentMatchIndex === -1) {\n            this._currentMatchIndex = reverse ? this.matches.length - 1 : 0;\n        }\n        else {\n            const hit = this._markNodes[this._currentMatchIndex];\n            hit.classList.remove(...SELECTED_CLASSES);\n            this._currentMatchIndex = reverse\n                ? this._currentMatchIndex - 1\n                : this._currentMatchIndex + 1;\n            if (loop &&\n                (this._currentMatchIndex < 0 ||\n                    this._currentMatchIndex >= this._matches.length)) {\n                // Cheap way to make this a circular buffer\n                this._currentMatchIndex =\n                    (this._currentMatchIndex + this._matches.length) %\n                        this._matches.length;\n            }\n        }\n        if (this._currentMatchIndex >= 0 &&\n            this._currentMatchIndex < this._matches.length) {\n            const hit = this._markNodes[this._currentMatchIndex];\n            hit.classList.add(...SELECTED_CLASSES);\n            // If not in view, scroll just enough to see it\n            if (!elementInViewport(hit)) {\n                hit.scrollIntoView(reverse);\n            }\n            hit.focus();\n            return this._matches[this._currentMatchIndex];\n        }\n        else {\n            this._currentMatchIndex = -1;\n            return null;\n        }\n    }\n    async _onWidgetChanged(mutations, observer) {\n        this._currentMatchIndex = -1;\n        // This is typically cheap, but we do not control the rate of change or size of the output\n        await this.startQuery(this._query);\n        this._stateChanged.emit();\n    }\n}\nfunction elementInViewport(el) {\n    const boundingClientRect = el.getBoundingClientRect();\n    return (boundingClientRect.top >= 0 &&\n        boundingClientRect.bottom <=\n            (window.innerHeight || document.documentElement.clientHeight) &&\n        boundingClientRect.left >= 0 &&\n        boundingClientRect.right <=\n            (window.innerWidth || document.documentElement.clientWidth));\n}\n//# sourceMappingURL=genericsearchprovider.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Search provider for text/plain\n */\nexport const TextSearchEngine = {\n    /**\n     * Search for regular expression matches in a string.\n     *\n     * @param query Query regular expression\n     * @param data String to look into\n     * @returns List of matches\n     */\n    search(query, data) {\n        // If data is not a string, try to JSON serialize the data.\n        if (typeof data !== 'string') {\n            try {\n                data = JSON.stringify(data);\n            }\n            catch (reason) {\n                console.warn('Unable to search with TextSearchEngine non-JSON serializable object.', reason, data);\n                return Promise.resolve([]);\n            }\n        }\n        if (!query.global) {\n            query = new RegExp(query.source, query.flags + 'g');\n        }\n        const matches = new Array();\n        let match = null;\n        while ((match = query.exec(data)) !== null) {\n            matches.push({\n                text: match[0],\n                position: match.index\n            });\n        }\n        return Promise.resolve(matches);\n    }\n};\n//# sourceMappingURL=textprovider.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomModel } from '@jupyterlab/ui-components';\nimport { Debouncer } from '@lumino/polling';\nimport { Signal } from '@lumino/signaling';\n/**\n * Search in a document model.\n */\nexport class SearchDocumentModel extends VDomModel {\n    /**\n     * Search document model\n     * @param searchProvider Provider for the current document\n     * @param searchDebounceTime Debounce search time\n     */\n    constructor(searchProvider, searchDebounceTime) {\n        super();\n        this.searchProvider = searchProvider;\n        this._caseSensitive = false;\n        this._disposed = new Signal(this);\n        this._parsingError = '';\n        this._preserveCase = false;\n        this._initialQuery = '';\n        this._filters = {};\n        this._replaceText = '';\n        this._searchActive = false;\n        this._searchExpression = '';\n        this._useRegex = false;\n        this._wholeWords = false;\n        this._filters = {};\n        if (this.searchProvider.getFilters) {\n            const filters = this.searchProvider.getFilters();\n            for (const filter in filters) {\n                this._filters[filter] = filters[filter].default;\n            }\n        }\n        searchProvider.stateChanged.connect(this._onProviderStateChanged, this);\n        this._searchDebouncer = new Debouncer(() => {\n            this._updateSearch().catch(reason => {\n                console.error('Failed to update search on document.', reason);\n            });\n        }, searchDebounceTime);\n    }\n    /**\n     * Whether the search is case sensitive or not.\n     */\n    get caseSensitive() {\n        return this._caseSensitive;\n    }\n    set caseSensitive(v) {\n        if (this._caseSensitive !== v) {\n            this._caseSensitive = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Current highlighted match index.\n     */\n    get currentIndex() {\n        return this.searchProvider.currentMatchIndex;\n    }\n    /**\n     * A signal emitted when the object is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Filter values.\n     */\n    get filters() {\n        return this._filters;\n    }\n    /**\n     * Filter definitions for the current provider.\n     */\n    get filtersDefinition() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this.searchProvider).getFilters) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : {};\n    }\n    /**\n     * Filter definitions changed.\n     */\n    get filtersDefinitionChanged() {\n        return this.searchProvider.filtersChanged || null;\n    }\n    /**\n     * The initial query string.\n     */\n    get initialQuery() {\n        return this._initialQuery;\n    }\n    set initialQuery(v) {\n        // The value comes from user selection (set by search provider).\n        this._initialQuery = v;\n    }\n    /**\n     * Initial query as suggested by provider.\n     *\n     * A common choice is the text currently selected by the user.\n     */\n    get suggestedInitialQuery() {\n        return this.searchProvider.getInitialQuery();\n    }\n    /**\n     * Whether the selection includes a single item or multiple items;\n     * this is used by the heuristic auto-enabling \"search in selection\" mode.\n     *\n     * Returns `undefined` if the provider does not expose this information.\n     */\n    get selectionState() {\n        return this.searchProvider.getSelectionState\n            ? this.searchProvider.getSelectionState()\n            : undefined;\n    }\n    /**\n     * Whether the document is read-only or not.\n     */\n    get isReadOnly() {\n        return this.searchProvider.isReadOnly;\n    }\n    /**\n     * Replace options support.\n     */\n    get replaceOptionsSupport() {\n        return this.searchProvider.replaceOptionsSupport;\n    }\n    /**\n     * Parsing regular expression error message.\n     */\n    get parsingError() {\n        return this._parsingError;\n    }\n    /**\n     * Whether to preserve case when replacing.\n     */\n    get preserveCase() {\n        return this._preserveCase;\n    }\n    set preserveCase(v) {\n        if (this._preserveCase !== v) {\n            this._preserveCase = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Replacement expression\n     */\n    get replaceText() {\n        return this._replaceText;\n    }\n    set replaceText(v) {\n        if (this._replaceText !== v) {\n            this._replaceText = v;\n            this.stateChanged.emit();\n        }\n    }\n    /**\n     * Search expression\n     */\n    get searchExpression() {\n        return this._searchExpression;\n    }\n    set searchExpression(v) {\n        if (this._searchExpression !== v) {\n            this._searchExpression = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Total number of matches.\n     */\n    get totalMatches() {\n        return this.searchProvider.matchesCount;\n    }\n    /**\n     * Whether to use regular expression or not.\n     */\n    get useRegex() {\n        return this._useRegex;\n    }\n    set useRegex(v) {\n        if (this._useRegex !== v) {\n            this._useRegex = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Whether to match whole words or not.\n     */\n    get wholeWords() {\n        return this._wholeWords;\n    }\n    set wholeWords(v) {\n        if (this._wholeWords !== v) {\n            this._wholeWords = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Dispose the model.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        if (this._searchExpression) {\n            this.endQuery().catch(reason => {\n                console.error(`Failed to end query '${this._searchExpression}.`, reason);\n            });\n        }\n        this.searchProvider.stateChanged.disconnect(this._onProviderStateChanged, this);\n        this._searchDebouncer.dispose();\n        super.dispose();\n    }\n    /**\n     * End the query.\n     */\n    async endQuery() {\n        this._searchActive = false;\n        await this.searchProvider.endQuery();\n        this.stateChanged.emit();\n    }\n    /**\n     * Highlight the next match.\n     */\n    async highlightNext() {\n        await this.searchProvider.highlightNext();\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Highlight the previous match\n     */\n    async highlightPrevious() {\n        await this.searchProvider.highlightPrevious();\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Refresh search\n     */\n    refresh() {\n        this._searchDebouncer.invoke().catch(reason => {\n            console.error('Failed to invoke search document debouncer.', reason);\n        });\n    }\n    /**\n     * Replace all matches.\n     */\n    async replaceAllMatches() {\n        await this.searchProvider.replaceAllMatches(this._replaceText, {\n            preserveCase: this.preserveCase,\n            regularExpression: this.useRegex\n        });\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Replace the current match.\n     */\n    async replaceCurrentMatch() {\n        await this.searchProvider.replaceCurrentMatch(this._replaceText, true, {\n            preserveCase: this.preserveCase,\n            regularExpression: this.useRegex\n        });\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Set the value of a given filter.\n     *\n     * @param name Filter name\n     * @param v Filter value\n     */\n    async setFilter(name, v) {\n        if (this._filters[name] !== v) {\n            if (this.searchProvider.validateFilter) {\n                this._filters[name] = await this.searchProvider.validateFilter(name, v);\n                // If the value was changed\n                if (this._filters[name] === v) {\n                    this.stateChanged.emit();\n                    this.refresh();\n                }\n            }\n            else {\n                this._filters[name] = v;\n                this.stateChanged.emit();\n                this.refresh();\n            }\n        }\n    }\n    async _updateSearch() {\n        if (this._parsingError) {\n            this._parsingError = '';\n            this.stateChanged.emit();\n        }\n        try {\n            const query = this.searchExpression\n                ? Private.parseQuery(this.searchExpression, this.caseSensitive, this.useRegex, this.wholeWords)\n                : null;\n            if (query) {\n                this._searchActive = true;\n                await this.searchProvider.startQuery(query, this._filters);\n            }\n            else {\n                this._searchActive = false;\n                await this.searchProvider.endQuery();\n            }\n            // Emit state change as the index needs to be updated\n            this.stateChanged.emit();\n        }\n        catch (reason) {\n            this._parsingError = reason.toString();\n            this.stateChanged.emit();\n            console.error(`Failed to parse expression ${this.searchExpression}`, reason);\n        }\n    }\n    _onProviderStateChanged() {\n        if (this._searchActive) {\n            this.refresh();\n        }\n    }\n}\nvar Private;\n(function (Private) {\n    /**\n     * Build the regular expression to use for searching.\n     *\n     * @param queryString Query string\n     * @param caseSensitive Whether the search is case sensitive or not\n     * @param regex Whether the expression is a regular expression\n     * @returns The regular expression to use\n     */\n    function parseQuery(queryString, caseSensitive, regex, wholeWords) {\n        const flag = caseSensitive ? 'gm' : 'gim';\n        // escape regex characters in query if its a string search\n        let queryText = regex\n            ? queryString\n            : queryString.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n        if (wholeWords) {\n            queryText = '\\\\b' + queryText + '\\\\b';\n        }\n        const ret = new RegExp(queryText, flag);\n        // If the empty string is hit, the search logic will freeze the browser tab\n        //  Trying /^/ or /$/ on the codemirror search demo, does not find anything.\n        //  So this is a limitation of the editor.\n        if (ret.test('')) {\n            return null;\n        }\n        return ret;\n    }\n    Private.parseQuery = parseQuery;\n})(Private || (Private = {}));\n//# sourceMappingURL=searchmodel.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { caretDownEmptyThinIcon, caretDownIcon, caretRightIcon, caretUpEmptyThinIcon, caseSensitiveIcon, classes, closeIcon, filterDotIcon, filterIcon, regexIcon, VDomRenderer, wordIcon } from '@jupyterlab/ui-components';\nimport { Signal } from '@lumino/signaling';\nimport { CommandRegistry } from '@lumino/commands';\nimport { UseSignal } from '@jupyterlab/apputils';\nimport * as React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nconst OVERLAY_CLASS = 'jp-DocumentSearch-overlay';\nconst OVERLAY_ROW_CLASS = 'jp-DocumentSearch-overlay-row';\nconst INPUT_CLASS = 'jp-DocumentSearch-input';\nconst INPUT_LABEL_CLASS = 'jp-DocumentSearch-input-label';\nconst INPUT_WRAPPER_CLASS = 'jp-DocumentSearch-input-wrapper';\nconst INPUT_BUTTON_CLASS_OFF = 'jp-DocumentSearch-input-button-off';\nconst INPUT_BUTTON_CLASS_ON = 'jp-DocumentSearch-input-button-on';\nconst INDEX_COUNTER_CLASS = 'jp-DocumentSearch-index-counter';\nconst UP_DOWN_BUTTON_WRAPPER_CLASS = 'jp-DocumentSearch-up-down-wrapper';\nconst UP_DOWN_BUTTON_CLASS = 'jp-DocumentSearch-up-down-button';\nconst FILTER_BUTTON_CLASS = 'jp-DocumentSearch-filter-button';\nconst FILTER_BUTTON_ENABLED_CLASS = 'jp-DocumentSearch-filter-button-enabled';\nconst REGEX_ERROR_CLASS = 'jp-DocumentSearch-regex-error';\nconst SEARCH_OPTIONS_CLASS = 'jp-DocumentSearch-search-options';\nconst SEARCH_FILTER_DISABLED_CLASS = 'jp-DocumentSearch-search-filter-disabled';\nconst SEARCH_FILTER_CLASS = 'jp-DocumentSearch-search-filter';\nconst REPLACE_BUTTON_CLASS = 'jp-DocumentSearch-replace-button';\nconst REPLACE_BUTTON_WRAPPER_CLASS = 'jp-DocumentSearch-replace-button-wrapper';\nconst REPLACE_WRAPPER_CLASS = 'jp-DocumentSearch-replace-wrapper-class';\nconst REPLACE_TOGGLE_CLASS = 'jp-DocumentSearch-replace-toggle';\nconst TOGGLE_WRAPPER = 'jp-DocumentSearch-toggle-wrapper';\nconst TOGGLE_PLACEHOLDER = 'jp-DocumentSearch-toggle-placeholder';\nconst BUTTON_CONTENT_CLASS = 'jp-DocumentSearch-button-content';\nconst BUTTON_WRAPPER_CLASS = 'jp-DocumentSearch-button-wrapper';\nconst SPACER_CLASS = 'jp-DocumentSearch-spacer';\nfunction SearchInput(props) {\n    const [rows, setRows] = useState(1);\n    const updateDimensions = useCallback((event) => {\n        var _a;\n        const element = event\n            ? event.target\n            : (_a = props.inputRef) === null || _a === void 0 ? void 0 : _a.current;\n        if (element) {\n            const split = element.value.split(/\\n/);\n            // use the longest string out of all lines to compute the width.\n            let longest = split.reduce((a, b) => (a.length > b.length ? a : b), '');\n            if (element.parentNode && element.parentNode instanceof HTMLElement) {\n                element.parentNode.dataset.value = longest;\n            }\n            setRows(split.length);\n        }\n    }, []);\n    useEffect(() => {\n        var _a, _b;\n        // For large part, `focusSearchInput()` is responsible for focusing and\n        // selecting the search input, however when `initialValue` changes, this\n        // triggers React re-render to update `defaultValue` (implemented via `key`)\n        // which means that `focusSearchInput` is no longer effective as it has\n        // already fired before the re-render, hence we use this conditional effect.\n        (_b = (_a = props.inputRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.select();\n        // After any change to initial value we also want to update rows in case if\n        // multi-line text was selected.\n        updateDimensions();\n    }, [props.initialValue]);\n    return (React.createElement(\"label\", { className: INPUT_LABEL_CLASS },\n        React.createElement(\"textarea\", { onChange: e => {\n                props.onChange(e);\n                updateDimensions(e);\n            }, onKeyDown: e => {\n                props.onKeyDown(e);\n                updateDimensions(e);\n            }, rows: rows, placeholder: props.placeholder, className: INPUT_CLASS, \n            // Setting a key ensures that `defaultValue` will become updated\n            // when the initial value changes.\n            key: props.autoUpdate ? props.initialValue : null, tabIndex: 0, ref: props.inputRef, title: props.title, defaultValue: props.initialValue || props.lastSearchText, autoFocus: props.autoFocus })));\n}\nfunction SearchEntry(props) {\n    var _a;\n    const trans = ((_a = props.translator) !== null && _a !== void 0 ? _a : nullTranslator).load('jupyterlab');\n    const caseButtonToggleClass = classes(props.caseSensitive ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    const regexButtonToggleClass = classes(props.useRegex ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    const wordButtonToggleClass = classes(props.wholeWords ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    const wrapperClass = INPUT_WRAPPER_CLASS;\n    return (React.createElement(\"div\", { className: wrapperClass },\n        React.createElement(SearchInput, { placeholder: trans.__('Find'), onChange: e => props.onChange(e), onKeyDown: e => props.onKeydown(e), inputRef: props.inputRef, initialValue: props.initialSearchText, lastSearchText: props.lastSearchText, title: trans.__('Find'), autoFocus: true, autoUpdate: true }),\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => {\n                props.onCaseSensitiveToggled();\n            }, tabIndex: 0, title: trans.__('Match Case') },\n            React.createElement(caseSensitiveIcon.react, { className: caseButtonToggleClass, tag: \"span\" })),\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onWordToggled(), tabIndex: 0, title: trans.__('Match Whole Word') },\n            React.createElement(wordIcon.react, { className: wordButtonToggleClass, tag: \"span\" })),\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onRegexToggled(), tabIndex: 0, title: trans.__('Use Regular Expression') },\n            React.createElement(regexIcon.react, { className: regexButtonToggleClass, tag: \"span\" }))));\n}\nfunction ReplaceEntry(props) {\n    var _a, _b, _c;\n    const trans = ((_a = props.translator) !== null && _a !== void 0 ? _a : nullTranslator).load('jupyterlab');\n    const preserveCaseButtonToggleClass = classes(props.preserveCase ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    return (React.createElement(\"div\", { className: REPLACE_WRAPPER_CLASS },\n        React.createElement(\"div\", { className: INPUT_WRAPPER_CLASS },\n            React.createElement(SearchInput, { placeholder: trans.__('Replace'), initialValue: (_b = props.replaceText) !== null && _b !== void 0 ? _b : '', onKeyDown: e => props.onReplaceKeydown(e), onChange: e => props.onChange(e), title: trans.__('Replace'), autoFocus: false, autoUpdate: false }),\n            ((_c = props.replaceOptionsSupport) === null || _c === void 0 ? void 0 : _c.preserveCase) ? (React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onPreserveCaseToggled(), tabIndex: 0, title: trans.__('Preserve Case') },\n                React.createElement(caseSensitiveIcon.react, { className: preserveCaseButtonToggleClass, tag: \"span\" }))) : null),\n        React.createElement(\"button\", { className: REPLACE_BUTTON_WRAPPER_CLASS, onClick: () => props.onReplaceCurrent(), tabIndex: 0 },\n            React.createElement(\"span\", { className: `${REPLACE_BUTTON_CLASS} ${BUTTON_CONTENT_CLASS}`, tabIndex: 0 }, trans.__('Replace'))),\n        React.createElement(\"button\", { className: REPLACE_BUTTON_WRAPPER_CLASS, tabIndex: 0, onClick: () => props.onReplaceAll() },\n            React.createElement(\"span\", { className: `${REPLACE_BUTTON_CLASS} ${BUTTON_CONTENT_CLASS}`, tabIndex: -1 }, trans.__('Replace All')))));\n}\nfunction UpDownButtons(props) {\n    var _a, _b;\n    const nextBinding = (_a = props.keyBindings) === null || _a === void 0 ? void 0 : _a.next;\n    const prevBinding = (_b = props.keyBindings) === null || _b === void 0 ? void 0 : _b.previous;\n    const nextKeys = nextBinding\n        ? CommandRegistry.formatKeystroke(nextBinding.keys)\n        : '';\n    const prevKeys = prevBinding\n        ? CommandRegistry.formatKeystroke(prevBinding.keys)\n        : '';\n    const prevShortcut = prevKeys ? ` (${prevKeys})` : '';\n    const nextShortcut = nextKeys ? ` (${nextKeys})` : '';\n    const upButton = (React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => (props.isEnabled ? props.onHighlightPrevious() : false), tabIndex: 0, title: `${props.trans.__('Previous Match')}${prevShortcut}`, disabled: !props.isEnabled },\n        React.createElement(caretUpEmptyThinIcon.react, { className: classes(UP_DOWN_BUTTON_CLASS, BUTTON_CONTENT_CLASS), tag: \"span\" })));\n    const downButton = (React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => (props.isEnabled ? props.onHighlightNext() : false), tabIndex: 0, title: `${props.trans.__('Next Match')}${nextShortcut}`, disabled: !props.isEnabled },\n        React.createElement(caretDownEmptyThinIcon.react, { className: classes(UP_DOWN_BUTTON_CLASS, BUTTON_CONTENT_CLASS), tag: \"span\" })));\n    return (React.createElement(\"div\", { className: UP_DOWN_BUTTON_WRAPPER_CLASS },\n        upButton,\n        downButton));\n}\nfunction SearchIndices(props) {\n    return (React.createElement(\"div\", { className: INDEX_COUNTER_CLASS }, props.totalMatches === 0\n        ? '-/-'\n        : `${props.currentIndex === null ? '-' : props.currentIndex + 1}/${props.totalMatches}`));\n}\nfunction FilterToggle(props) {\n    let className = `${FILTER_BUTTON_CLASS} ${BUTTON_CONTENT_CLASS}`;\n    if (props.visible) {\n        className = `${className} ${FILTER_BUTTON_ENABLED_CLASS}`;\n    }\n    const icon = props.anyEnabled ? filterDotIcon : filterIcon;\n    return (React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.toggleVisible(), tabIndex: 0, title: props.visible\n            ? props.trans.__('Hide Search Filters')\n            : props.trans.__('Show Search Filters') },\n        React.createElement(icon.react, { className: className, tag: \"span\", height: \"20px\", width: \"20px\" })));\n}\nfunction FilterSelection(props) {\n    return (React.createElement(\"label\", { className: props.isEnabled\n            ? SEARCH_FILTER_CLASS\n            : `${SEARCH_FILTER_CLASS} ${SEARCH_FILTER_DISABLED_CLASS}`, title: props.description },\n        React.createElement(\"input\", { type: \"checkbox\", className: \"jp-mod-styled\", disabled: !props.isEnabled, checked: props.value, onChange: props.onToggle }),\n        props.title));\n}\nclass SearchOverlay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.translator = props.translator || nullTranslator;\n    }\n    _onSearchChange(event) {\n        const searchText = event.target.value;\n        this.props.onSearchChanged(searchText);\n    }\n    _onSearchKeydown(event) {\n        if (event.keyCode === 13) {\n            // Enter pressed\n            event.stopPropagation();\n            event.preventDefault();\n            if (event.ctrlKey) {\n                const textarea = event.target;\n                this._insertNewLine(textarea);\n                this.props.onSearchChanged(textarea.value);\n            }\n            else {\n                event.shiftKey\n                    ? this.props.onHighlightPrevious()\n                    : this.props.onHighlightNext();\n            }\n        }\n    }\n    _onReplaceKeydown(event) {\n        if (event.keyCode === 13) {\n            // Enter pressed\n            event.stopPropagation();\n            event.preventDefault();\n            if (event.ctrlKey) {\n                this._insertNewLine(event.target);\n            }\n            else {\n                this.props.onReplaceCurrent();\n            }\n        }\n    }\n    _insertNewLine(textarea) {\n        const [start, end] = [textarea.selectionStart, textarea.selectionEnd];\n        textarea.setRangeText('\\n', start, end, 'end');\n    }\n    _onClose() {\n        // Clean up and close widget.\n        this.props.onClose();\n    }\n    _onReplaceToggled() {\n        // Deactivate invalid replace filters\n        if (!this.props.replaceEntryVisible) {\n            for (const key in this.props.filtersDefinition) {\n                const filter = this.props.filtersDefinition[key];\n                if (!filter.supportReplace) {\n                    this.props.onFilterChanged(key, false).catch(reason => {\n                        console.error(`Fail to update filter value for ${filter.title}:\\n${reason}`);\n                    });\n                }\n            }\n        }\n        this.props.onReplaceEntryShown(!this.props.replaceEntryVisible);\n    }\n    _toggleFiltersVisibility() {\n        this.props.onFiltersVisibilityChanged(!this.props.filtersVisible);\n    }\n    render() {\n        var _a, _b, _c;\n        const trans = this.translator.load('jupyterlab');\n        const showReplace = !this.props.isReadOnly && this.props.replaceEntryVisible;\n        const filters = this.props.filtersDefinition;\n        const hasFilters = Object.keys(filters).length > 0;\n        const filterToggle = hasFilters ? (React.createElement(FilterToggle, { visible: this.props.filtersVisible, anyEnabled: Object.keys(filters).some(name => {\n                var _a;\n                const filter = filters[name];\n                return (_a = this.props.filters[name]) !== null && _a !== void 0 ? _a : filter.default;\n            }), toggleVisible: () => this._toggleFiltersVisibility(), trans: trans })) : null;\n        const selectionBinding = (_a = this.props.keyBindings) === null || _a === void 0 ? void 0 : _a.toggleSearchInSelection;\n        const selectionKeys = selectionBinding\n            ? CommandRegistry.formatKeystroke(selectionBinding.keys)\n            : '';\n        const selectionKeyHint = selectionKeys ? ` (${selectionKeys})` : '';\n        const filter = hasFilters ? (React.createElement(\"div\", { className: SEARCH_OPTIONS_CLASS }, Object.keys(filters).map(name => {\n            var _a, _b;\n            const filter = filters[name];\n            const isEnabled = !showReplace || filter.supportReplace;\n            // Show an alternate description, if one exists, when a filter is disabled in replace mode.\n            const description = isEnabled\n                ? filter.description\n                : (_a = filter.disabledDescription) !== null && _a !== void 0 ? _a : filter.description;\n            return (React.createElement(FilterSelection, { key: name, title: filter.title, description: description + (name == 'selection' ? selectionKeyHint : ''), isEnabled: isEnabled, onToggle: async () => {\n                    await this.props.onFilterChanged(name, !this.props.filters[name]);\n                }, value: (_b = this.props.filters[name]) !== null && _b !== void 0 ? _b : filter.default }));\n        }))) : null;\n        const icon = this.props.replaceEntryVisible\n            ? caretDownIcon\n            : caretRightIcon;\n        // TODO: Error messages from regex are not currently localizable.\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: OVERLAY_ROW_CLASS },\n                this.props.isReadOnly ? (React.createElement(\"div\", { className: TOGGLE_PLACEHOLDER })) : (React.createElement(\"button\", { className: TOGGLE_WRAPPER, onClick: () => this._onReplaceToggled(), tabIndex: 0, title: showReplace\n                        ? trans.__('Hide Replace')\n                        : trans.__('Show Replace') },\n                    React.createElement(icon.react, { className: `${REPLACE_TOGGLE_CLASS} ${BUTTON_CONTENT_CLASS}`, tag: \"span\", elementPosition: \"center\", height: \"20px\", width: \"20px\" }))),\n                React.createElement(SearchEntry, { inputRef: this.props.searchInputRef, useRegex: this.props.useRegex, caseSensitive: this.props.caseSensitive, wholeWords: this.props.wholeWords, onCaseSensitiveToggled: this.props.onCaseSensitiveToggled, onRegexToggled: this.props.onRegexToggled, onWordToggled: this.props.onWordToggled, onKeydown: (e) => this._onSearchKeydown(e), onChange: (e) => this._onSearchChange(e), initialSearchText: this.props.initialSearchText, lastSearchText: this.props.lastSearchText, translator: this.translator }),\n                filterToggle,\n                React.createElement(SearchIndices, { currentIndex: this.props.currentIndex, totalMatches: (_b = this.props.totalMatches) !== null && _b !== void 0 ? _b : 0 }),\n                React.createElement(UpDownButtons, { onHighlightPrevious: () => {\n                        this.props.onHighlightPrevious();\n                    }, onHighlightNext: () => {\n                        this.props.onHighlightNext();\n                    }, trans: trans, keyBindings: this.props.keyBindings, isEnabled: !!((_c = this.props.searchInputRef.current) === null || _c === void 0 ? void 0 : _c.value) }),\n                React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => this._onClose(), tabIndex: 0, title: trans.__('Close Search Box') },\n                    React.createElement(closeIcon.react, { className: \"jp-icon-hover\", elementPosition: \"center\", height: \"16px\", width: \"16px\" }))),\n            React.createElement(\"div\", { className: OVERLAY_ROW_CLASS }, showReplace ? (React.createElement(React.Fragment, null,\n                React.createElement(ReplaceEntry, { onPreserveCaseToggled: this.props.onPreserveCaseToggled, onReplaceKeydown: (e) => this._onReplaceKeydown(e), onChange: (e) => this.props.onReplaceChanged(e.target.value), onReplaceCurrent: () => this.props.onReplaceCurrent(), onReplaceAll: () => this.props.onReplaceAll(), replaceOptionsSupport: this.props.replaceOptionsSupport, replaceText: this.props.replaceText, preserveCase: this.props.preserveCase, translator: this.translator }),\n                React.createElement(\"div\", { className: SPACER_CLASS }))) : null),\n            this.props.filtersVisible ? filter : null,\n            !!this.props.errorMessage && (React.createElement(\"div\", { className: REGEX_ERROR_CLASS }, this.props.errorMessage))));\n    }\n}\n/**\n * Search document widget\n */\nexport class SearchDocumentView extends VDomRenderer {\n    /**\n     * Search document widget constructor.\n     *\n     * @param model Search document model\n     * @param translator Application translator object\n     * @param keyBindings Search keybindings\n     *\n     */\n    constructor(model, translator, keyBindings) {\n        super(model);\n        this.translator = translator;\n        this._showReplace = false;\n        this._showFilters = false;\n        this._closed = new Signal(this);\n        this.addClass(OVERLAY_CLASS);\n        this._searchInput = React.createRef();\n        this._keyBindings = keyBindings;\n    }\n    /**\n     * A signal emitted when the widget is closed.\n     *\n     * Closing the widget detached it from the DOM but does not dispose it.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Focus search input.\n     */\n    focusSearchInput() {\n        var _a;\n        (_a = this._searchInput.current) === null || _a === void 0 ? void 0 : _a.select();\n    }\n    /**\n     * Set the initial search text.\n     */\n    setSearchText(search) {\n        this.model.initialQuery = search;\n        // Only set the new search text to search expression if there is any\n        // to avoid nullifying the one that was remembered from last time.\n        if (search) {\n            this.model.searchExpression = search;\n        }\n    }\n    /**\n     * Set the replace text\n     *\n     * It does not trigger a view update.\n     */\n    setReplaceText(replace) {\n        this.model.replaceText = replace;\n    }\n    /**\n     * Show the replacement input box.\n     */\n    showReplace() {\n        this.setReplaceInputVisibility(true);\n    }\n    /**\n     * A message handler invoked on a `'close-request'` message.\n     *\n     * #### Notes\n     * On top of the default implementation emit closed signal and end model query.\n     */\n    onCloseRequest(msg) {\n        super.onCloseRequest(msg);\n        this._closed.emit();\n        void this.model.endQuery();\n    }\n    setReplaceInputVisibility(v) {\n        if (this._showReplace !== v) {\n            this._showReplace = v;\n            this.update();\n        }\n    }\n    setFiltersVisibility(v) {\n        if (this._showFilters !== v) {\n            this._showFilters = v;\n            this.update();\n        }\n    }\n    render() {\n        return this.model.filtersDefinitionChanged ? (React.createElement(UseSignal, { signal: this.model.filtersDefinitionChanged }, () => this._renderOverlay())) : (this._renderOverlay());\n    }\n    _renderOverlay() {\n        return (React.createElement(SearchOverlay, { caseSensitive: this.model.caseSensitive, currentIndex: this.model.currentIndex, isReadOnly: this.model.isReadOnly, errorMessage: this.model.parsingError, filters: this.model.filters, filtersDefinition: this.model.filtersDefinition, preserveCase: this.model.preserveCase, replaceEntryVisible: this._showReplace, filtersVisible: this._showFilters, replaceOptionsSupport: this.model.replaceOptionsSupport, replaceText: this.model.replaceText, initialSearchText: this.model.initialQuery, lastSearchText: this.model.searchExpression, searchInputRef: this._searchInput, totalMatches: this.model.totalMatches, translator: this.translator, useRegex: this.model.useRegex, wholeWords: this.model.wholeWords, onCaseSensitiveToggled: () => {\n                this.model.caseSensitive = !this.model.caseSensitive;\n            }, onRegexToggled: () => {\n                this.model.useRegex = !this.model.useRegex;\n            }, onWordToggled: () => {\n                this.model.wholeWords = !this.model.wholeWords;\n            }, onFilterChanged: async (name, value) => {\n                await this.model.setFilter(name, value);\n            }, onFiltersVisibilityChanged: (v) => {\n                this.setFiltersVisibility(v);\n            }, onHighlightNext: () => {\n                void this.model.highlightNext();\n            }, onHighlightPrevious: () => {\n                void this.model.highlightPrevious();\n            }, onPreserveCaseToggled: () => {\n                this.model.preserveCase = !this.model.preserveCase;\n            }, onSearchChanged: (q) => {\n                this.model.searchExpression = q;\n            }, onClose: () => {\n                this.close();\n            }, onReplaceEntryShown: (v) => {\n                this.setReplaceInputVisibility(v);\n            }, onReplaceChanged: (q) => {\n                this.model.replaceText = q;\n            }, onReplaceCurrent: () => {\n                void this.model.replaceCurrentMatch();\n            }, onReplaceAll: () => {\n                void this.model.replaceAllMatches();\n            }, keyBindings: this._keyBindings }));\n    }\n}\n//# sourceMappingURL=searchview.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { Signal } from '@lumino/signaling';\n/**\n * Search provider registry\n */\nexport class SearchProviderRegistry {\n    /**\n     * Constructor\n     *\n     * @param translator Application translator object\n     */\n    constructor(translator = nullTranslator) {\n        this.translator = translator;\n        this._changed = new Signal(this);\n        this._providerMap = new Map();\n    }\n    /**\n     * Add a provider to the registry.\n     *\n     * @param key - The provider key.\n     * @returns A disposable delegate that, when disposed, deregisters the given search provider\n     */\n    add(key, provider) {\n        this._providerMap.set(key, provider);\n        this._changed.emit();\n        return new DisposableDelegate(() => {\n            this._providerMap.delete(key);\n            this._changed.emit();\n        });\n    }\n    /**\n     * Returns a matching provider for the widget.\n     *\n     * @param widget - The widget to search over.\n     * @returns the search provider, or undefined if none exists.\n     */\n    getProvider(widget) {\n        // iterate through all providers and ask each one if it can search on the\n        // widget.\n        for (const P of this._providerMap.values()) {\n            if (P.isApplicable(widget)) {\n                return P.createNew(widget, this.translator);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Whether the registry as a matching provider for the widget.\n     *\n     * @param widget - The widget to search over.\n     * @returns Provider existence\n     */\n    hasProvider(widget) {\n        for (const P of this._providerMap.values()) {\n            if (P.isApplicable(widget)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Signal that emits when a new search provider has been registered\n     * or removed.\n     */\n    get changed() {\n        return this._changed;\n    }\n}\n//# sourceMappingURL=searchproviderregistry.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/**\n * The search provider registry token.\n */\nexport const ISearchProviderRegistry = new Token('@jupyterlab/documentsearch:ISearchProviderRegistry', `A service for a registry of search\n  providers for the application. Plugins can register their UI elements with this registry\n  to provide find/replace support.`);\n//# sourceMappingURL=tokens.js.map"],"names":["SearchProvider","constructor","widget","this","_stateChanged","Signal","_filtersChanged","_disposed","stateChanged","filtersChanged","currentMatchIndex","isDisposed","matchesCount","dispose","clearData","getInitialQuery","getFilters","preserveCase","oldText","newText","toUpperCase","toLowerCase","toSentenceCase","first","suffix","join","FOUND_CLASSES","SELECTED_CLASSES","HTMLSearchEngine","search","query","rootNode","Node","console","warn","Promise","resolve","global","RegExp","source","flags","matches","walker","document","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","node","parentElement","nodeName","UNSUPPORTED_ELEMENTS","FILTER_REJECT","test","textContent","FILTER_ACCEPT","nextNode","lastIndex","match","exec","push","text","position","index","BASE","HEAD","LINK","META","STYLE","TITLE","BODY","AREA","AUDIO","IMG","MAP","TRACK","VIDEO","APPLET","EMBED","IFRAME","NOEMBED","OBJECT","PARAM","PICTURE","SOURCE","CANVAS","NOSCRIPT","SCRIPT","SVG","GenericSearchProvider","super","arguments","isReadOnly","_matches","_mutationObserver","MutationObserver","_onWidgetChanged","bind","_markNodes","Array","isApplicable","domain","Widget","createNew","registry","translator","_currentMatchIndex","currentMatch","_a","map","m","Object","assign","length","clearHighlight","classList","remove","endQuery","catch","reason","error","highlightNext","loop","_highlightNext","undefined","highlightPrevious","replaceCurrentMatch","replaceAllMatches","startQuery","filters","_query","nodeIdx","activeNode","parent","parentNode","subMatches","unshift","markedNodes","markedNode","createElement","add","newNode","splitText","slice","insertBefore","i","observe","attributes","characterData","childList","subtree","disconnect","forEach","el","replaceChild","createTextNode","normalize","reverse","hit","boundingClientRect","getBoundingClientRect","top","bottom","window","innerHeight","documentElement","clientHeight","left","right","innerWidth","clientWidth","elementInViewport","scrollIntoView","focus","mutations","observer","emit","TextSearchEngine","data","JSON","stringify","Private","SearchDocumentModel","VDomModel","searchProvider","searchDebounceTime","_caseSensitive","_parsingError","_preserveCase","_initialQuery","_filters","_replaceText","_searchActive","_searchExpression","_useRegex","_wholeWords","filter","default","connect","_onProviderStateChanged","_searchDebouncer","Debouncer","_updateSearch","caseSensitive","v","refresh","currentIndex","disposed","filtersDefinition","_b","_c","call","filtersDefinitionChanged","initialQuery","suggestedInitialQuery","selectionState","getSelectionState","replaceOptionsSupport","parsingError","replaceText","searchExpression","totalMatches","useRegex","wholeWords","invoke","regularExpression","setFilter","name","validateFilter","parseQuery","toString","queryString","regex","flag","queryText","replace","ret","OVERLAY_ROW_CLASS","INPUT_CLASS","INPUT_LABEL_CLASS","INPUT_WRAPPER_CLASS","INPUT_BUTTON_CLASS_OFF","INPUT_BUTTON_CLASS_ON","UP_DOWN_BUTTON_CLASS","SEARCH_FILTER_CLASS","REPLACE_BUTTON_CLASS","REPLACE_BUTTON_WRAPPER_CLASS","BUTTON_CONTENT_CLASS","BUTTON_WRAPPER_CLASS","SearchInput","props","rows","setRows","useState","updateDimensions","useCallback","event","element","target","inputRef","current","split","value","longest","reduce","a","b","HTMLElement","dataset","useEffect","select","initialValue","className","onChange","e","onKeyDown","placeholder","key","autoUpdate","tabIndex","ref","title","defaultValue","lastSearchText","autoFocus","SearchEntry","trans","nullTranslator","load","caseButtonToggleClass","classes","regexButtonToggleClass","wordButtonToggleClass","wrapperClass","__","onKeydown","initialSearchText","onClick","onCaseSensitiveToggled","caseSensitiveIcon","react","tag","onWordToggled","wordIcon","onRegexToggled","regexIcon","ReplaceEntry","preserveCaseButtonToggleClass","onReplaceKeydown","onPreserveCaseToggled","onReplaceCurrent","onReplaceAll","UpDownButtons","nextBinding","keyBindings","next","prevBinding","previous","nextKeys","CommandRegistry","formatKeystroke","keys","prevKeys","prevShortcut","nextShortcut","upButton","isEnabled","onHighlightPrevious","disabled","caretUpEmptyThinIcon","downButton","onHighlightNext","caretDownEmptyThinIcon","SearchIndices","FilterToggle","visible","icon","anyEnabled","filterDotIcon","filterIcon","toggleVisible","height","width","FilterSelection","description","type","checked","onToggle","SearchOverlay","_onSearchChange","searchText","onSearchChanged","_onSearchKeydown","keyCode","stopPropagation","preventDefault","ctrlKey","textarea","_insertNewLine","shiftKey","_onReplaceKeydown","start","end","selectionStart","selectionEnd","setRangeText","_onClose","onClose","_onReplaceToggled","replaceEntryVisible","supportReplace","onFilterChanged","onReplaceEntryShown","_toggleFiltersVisibility","onFiltersVisibilityChanged","filtersVisible","render","showReplace","hasFilters","filterToggle","some","selectionBinding","toggleSearchInSelection","selectionKeys","selectionKeyHint","disabledDescription","async","caretDownIcon","caretRightIcon","elementPosition","searchInputRef","closeIcon","onReplaceChanged","errorMessage","SearchDocumentView","VDomRenderer","model","_showReplace","_showFilters","_closed","addClass","_searchInput","_keyBindings","closed","focusSearchInput","setSearchText","setReplaceText","setReplaceInputVisibility","onCloseRequest","msg","update","setFiltersVisibility","UseSignal","signal","_renderOverlay","q","close","SearchProviderRegistry","_changed","_providerMap","Map","provider","set","DisposableDelegate","delete","getProvider","P","values","hasProvider","changed","ISearchProviderRegistry","Token"],"sourceRoot":""}