{"version":3,"file":"6522.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutItem.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/TopNav.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutInput.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutList.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutTitleItem.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/components/ShortcutUI.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/renderer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/shortcuts-extension/lib/index.js"],"sourcesContent":["/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { Platform } from '@lumino/domutils';\nimport * as React from 'react';\nimport { ShortcutInput } from './ShortcutInput';\nvar ShortCutLocation;\n(function (ShortCutLocation) {\n    ShortCutLocation[ShortCutLocation[\"Left\"] = 0] = \"Left\";\n    ShortCutLocation[ShortCutLocation[\"Right\"] = 1] = \"Right\";\n})(ShortCutLocation || (ShortCutLocation = {}));\n/** Describe commands that are used by shortcuts */\nfunction getCommands(trans) {\n    return {\n        shortcutEditLeft: {\n            commandId: 'shortcutui:EditLeft',\n            label: trans.__('Edit First'),\n            caption: trans.__('Edit existing shortcut')\n        },\n        shortcutEditRight: {\n            commandId: 'shortcutui:EditRight',\n            label: trans.__('Edit Second'),\n            caption: trans.__('Edit existing shortcut')\n        },\n        shortcutEdit: {\n            commandId: 'shortcutui:Edit',\n            label: trans.__('Edit'),\n            caption: trans.__('Edit existing shortcut')\n        },\n        shortcutAddNew: {\n            commandId: 'shortcutui:AddNew',\n            label: trans.__('Add'),\n            caption: trans.__('Add new shortcut')\n        },\n        shortcutAddAnother: {\n            commandId: 'shortcutui:AddAnother',\n            label: trans.__('Add'),\n            caption: trans.__('Add another shortcut')\n        },\n        shortcutReset: {\n            commandId: 'shortcutui:Reset',\n            label: trans.__('Reset'),\n            caption: trans.__('Reset shortcut back to default')\n        }\n    };\n}\n/** React component for each command shortcut item */\nexport class ShortcutItem extends React.Component {\n    constructor(props) {\n        super(props);\n        /** Toggle display state of input box */\n        this.toggleInputNew = () => {\n            this.setState({\n                displayNewInput: !this.state.displayNewInput\n            });\n        };\n        this.toggleInputReplaceLeft = () => {\n            this.setState({\n                displayReplaceInputLeft: !this.state.displayReplaceInputLeft\n            });\n        };\n        this.toggleInputReplaceRight = () => {\n            this.setState({\n                displayReplaceInputRight: !this.state.displayReplaceInputRight\n            });\n        };\n        this.addCommandIfNeeded = (command, action) => {\n            const key = this.props.shortcut.commandName + '_' + this.props.shortcut.selector;\n            if (!this.props.external.hasCommand(command.commandId + key)) {\n                this.props.external.addCommand(command.commandId + key, {\n                    label: command.label,\n                    caption: command.caption,\n                    execute: action\n                });\n            }\n        };\n        this.handleRightClick = (e) => {\n            this.addCommandIfNeeded(this._commands.shortcutEdit, () => this.toggleInputReplaceLeft());\n            this.addCommandIfNeeded(this._commands.shortcutEditLeft, () => this.toggleInputReplaceLeft());\n            this.addCommandIfNeeded(this._commands.shortcutEditRight, () => this.toggleInputReplaceRight());\n            this.addCommandIfNeeded(this._commands.shortcutAddNew, () => this.toggleInputNew());\n            this.addCommandIfNeeded(this._commands.shortcutAddAnother, () => this.toggleInputNew());\n            this.addCommandIfNeeded(this._commands.shortcutReset, () => this.props.resetShortcut(this.props.shortcut));\n            const key = this.props.shortcut.commandName + '_' + this.props.shortcut.selector;\n            this.setState({\n                numShortcuts: Object.keys(this.props.shortcut.keys).filter(key => this.props.shortcut.keys[key][0] !== '').length\n            }, () => {\n                let commandList = [];\n                if (this.state.numShortcuts == 2) {\n                    commandList = commandList.concat([\n                        this._commands.shortcutEditLeft.commandId + key,\n                        this._commands.shortcutEditRight.commandId + key\n                    ]);\n                }\n                else if (this.state.numShortcuts == 1) {\n                    commandList = commandList.concat([\n                        this._commands.shortcutEdit.commandId + key,\n                        this._commands.shortcutAddAnother.commandId + key\n                    ]);\n                }\n                else {\n                    commandList = commandList.concat([\n                        this._commands.shortcutAddNew.commandId + key\n                    ]);\n                }\n                if (this.props.shortcut.source === 'Custom') {\n                    commandList = commandList.concat([\n                        this._commands.shortcutReset.commandId + key\n                    ]);\n                }\n                this.props.contextMenu(e, commandList);\n            });\n        };\n        /** Transform special key names into unicode characters */\n        this.toSymbols = (value) => {\n            return value.split(' ').reduce((result, key) => {\n                if (key === 'Ctrl') {\n                    return (result + ' ⌃').trim();\n                }\n                else if (key === 'Alt') {\n                    return (result + ' ⌥').trim();\n                }\n                else if (key === 'Shift') {\n                    return (result + ' ⇧').trim();\n                }\n                else if (key === 'Accel' && Platform.IS_MAC) {\n                    return (result + ' ⌘').trim();\n                }\n                else if (key === 'Accel') {\n                    return (result + ' ⌃').trim();\n                }\n                else {\n                    return (result + ' ' + key).trim();\n                }\n            }, '');\n        };\n        this._commands = getCommands(props.external.translator.load('jupyterlab'));\n        this.state = {\n            displayNewInput: false,\n            displayReplaceInputLeft: false,\n            displayReplaceInputRight: false,\n            numShortcuts: Object.keys(this.props.shortcut.keys).filter(key => this.props.shortcut.keys[key][0] !== '').length\n        };\n    }\n    getErrorRow() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-Row\" },\n            React.createElement(\"div\", { className: \"jp-Shortcuts-ConflictContainer\" },\n                React.createElement(\"div\", { className: \"jp-Shortcuts-ErrorMessage\" }, trans.__('Shortcut already in use by %1. Overwrite it?', this.props.shortcut.takenBy.takenByLabel)),\n                React.createElement(\"div\", { className: \"jp-Shortcuts-ErrorButton\" },\n                    React.createElement(\"button\", null, trans.__('Cancel')),\n                    React.createElement(\"button\", { id: \"no-blur\", onClick: () => {\n                            var _a;\n                            (_a = document.getElementById('overwrite')) === null || _a === void 0 ? void 0 : _a.click();\n                        } }, trans.__('Overwrite'))))));\n    }\n    getCategoryCell() {\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-Cell\" }, this.props.shortcut.category));\n    }\n    getLabelCell() {\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-Cell\" },\n            React.createElement(\"div\", { className: \"jp-label\" }, this.props.shortcut.label)));\n    }\n    getResetShortCutLink() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"a\", { className: \"jp-Shortcuts-Reset\", onClick: () => this.props.resetShortcut(this.props.shortcut) }, trans.__('Reset')));\n    }\n    getSourceCell() {\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-Cell\" },\n            React.createElement(\"div\", { className: \"jp-Shortcuts-SourceCell\" }, this.props.shortcut.source),\n            this.props.shortcut.source === 'Custom' && this.getResetShortCutLink()));\n    }\n    getOptionalSelectorCell() {\n        return this.props.showSelectors ? (React.createElement(\"div\", { className: \"jp-Shortcuts-Cell\" },\n            React.createElement(\"div\", { className: \"jp-selector\" }, this.props.shortcut.selector))) : null;\n    }\n    getClassNameForShortCuts(nonEmptyKeys) {\n        const classes = ['jp-Shortcuts-ShortcutCell'];\n        switch (nonEmptyKeys.length) {\n            case 1:\n                classes.push('jp-Shortcuts-SingleCell');\n                break;\n            case 0:\n                classes.push('jp-Shortcuts-EmptyCell');\n                break;\n        }\n        return classes.join(' ');\n    }\n    getToggleInputReplaceMethod(location) {\n        switch (location) {\n            case ShortCutLocation.Left:\n                return this.toggleInputReplaceLeft;\n            case ShortCutLocation.Right:\n                return this.toggleInputReplaceRight;\n        }\n    }\n    getDisplayReplaceInput(location) {\n        switch (location) {\n            case ShortCutLocation.Left:\n                return this.state.displayReplaceInputLeft;\n            case ShortCutLocation.Right:\n                return this.state.displayReplaceInputRight;\n        }\n    }\n    getOrDiplayIfNeeded(nonEmptyKeys) {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"div\", { className: nonEmptyKeys.length == 2 || this.state.displayNewInput\n                ? 'jp-Shortcuts-OrTwo'\n                : 'jp-Shortcuts-Or', id: nonEmptyKeys.length == 2\n                ? 'secondor'\n                : this.state.displayReplaceInputLeft\n                    ? 'noor'\n                    : 'or' }, trans.__('or')));\n    }\n    getShortCutAsInput(key, location) {\n        return (React.createElement(ShortcutInput, { handleUpdate: this.props.handleUpdate, deleteShortcut: this.props.deleteShortcut, toggleInput: this.getToggleInputReplaceMethod(location), shortcut: this.props.shortcut, shortcutId: key, toSymbols: this.toSymbols, keyBindingsUsed: this.props.keyBindingsUsed, sortConflict: this.props.sortConflict, clearConflicts: this.props.clearConflicts, displayInput: this.getDisplayReplaceInput(location), newOrReplace: 'replace', placeholder: this.toSymbols(this.props.shortcut.keys[key].join(', ')), translator: this.props.external.translator }));\n    }\n    getShortCutForDisplayOnly(key) {\n        return this.props.shortcut.keys[key].map((keyBinding, index) => (React.createElement(\"div\", { className: \"jp-Shortcuts-ShortcutKeysContainer\", key: index },\n            React.createElement(\"div\", { className: \"jp-Shortcuts-ShortcutKeys\" }, this.toSymbols(keyBinding)),\n            index + 1 < this.props.shortcut.keys[key].length ? (React.createElement(\"div\", { className: \"jp-Shortcuts-Comma\" }, \",\")) : null)));\n    }\n    isLocationBeingEdited(location) {\n        return ((location === ShortCutLocation.Left &&\n            this.state.displayReplaceInputLeft) ||\n            (location === ShortCutLocation.Right &&\n                this.state.displayReplaceInputRight));\n    }\n    getLocationFromIndex(index) {\n        return index === 0 ? ShortCutLocation.Left : ShortCutLocation.Right;\n    }\n    getDivForKey(index, key, nonEmptyKeys) {\n        const location = this.getLocationFromIndex(index);\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-ShortcutContainer\", key: this.props.shortcut.id + '_' + index, onClick: this.getToggleInputReplaceMethod(location) },\n            this.isLocationBeingEdited(location)\n                ? this.getShortCutAsInput(key, location)\n                : this.getShortCutForDisplayOnly(key),\n            location === ShortCutLocation.Left &&\n                this.getOrDiplayIfNeeded(nonEmptyKeys)));\n    }\n    getAddLink() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"a\", { className: !this.state.displayNewInput ? 'jp-Shortcuts-Plus' : '', onClick: () => {\n                this.toggleInputNew(), this.props.clearConflicts();\n            }, id: \"add-link\" }, trans.__('Add')));\n    }\n    getInputBoxWhenToggled() {\n        return this.state.displayNewInput ? (React.createElement(ShortcutInput, { handleUpdate: this.props.handleUpdate, deleteShortcut: this.props.deleteShortcut, toggleInput: this.toggleInputNew, shortcut: this.props.shortcut, shortcutId: \"\", toSymbols: this.toSymbols, keyBindingsUsed: this.props.keyBindingsUsed, sortConflict: this.props.sortConflict, clearConflicts: this.props.clearConflicts, displayInput: this.state.displayNewInput, newOrReplace: 'new', placeholder: '', translator: this.props.external.translator })) : (React.createElement(\"div\", null));\n    }\n    getShortCutsCell(nonEmptyKeys) {\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-Cell\" },\n            React.createElement(\"div\", { className: this.getClassNameForShortCuts(nonEmptyKeys) },\n                nonEmptyKeys.map((key, index) => this.getDivForKey(index, key, nonEmptyKeys)),\n                nonEmptyKeys.length === 1 &&\n                    !this.state.displayNewInput &&\n                    !this.state.displayReplaceInputLeft &&\n                    this.getAddLink(),\n                nonEmptyKeys.length === 0 &&\n                    !this.state.displayNewInput &&\n                    this.getAddLink(),\n                this.getInputBoxWhenToggled())));\n    }\n    render() {\n        const nonEmptyKeys = Object.keys(this.props.shortcut.keys).filter((key) => this.props.shortcut.keys[key][0] !== '');\n        if (this.props.shortcut.id === 'error_row') {\n            return this.getErrorRow();\n        }\n        else {\n            return (React.createElement(\"div\", { className: \"jp-Shortcuts-Row\", onContextMenu: e => {\n                    e.persist();\n                    this.handleRightClick(e);\n                } },\n                this.getCategoryCell(),\n                this.getLabelCell(),\n                this.getShortCutsCell(nonEmptyKeys),\n                this.getSourceCell(),\n                this.getOptionalSelectorCell()));\n        }\n    }\n}\n//# sourceMappingURL=ShortcutItem.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { InputGroup } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport { ShortcutTitleItem } from './ShortcutTitleItem';\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.showSelectors = 'shortcutui:showSelectors';\n    CommandIDs.resetAll = 'shortcutui:resetAll';\n})(CommandIDs || (CommandIDs = {}));\nfunction Symbols(props) {\n    return (React.createElement(\"div\", { className: \"jp-Shortcuts-Symbols\" },\n        React.createElement(\"table\", null,\n            React.createElement(\"tbody\", null,\n                React.createElement(\"tr\", null,\n                    React.createElement(\"td\", null,\n                        React.createElement(\"kbd\", null, \"Cmd\")),\n                    React.createElement(\"td\", null, \"\\u2318\"),\n                    React.createElement(\"td\", null,\n                        React.createElement(\"kbd\", null, \"Ctrl\")),\n                    React.createElement(\"td\", null, \"\\u2303\")),\n                React.createElement(\"tr\", null,\n                    React.createElement(\"td\", null,\n                        React.createElement(\"kbd\", null, \"Alt\")),\n                    React.createElement(\"td\", null, \"\\u2325\"),\n                    React.createElement(\"td\", null,\n                        React.createElement(\"kbd\", null, \"Shift\")),\n                    React.createElement(\"td\", null, \"\\u21E7\"))))));\n}\nfunction AdvancedOptions(props) {\n    const trans = props.translator.load('jupyterlab');\n    return (React.createElement(\"div\", { className: \"jp-Shortcuts-AdvancedOptions\" },\n        React.createElement(\"a\", { className: \"jp-Shortcuts-AdvancedOptionsLink\", onClick: () => props.toggleSelectors() }, props.showSelectors\n            ? trans.__('Hide Selectors')\n            : trans.__('Show Selectors')),\n        React.createElement(\"a\", { className: \"jp-Shortcuts-AdvancedOptionsLink\", onClick: () => props.resetShortcuts() }, trans.__('Reset All'))));\n}\n/** React component for top navigation */\nexport class TopNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addMenuCommands();\n        this.menu = this.props.external.createMenu();\n        this.menu.addItem({ command: CommandIDs.showSelectors });\n        this.menu.addItem({ command: CommandIDs.resetAll });\n    }\n    addMenuCommands() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        if (!this.props.external.hasCommand(CommandIDs.showSelectors)) {\n            this.props.external.addCommand(CommandIDs.showSelectors, {\n                label: trans.__('Toggle Selectors'),\n                caption: trans.__('Toggle command selectors'),\n                execute: () => {\n                    this.props.toggleSelectors();\n                }\n            });\n        }\n        if (!this.props.external.hasCommand(CommandIDs.resetAll)) {\n            this.props.external.addCommand(CommandIDs.resetAll, {\n                label: trans.__('Reset All'),\n                caption: trans.__('Reset all shortcuts'),\n                execute: () => {\n                    this.props.resetShortcuts();\n                }\n            });\n        }\n    }\n    getShortCutTitleItem(title) {\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-Cell\" },\n            React.createElement(ShortcutTitleItem, { title: title, updateSort: this.props.updateSort, active: this.props.currentSort })));\n    }\n    render() {\n        const trans = this.props.external.translator.load('jupyterlab');\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-Top\" },\n            React.createElement(\"div\", { className: \"jp-Shortcuts-TopNav\" },\n                React.createElement(Symbols, null),\n                React.createElement(InputGroup, { className: \"jp-Shortcuts-Search\", \"aria-label\": trans.__('Search shortcuts'), type: \"text\", onChange: event => this.props.updateSearchQuery(event), placeholder: trans.__('Search…'), rightIcon: \"ui-components:search\" }),\n                React.createElement(AdvancedOptions, { toggleSelectors: this.props.toggleSelectors, showSelectors: this.props.showSelectors, resetShortcuts: this.props.resetShortcuts, menu: this.menu, translator: this.props.external.translator })),\n            React.createElement(\"div\", { className: \"jp-Shortcuts-HeaderRowContainer\" },\n                React.createElement(\"div\", { className: \"jp-Shortcuts-HeaderRow\" },\n                    this.getShortCutTitleItem(trans.__('Category')),\n                    this.getShortCutTitleItem(trans.__('Command')),\n                    React.createElement(\"div\", { className: \"jp-Shortcuts-Cell\" },\n                        React.createElement(\"div\", { className: \"title-div\" }, trans.__('Shortcut'))),\n                    this.getShortCutTitleItem(trans.__('Source')),\n                    this.props.showSelectors &&\n                        this.getShortCutTitleItem(trans.__('Selectors'))))));\n    }\n}\n//# sourceMappingURL=TopNav.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport * as React from 'react';\nimport { EN_US } from '@lumino/keyboard';\nimport { checkIcon, errorIcon } from '@jupyterlab/ui-components';\n/** Object for shortcut items */\nexport class ShortcutObject {\n    constructor() {\n        this.commandName = '';\n        this.label = '';\n        this.keys = {};\n        this.source = '';\n        this.selector = '';\n        this.category = '';\n        this.id = '';\n        this.numberOfShortcuts = 0;\n        this.hasConflict = false;\n    }\n    get(sortCriteria) {\n        if (sortCriteria === 'label') {\n            return this.label;\n        }\n        else if (sortCriteria === 'selector') {\n            return this.selector;\n        }\n        else if (sortCriteria === 'category') {\n            return this.category;\n        }\n        else if (sortCriteria === 'source') {\n            return this.source;\n        }\n        else {\n            return '';\n        }\n    }\n}\n/** Object for conflicting shortcut error messages */\nexport class ErrorObject extends ShortcutObject {\n    constructor() {\n        super();\n        this.takenBy = new TakenByObject();\n    }\n}\n/** Object for showing which shortcut conflicts with the new one */\nexport class TakenByObject {\n    constructor(shortcut) {\n        if (shortcut) {\n            this.takenBy = shortcut;\n            this.takenByKey = '';\n            this.takenByLabel = shortcut.category + ': ' + shortcut.label;\n            this.id = shortcut.commandName + '_' + shortcut.selector;\n        }\n        else {\n            this.takenBy = new ShortcutObject();\n            this.takenByKey = '';\n            this.takenByLabel = '';\n            this.id = '';\n        }\n    }\n}\nexport class ShortcutInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdate = () => {\n            let keys = this.state.keys;\n            keys.push(this.state.currentChain);\n            this.setState({ keys: keys });\n            this.props.handleUpdate(this.props.shortcut, this.state.keys);\n        };\n        this.handleOverwrite = async () => {\n            this.props\n                .deleteShortcut(this.state.takenByObject.takenBy, this.state.takenByObject.takenByKey)\n                .then(this.handleUpdate());\n        };\n        this.handleReplace = async () => {\n            let keys = this.state.keys;\n            keys.push(this.state.currentChain);\n            this.props.toggleInput();\n            await this.props.deleteShortcut(this.props.shortcut, this.props.shortcutId);\n            this.props.handleUpdate(this.props.shortcut, keys);\n        };\n        /** Parse user input for chained shortcuts */\n        this.parseChaining = (event, value, userInput, keys, currentChain) => {\n            let key = EN_US.keyForKeydownEvent(event.nativeEvent);\n            const modKeys = ['Shift', 'Control', 'Alt', 'Meta', 'Ctrl', 'Accel'];\n            if (event.key === 'Backspace') {\n                userInput = '';\n                value = '';\n                keys = [];\n                currentChain = '';\n                this.setState({\n                    value: value,\n                    userInput: userInput,\n                    keys: keys,\n                    currentChain: currentChain\n                });\n            }\n            else if (event.key !== 'CapsLock') {\n                const lastKey = userInput\n                    .substr(userInput.lastIndexOf(' ') + 1, userInput.length)\n                    .trim();\n                /** if last key was not a modefier then there is a chain */\n                if (modKeys.lastIndexOf(lastKey) === -1 && lastKey != '') {\n                    userInput = userInput + ',';\n                    keys.push(currentChain);\n                    currentChain = '';\n                    /** check if a modefier key was held down through chain */\n                    if (event.ctrlKey && event.key != 'Control') {\n                        userInput = (userInput + ' Ctrl').trim();\n                        currentChain = (currentChain + ' Ctrl').trim();\n                    }\n                    if (event.metaKey && event.key != 'Meta') {\n                        userInput = (userInput + ' Accel').trim();\n                        currentChain = (currentChain + ' Accel').trim();\n                    }\n                    if (event.altKey && event.key != 'Alt') {\n                        userInput = (userInput + ' Alt').trim();\n                        currentChain = (currentChain + ' Alt').trim();\n                    }\n                    if (event.shiftKey && event.key != 'Shift') {\n                        userInput = (userInput + ' Shift').trim();\n                        currentChain = (currentChain + ' Shift').trim();\n                    }\n                    /** if not a modefier key, add to user input and current chain */\n                    if (modKeys.lastIndexOf(event.key) === -1) {\n                        userInput = (userInput + ' ' + key).trim();\n                        currentChain = (currentChain + ' ' + key).trim();\n                        /** if a modefier key, add to user input and current chain */\n                    }\n                    else {\n                        if (event.key === 'Meta') {\n                            userInput = (userInput + ' Accel').trim();\n                            currentChain = (currentChain + ' Accel').trim();\n                        }\n                        else if (event.key === 'Control') {\n                            userInput = (userInput + ' Ctrl').trim();\n                            currentChain = (currentChain + ' Ctrl').trim();\n                        }\n                        else if (event.key === 'Shift') {\n                            userInput = (userInput + ' Shift').trim();\n                            currentChain = (currentChain + ' Shift').trim();\n                        }\n                        else if (event.key === 'Alt') {\n                            userInput = (userInput + ' Alt').trim();\n                            currentChain = (currentChain + ' Alt').trim();\n                        }\n                        else {\n                            userInput = (userInput + ' ' + event.key).trim();\n                            currentChain = (currentChain + ' ' + event.key).trim();\n                        }\n                    }\n                    /** if not a chain, add the key to user input and current chain */\n                }\n                else {\n                    /** if modefier key, rename */\n                    if (event.key === 'Control') {\n                        userInput = (userInput + ' Ctrl').trim();\n                        currentChain = (currentChain + ' Ctrl').trim();\n                    }\n                    else if (event.key === 'Meta') {\n                        userInput = (userInput + ' Accel').trim();\n                        currentChain = (currentChain + ' Accel').trim();\n                    }\n                    else if (event.key === 'Shift') {\n                        userInput = (userInput + ' Shift').trim();\n                        currentChain = (currentChain + ' Shift').trim();\n                    }\n                    else if (event.key === 'Alt') {\n                        userInput = (userInput + ' Alt').trim();\n                        currentChain = (currentChain + ' Alt').trim();\n                        /** if not a modefier key, add it regularly */\n                    }\n                    else {\n                        userInput = (userInput + ' ' + key).trim();\n                        currentChain = (currentChain + ' ' + key).trim();\n                    }\n                }\n            }\n            /** update state of keys and currentChain */\n            this.setState({\n                keys: keys,\n                currentChain: currentChain\n            });\n            return [userInput, keys, currentChain];\n        };\n        /**\n         * Check if shorcut being typed will work\n         * (does not end with ctrl, alt, command, or shift)\n         * */\n        this.checkNonFunctional = (shortcut) => {\n            const dontEnd = ['Ctrl', 'Alt', 'Accel', 'Shift'];\n            const shortcutKeys = this.state.currentChain.split(' ');\n            const last = shortcutKeys[shortcutKeys.length - 1];\n            this.setState({\n                isFunctional: !(dontEnd.indexOf(last) !== -1)\n            });\n            return dontEnd.indexOf(last) !== -1;\n        };\n        /** Check if shortcut being typed is already taken */\n        this.checkShortcutAvailability = (userInput, keys, currentChain) => {\n            /** First, check whole shortcut */\n            let isAvailable = Object.keys(this.props.keyBindingsUsed).indexOf(keys.join(' ') + currentChain + '_' + this.props.shortcut.selector) === -1 || userInput === '';\n            let takenByObject = new TakenByObject();\n            if (isAvailable) {\n                /** Next, check each piece of a chain */\n                for (let binding of keys) {\n                    if (Object.keys(this.props.keyBindingsUsed).indexOf(binding + '_' + this.props.shortcut.selector) !== -1 &&\n                        binding !== '') {\n                        isAvailable = false;\n                        takenByObject =\n                            this.props.keyBindingsUsed[binding + '_' + this.props.shortcut.selector];\n                        break;\n                    }\n                }\n                /** Check current chain */\n                if (isAvailable &&\n                    Object.keys(this.props.keyBindingsUsed).indexOf(currentChain + '_' + this.props.shortcut.selector) !== -1 &&\n                    currentChain !== '') {\n                    isAvailable = false;\n                    takenByObject =\n                        this.props.keyBindingsUsed[currentChain + '_' + this.props.shortcut.selector];\n                }\n                /** If unavailable set takenByObject */\n            }\n            else {\n                takenByObject =\n                    this.props.keyBindingsUsed[keys.join(' ') + currentChain + '_' + this.props.shortcut.selector];\n            }\n            /** allow to set shortcut to what it initially was if replacing */\n            if (!isAvailable) {\n                if (takenByObject.takenBy.id === this.props.shortcut.id &&\n                    this.props.newOrReplace === 'replace') {\n                    isAvailable = true;\n                    takenByObject = new TakenByObject();\n                }\n            }\n            this.setState({ isAvailable: isAvailable });\n            return takenByObject;\n        };\n        /** Parse and normalize user input */\n        this.handleInput = (event) => {\n            event.preventDefault();\n            this.setState({ selected: false });\n            const parsed = this.parseChaining(event, this.state.value, this.state.userInput, this.state.keys, this.state.currentChain);\n            const userInput = parsed[0];\n            const keys = parsed[1];\n            const currentChain = parsed[2];\n            const value = this.props.toSymbols(userInput);\n            let takenByObject = this.checkShortcutAvailability(userInput, keys, currentChain);\n            this.checkConflict(takenByObject, keys);\n            this.setState({\n                value: value,\n                userInput: userInput,\n                takenByObject: takenByObject,\n                keys: keys,\n                currentChain: currentChain\n            }, () => this.checkNonFunctional(this.state.userInput));\n        };\n        this.handleBlur = (event) => {\n            if (event.relatedTarget === null ||\n                (event.relatedTarget.id !== 'no-blur' &&\n                    event.relatedTarget.id !== 'overwrite')) {\n                this.props.toggleInput();\n                this.setState({\n                    value: '',\n                    userInput: ''\n                });\n                this.props.clearConflicts();\n            }\n        };\n        this.state = {\n            value: this.props.placeholder,\n            userInput: '',\n            isAvailable: true,\n            isFunctional: this.props.newOrReplace === 'replace',\n            takenByObject: new TakenByObject(),\n            keys: new Array(),\n            currentChain: '',\n            selected: true\n        };\n    }\n    checkConflict(takenByObject, keys) {\n        if (takenByObject.id !== '' &&\n            takenByObject.takenBy.id !== this.props.shortcut.id) {\n            this.props.sortConflict(this.props.shortcut, takenByObject, takenByObject.takenByLabel, '');\n        }\n        else {\n            this.props.clearConflicts();\n        }\n    }\n    render() {\n        const trans = this.props.translator.load('jupyterlab');\n        let inputClassName = 'jp-Shortcuts-Input';\n        if (!this.state.isAvailable) {\n            inputClassName += ' jp-mod-unavailable-Input';\n        }\n        return (React.createElement(\"div\", { className: this.props.displayInput\n                ? this.props.newOrReplace === 'new'\n                    ? 'jp-Shortcuts-InputBox jp-Shortcuts-InputBoxNew'\n                    : 'jp-Shortcuts-InputBox'\n                : 'jp-mod-hidden', onBlur: event => this.handleBlur(event) },\n            React.createElement(\"div\", { tabIndex: 0, id: \"no-blur\", className: inputClassName, onKeyDown: this.handleInput, ref: input => input && input.focus(), \"data-lm-suppress-shortcuts\": \"true\" },\n                React.createElement(\"p\", { className: this.state.selected && this.props.newOrReplace === 'replace'\n                        ? 'jp-Shortcuts-InputText jp-mod-selected-InputText'\n                        : this.state.value === ''\n                            ? 'jp-Shortcuts-InputText jp-mod-waiting-InputText'\n                            : 'jp-Shortcuts-InputText' }, this.state.value === ''\n                    ? trans.__('press keys')\n                    : this.state.value)),\n            React.createElement(\"button\", { className: !this.state.isFunctional\n                    ? 'jp-Shortcuts-Submit jp-mod-defunc-Submit'\n                    : !this.state.isAvailable\n                        ? 'jp-Shortcuts-Submit jp-mod-conflict-Submit'\n                        : 'jp-Shortcuts-Submit', id: 'no-blur', disabled: !this.state.isAvailable || !this.state.isFunctional, onClick: () => {\n                    if (this.props.newOrReplace === 'new') {\n                        this.handleUpdate();\n                        this.setState({\n                            value: '',\n                            keys: [],\n                            currentChain: ''\n                        });\n                        this.props.toggleInput();\n                    }\n                    else {\n                        /** don't replace if field has not been edited */\n                        if (this.state.selected) {\n                            this.props.toggleInput();\n                            this.setState({\n                                value: '',\n                                userInput: ''\n                            });\n                            this.props.clearConflicts();\n                        }\n                        else {\n                            void this.handleReplace();\n                        }\n                    }\n                } }, this.state.isAvailable ? React.createElement(checkIcon.react, null) : React.createElement(errorIcon.react, null)),\n            !this.state.isAvailable && (React.createElement(\"button\", { hidden: true, id: \"overwrite\", onClick: () => {\n                    void this.handleOverwrite();\n                    this.props.clearConflicts();\n                    this.props.toggleInput();\n                } }, trans.__('Overwrite')))));\n    }\n}\n//# sourceMappingURL=ShortcutInput.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport * as React from 'react';\nimport { ShortcutItem } from './ShortcutItem';\nconst TOPNAV_HEIGHT = 115;\n/** React component for list of shortcuts */\nexport class ShortcutList extends React.Component {\n    render() {\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-ShortcutListContainer\", style: {\n                height: `${this.props.height - TOPNAV_HEIGHT}px`\n            }, id: \"shortcutListContainer\" },\n            React.createElement(\"div\", { className: \"jp-Shortcuts-ShortcutList\" }, this.props.shortcuts.map((shortcut) => {\n                return (React.createElement(ShortcutItem, { key: shortcut.commandName + '_' + shortcut.selector, resetShortcut: this.props.resetShortcut, shortcut: shortcut, handleUpdate: this.props.handleUpdate, deleteShortcut: this.props.deleteShortcut, showSelectors: this.props.showSelectors, keyBindingsUsed: this.props.keyBindingsUsed, sortConflict: this.props.sortConflict, clearConflicts: this.props.clearConflicts, contextMenu: this.props.contextMenu, external: this.props.external }));\n            }))));\n    }\n}\n//# sourceMappingURL=ShortcutList.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { caretDownEmptyThinIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nexport class ShortcutTitleItem extends React.Component {\n    render() {\n        return (React.createElement(\"div\", { className: this.props.title.toLowerCase() === this.props.active\n                ? 'jp-Shortcuts-Header jp-Shortcuts-CurrentHeader'\n                : 'jp-Shortcuts-Header', onClick: () => this.props.updateSort(this.props.title.toLowerCase()) },\n            this.props.title,\n            React.createElement(caretDownEmptyThinIcon.react, { className: 'jp-Shortcuts-SortButton jp-ShortcutTitleItem-sortButton' })));\n    }\n}\n//# sourceMappingURL=ShortcutTitleItem.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { ArrayExt, StringExt } from '@lumino/algorithm';\nimport { ShortcutList } from './ShortcutList';\nimport { TopNav } from './TopNav';\nimport * as React from 'react';\nimport { ErrorObject, ShortcutObject, TakenByObject } from './ShortcutInput';\n/** Normalize the query text for a fuzzy search. */\nfunction normalizeQuery(text) {\n    return text.replace(/\\s+/g, '').toLowerCase();\n}\n/** Perform a fuzzy search on a single command item. */\nfunction fuzzySearch(item, query) {\n    // Create the source text to be searched.\n    const category = item.category.toLowerCase();\n    const label = item['label'].toLowerCase();\n    const source = `${category} ${label}`;\n    // Set up the match score and indices array.\n    let score = Infinity;\n    let indices = null;\n    // The regex for search word boundaries\n    const rgx = /\\b\\w/g;\n    // Search the source by word boundary.\n    // eslint-disable-next-line\n    while (true) {\n        // Find the next word boundary in the source.\n        const rgxMatch = rgx.exec(source);\n        // Break if there is no more source context.\n        if (!rgxMatch) {\n            break;\n        }\n        // Run the string match on the relevant substring.\n        const match = StringExt.matchSumOfDeltas(source, query, rgxMatch.index);\n        // Break if there is no match.\n        if (!match) {\n            break;\n        }\n        // Update the match if the score is better.\n        if (match && match.score <= score) {\n            score = match.score;\n            indices = match.indices;\n        }\n    }\n    // Bail if there was no match.\n    if (!indices || score === Infinity) {\n        return null;\n    }\n    // Compute the pivot index between category and label text.\n    const pivot = category.length + 1;\n    // Find the slice index to separate matched indices.\n    const j = ArrayExt.lowerBound(indices, pivot, (a, b) => a - b);\n    // Extract the matched category and label indices.\n    const categoryIndices = indices.slice(0, j);\n    const labelIndices = indices.slice(j);\n    // Adjust the label indices for the pivot offset.\n    for (let i = 0, n = labelIndices.length; i < n; ++i) {\n        labelIndices[i] -= pivot;\n    }\n    // Handle a pure label match.\n    if (categoryIndices.length === 0) {\n        return {\n            matchType: 0 /* MatchType.Label */,\n            categoryIndices: null,\n            labelIndices,\n            score,\n            item\n        };\n    }\n    // Handle a pure category match.\n    if (labelIndices.length === 0) {\n        return {\n            matchType: 1 /* MatchType.Category */,\n            categoryIndices,\n            labelIndices: null,\n            score,\n            item\n        };\n    }\n    // Handle a split match.\n    return {\n        matchType: 2 /* MatchType.Split */,\n        categoryIndices,\n        labelIndices,\n        score,\n        item\n    };\n}\n/** Perform a fuzzy match on an array of command items. */\nfunction matchItems(items, query) {\n    // Normalize the query text to lower case with no whitespace.\n    query = normalizeQuery(query);\n    // Create the array to hold the scores.\n    let scores = [];\n    // Iterate over the items and match against the query.\n    let itemList = Object.keys(items);\n    for (let i = 0, n = itemList.length; i < n; ++i) {\n        let item = items[itemList[i]];\n        // If the query is empty, all items are matched by default.\n        if (!query) {\n            scores.push({\n                matchType: 3 /* MatchType.Default */,\n                categoryIndices: null,\n                labelIndices: null,\n                score: 0,\n                item\n            });\n            continue;\n        }\n        // Run the fuzzy search for the item and query.\n        let score = fuzzySearch(item, query);\n        // Ignore the item if it is not a match.\n        if (!score) {\n            continue;\n        }\n        // Add the score to the results.\n        scores.push(score);\n    }\n    // Return the final array of scores.\n    return scores;\n}\n/** Transform SettingRegistry's shortcut list to list of ShortcutObjects */\nexport function getShortcutObjects(external, settings) {\n    const shortcuts = settings.composite\n        .shortcuts;\n    let shortcutObjects = {};\n    shortcuts.forEach((shortcut) => {\n        let key = shortcut.command + '_' + shortcut.selector;\n        if (Object.keys(shortcutObjects).indexOf(key) !== -1) {\n            let currentCount = shortcutObjects[key].numberOfShortcuts;\n            shortcutObjects[key].keys[currentCount] = shortcut.keys;\n            shortcutObjects[key].numberOfShortcuts++;\n        }\n        else {\n            let shortcutObject = new ShortcutObject();\n            shortcutObject.commandName = shortcut.command;\n            let label = external.getLabel(shortcut.command);\n            const commandParts = shortcut.command.split(':');\n            if (!label) {\n                // TODO needs translation\n                label =\n                    commandParts.length > 1 ? commandParts[1] : '(Command label missing)';\n            }\n            shortcutObject.label = label;\n            shortcutObject.category = commandParts[0];\n            shortcutObject.keys[0] = shortcut.keys;\n            shortcutObject.selector = shortcut.selector;\n            // TODO needs translation\n            shortcutObject.source = 'Default';\n            shortcutObject.id = key;\n            shortcutObject.numberOfShortcuts = 1;\n            shortcutObjects[key] = shortcutObject;\n        }\n    });\n    // find all the shortcuts that have custom settings\n    const userShortcuts = settings.user\n        .shortcuts;\n    userShortcuts.forEach((userSetting) => {\n        const command = userSetting.command;\n        const selector = userSetting.selector;\n        const keyTo = command + '_' + selector;\n        if (shortcutObjects[keyTo]) {\n            // TODO needs translation\n            shortcutObjects[keyTo].source = 'Custom';\n        }\n    });\n    return shortcutObjects;\n}\n/** Get list of all shortcut keybindings currently in use\n * An object where keys are unique keyBinding_selector and values are shortcut objects **/\nfunction getKeyBindingsUsed(shortcutObjects) {\n    let keyBindingsUsed = {};\n    Object.keys(shortcutObjects).forEach((shortcut) => {\n        Object.keys(shortcutObjects[shortcut].keys).forEach((key) => {\n            const takenBy = new TakenByObject(shortcutObjects[shortcut]);\n            takenBy.takenByKey = key;\n            keyBindingsUsed[shortcutObjects[shortcut].keys[key].join(' ') +\n                '_' +\n                shortcutObjects[shortcut].selector] = takenBy;\n        });\n    });\n    return keyBindingsUsed;\n}\n/** Top level React component for widget */\nexport class ShortcutUI extends React.Component {\n    constructor(props) {\n        super(props);\n        /** Set the current seach query */\n        this.updateSearchQuery = (event) => {\n            this.setState({\n                searchQuery: event.target['value']\n            }, () => this.setState({\n                filteredShortcutList: this._searchFilterShortcuts(this.state.shortcutList)\n            }, () => {\n                this.sortShortcuts();\n            }));\n        };\n        /** Reset all shortcuts to their defaults */\n        this.resetShortcuts = async () => {\n            const settings = await this.props.external.getAllShortCutSettings();\n            for (const key of Object.keys(settings.user)) {\n                await this.props.external.removeShortCut(key);\n            }\n            await this._refreshShortcutList();\n        };\n        /** Set new shortcut for command, refresh state */\n        this.handleUpdate = async (shortcutObject, keys) => {\n            const settings = await this.props.external.getAllShortCutSettings();\n            const userShortcuts = settings.user.shortcuts;\n            const newUserShortcuts = [];\n            let found = false;\n            for (let shortcut of userShortcuts) {\n                if (shortcut['command'] === shortcutObject.commandName &&\n                    shortcut['selector'] === shortcutObject.selector) {\n                    newUserShortcuts.push({\n                        command: shortcut['command'],\n                        selector: shortcut['selector'],\n                        keys: keys\n                    });\n                    found = true;\n                }\n                else {\n                    newUserShortcuts.push(shortcut);\n                }\n            }\n            if (!found) {\n                newUserShortcuts.push({\n                    command: shortcutObject.commandName,\n                    selector: shortcutObject.selector,\n                    keys: keys\n                });\n            }\n            await settings.set('shortcuts', newUserShortcuts);\n            await this._refreshShortcutList();\n        };\n        /** Delete shortcut for command, refresh state */\n        this.deleteShortcut = async (shortcutObject, shortcutId) => {\n            await this.handleUpdate(shortcutObject, ['']);\n            await this._refreshShortcutList();\n        };\n        /** Reset a specific shortcut to its default settings */\n        this.resetShortcut = async (shortcutObject) => {\n            const settings = await this.props.external.getAllShortCutSettings();\n            const userShortcuts = settings.user.shortcuts;\n            const newUserShortcuts = [];\n            for (let shortcut of userShortcuts) {\n                if (shortcut['command'] !== shortcutObject.commandName ||\n                    shortcut['selector'] !== shortcutObject.selector) {\n                    newUserShortcuts.push(shortcut);\n                }\n            }\n            await settings.set('shortcuts', newUserShortcuts);\n            await this._refreshShortcutList();\n        };\n        /** Toggles showing command selectors */\n        this.toggleSelectors = () => {\n            this.setState({ showSelectors: !this.state.showSelectors });\n        };\n        /** Set the current list sort order */\n        this.updateSort = (value) => {\n            if (value !== this.state.currentSort) {\n                this.setState({ currentSort: value }, this.sortShortcuts);\n            }\n        };\n        /** Sort shortcut list so that an error row is right below the one currently being set */\n        this.sortConflict = (newShortcut, takenBy) => {\n            const shortcutList = this.state.filteredShortcutList;\n            if (shortcutList.filter(shortcut => shortcut.id === 'error_row').length === 0) {\n                const errorRow = new ErrorObject();\n                errorRow.takenBy = takenBy;\n                errorRow.id = 'error_row';\n                shortcutList.splice(shortcutList.indexOf(newShortcut) + 1, 0, errorRow);\n                errorRow.hasConflict = true;\n                this.setState({ filteredShortcutList: shortcutList });\n            }\n        };\n        /** Remove conflict flag from all shortcuts */\n        this.clearConflicts = () => {\n            /** Remove error row */\n            const shortcutList = this.state.filteredShortcutList.filter(shortcut => shortcut.id !== 'error_row');\n            shortcutList.forEach((shortcut) => {\n                shortcut.hasConflict = false;\n            });\n            this.setState({ filteredShortcutList: shortcutList });\n        };\n        this.contextMenu = (event, commandIDs) => {\n            event.persist();\n            this.setState({\n                contextMenu: this.props.external.createMenu()\n            }, () => {\n                event.preventDefault();\n                for (let command of commandIDs) {\n                    this.state.contextMenu.addItem({ command });\n                }\n                this.state.contextMenu.open(event.clientX, event.clientY);\n            });\n        };\n        this.state = {\n            shortcutList: {},\n            filteredShortcutList: new Array(),\n            shortcutsFetched: false,\n            searchQuery: '',\n            showSelectors: false,\n            currentSort: 'category',\n            keyBindingsUsed: {},\n            contextMenu: this.props.external.createMenu()\n        };\n    }\n    /** Fetch shortcut list on mount */\n    componentDidMount() {\n        void this._refreshShortcutList();\n    }\n    /** Fetch shortcut list from SettingRegistry  */\n    async _refreshShortcutList() {\n        const shortcuts = await this.props.external.getAllShortCutSettings();\n        const shortcutObjects = getShortcutObjects(this.props.external, shortcuts);\n        this.setState({\n            shortcutList: shortcutObjects,\n            filteredShortcutList: this._searchFilterShortcuts(shortcutObjects),\n            shortcutsFetched: true\n        }, () => {\n            let keyBindingsUsed = getKeyBindingsUsed(shortcutObjects);\n            this.setState({ keyBindingsUsed });\n            this.sortShortcuts();\n        });\n    }\n    /** Filter shortcut list using current search query */\n    _searchFilterShortcuts(shortcutObjects) {\n        const filteredShortcuts = matchItems(shortcutObjects, this.state.searchQuery).map((item) => {\n            return item.item;\n        });\n        return filteredShortcuts;\n    }\n    /** Sort shortcut list using current sort property  */\n    sortShortcuts() {\n        const shortcuts = this.state.filteredShortcutList;\n        let filterCritera = this.state.currentSort;\n        if (filterCritera === 'command') {\n            filterCritera = 'label';\n        }\n        if (filterCritera !== '') {\n            shortcuts.sort((a, b) => {\n                const compareA = a.get(filterCritera);\n                const compareB = b.get(filterCritera);\n                if (compareA < compareB) {\n                    return -1;\n                }\n                else if (compareA > compareB) {\n                    return 1;\n                }\n                else {\n                    return a['label'] < b['label'] ? -1 : a['label'] > b['label'] ? 1 : 0;\n                }\n            });\n        }\n        this.setState({ filteredShortcutList: shortcuts });\n    }\n    render() {\n        if (!this.state.shortcutsFetched) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: \"jp-Shortcuts-ShortcutUI\", id: \"jp-shortcutui\" },\n            React.createElement(TopNav, { updateSearchQuery: this.updateSearchQuery, resetShortcuts: this.resetShortcuts, toggleSelectors: this.toggleSelectors, showSelectors: this.state.showSelectors, updateSort: this.updateSort, currentSort: this.state.currentSort, width: this.props.width, external: this.props.external }),\n            React.createElement(ShortcutList, { shortcuts: this.state.filteredShortcutList, resetShortcut: this.resetShortcut, handleUpdate: this.handleUpdate, deleteShortcut: this.deleteShortcut, showSelectors: this.state.showSelectors, keyBindingsUsed: this.state.keyBindingsUsed, sortConflict: this.sortConflict, clearConflicts: this.clearConflicts, height: this.props.height, contextMenu: this.contextMenu, external: this.props.external })));\n    }\n}\n//# sourceMappingURL=ShortcutUI.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport React from 'react';\nimport { ShortcutUI } from './components';\nexport const renderShortCut = (props) => {\n    return React.createElement(ShortcutUI, { external: props.external, height: 1000, width: 1000 });\n};\n//# sourceMappingURL=renderer.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module shortcuts-extension\n */\nimport { ISettingRegistry, SettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { IFormRendererRegistry } from '@jupyterlab/ui-components';\nimport { CommandRegistry } from '@lumino/commands';\nimport { JSONExt } from '@lumino/coreutils';\nimport { DisposableSet } from '@lumino/disposable';\nimport { Platform } from '@lumino/domutils';\nimport { Menu } from '@lumino/widgets';\nimport { renderShortCut } from './renderer';\nconst SHORTCUT_PLUGIN_ID = '@jupyterlab/shortcuts-extension:shortcuts';\nfunction getExternalForJupyterLab(settingRegistry, app, translator) {\n    const { commands } = app;\n    return {\n        translator,\n        getAllShortCutSettings: () => settingRegistry.load(SHORTCUT_PLUGIN_ID, true),\n        removeShortCut: (key) => settingRegistry.remove(SHORTCUT_PLUGIN_ID, key),\n        createMenu: () => new Menu({ commands }),\n        hasCommand: (id) => commands.hasCommand(id),\n        addCommand: (id, options) => commands.addCommand(id, options),\n        getLabel: (id) => commands.label(id)\n    };\n}\n/**\n * The default shortcuts extension.\n *\n * #### Notes\n * Shortcut values are stored in the setting system. The default values for each\n * shortcut are preset in the settings schema file of this extension.\n * Additionally, each shortcut can be individually set by the end user by\n * modifying its setting (either in the text editor or by modifying its\n * underlying JSON schema file).\n *\n * When setting shortcut selectors, there are two concepts to consider:\n * specificity and matchability. These two interact in sometimes\n * counterintuitive ways. Keyboard events are triggered from an element and\n * they propagate up the DOM until they reach the `documentElement` (`<body>`).\n *\n * When a registered shortcut sequence is fired, the shortcut manager checks\n * the node that fired the event and each of its ancestors until a node matches\n * one or more registered selectors. The *first* matching selector in the\n * chain of ancestors will invoke the shortcut handler and the traversal will\n * end at that point. If a node matches more than one selector, the handler for\n * whichever selector is more *specific* fires.\n * @see https://www.w3.org/TR/css3-selectors/#specificity\n *\n * The practical consequence of this is that a very broadly matching selector,\n * e.g. `'*'` or `'div'` may match and therefore invoke a handler *before* a\n * more specific selector. The most common pitfall is to use the universal\n * (`'*'`) selector. For almost any use case where a global keyboard shortcut is\n * required, using the `'body'` selector is more appropriate.\n */\nconst shortcuts = {\n    id: SHORTCUT_PLUGIN_ID,\n    description: 'Adds the keyboard shortcuts editor.',\n    requires: [ISettingRegistry],\n    optional: [ITranslator, IFormRendererRegistry],\n    activate: async (app, registry, translator, editorRegistry) => {\n        const translator_ = translator !== null && translator !== void 0 ? translator : nullTranslator;\n        const trans = translator_.load('jupyterlab');\n        const { commands } = app;\n        let canonical;\n        // Stores initial value of the shortcuts `default` value,\n        // which reflects the `overrides.json` contents.\n        let cannonicalOverrides;\n        let loaded = {};\n        if (editorRegistry) {\n            const component = {\n                fieldRenderer: (props) => {\n                    return renderShortCut({\n                        external: getExternalForJupyterLab(registry, app, translator_),\n                        ...props\n                    });\n                }\n            };\n            editorRegistry.addRenderer(`${shortcuts.id}.shortcuts`, component);\n        }\n        /**\n         * Populate the plugin's schema defaults.\n         */\n        function populate(schema) {\n            const commands = app.commands.listCommands().join('\\n');\n            if (!cannonicalOverrides) {\n                cannonicalOverrides = JSONExt.deepCopy(schema.properties.shortcuts.default);\n            }\n            loaded = {};\n            schema.properties.shortcuts.default = Object.keys(registry.plugins)\n                .map(plugin => {\n                const shortcuts = registry.plugins[plugin].schema['jupyter.lab.shortcuts'] || [];\n                loaded[plugin] = shortcuts;\n                return shortcuts;\n            })\n                .concat([cannonicalOverrides])\n                .reduce((acc, val) => {\n                if (Platform.IS_MAC) {\n                    return acc.concat(val);\n                }\n                else {\n                    // If platform is not MacOS, remove all shortcuts containing Cmd\n                    // as they will be modified; e.g. `Cmd A` becomes `A`\n                    return acc.concat(val.filter(shortcut => !shortcut.keys.some(key => {\n                        const { cmd } = CommandRegistry.parseKeystroke(key);\n                        return cmd;\n                    })));\n                }\n            }, []) // flatten one level\n                .sort((a, b) => a.command.localeCompare(b.command));\n            schema.properties.shortcuts.description = trans.__(`Note: To disable a system default shortcut,\ncopy it to User Preferences and add the\n\"disabled\" key, for example:\n{\n    \"command\": \"application:activate-next-tab\",\n    \"keys\": [\n        \"Ctrl Shift ]\"\n    ],\n    \"selector\": \"body\",\n    \"disabled\": true\n}\n\nList of commands followed by keyboard shortcuts:\n%1\n\nList of keyboard shortcuts:`, commands);\n        }\n        registry.pluginChanged.connect(async (sender, plugin) => {\n            if (plugin !== shortcuts.id) {\n                // If the plugin changed its shortcuts, reload everything.\n                const oldShortcuts = loaded[plugin];\n                const newShortcuts = registry.plugins[plugin].schema['jupyter.lab.shortcuts'] || [];\n                if (oldShortcuts === undefined ||\n                    !JSONExt.deepEqual(oldShortcuts, newShortcuts)) {\n                    // Empty the default values to avoid shortcut collisions.\n                    canonical = null;\n                    const schema = registry.plugins[shortcuts.id].schema;\n                    schema.properties.shortcuts.default = cannonicalOverrides;\n                    // Reload the settings.\n                    await registry.load(shortcuts.id, true);\n                }\n            }\n        });\n        // Transform the plugin object to return different schema than the default.\n        registry.transform(shortcuts.id, {\n            compose: plugin => {\n                var _a, _b, _c, _d;\n                // Only override the canonical schema the first time.\n                if (!canonical) {\n                    canonical = JSONExt.deepCopy(plugin.schema);\n                    populate(canonical);\n                }\n                const defaults = (_c = (_b = (_a = canonical.properties) === null || _a === void 0 ? void 0 : _a.shortcuts) === null || _b === void 0 ? void 0 : _b.default) !== null && _c !== void 0 ? _c : [];\n                const user = {\n                    shortcuts: (_d = plugin.data.user.shortcuts) !== null && _d !== void 0 ? _d : []\n                };\n                const composite = {\n                    shortcuts: SettingRegistry.reconcileShortcuts(defaults, user.shortcuts)\n                };\n                plugin.data = { composite, user };\n                return plugin;\n            },\n            fetch: plugin => {\n                // Only override the canonical schema the first time.\n                if (!canonical) {\n                    canonical = JSONExt.deepCopy(plugin.schema);\n                    populate(canonical);\n                }\n                return {\n                    data: plugin.data,\n                    id: plugin.id,\n                    raw: plugin.raw,\n                    schema: canonical,\n                    version: plugin.version\n                };\n            }\n        });\n        try {\n            // Repopulate the canonical variable after the setting registry has\n            // preloaded all initial plugins.\n            canonical = null;\n            const settings = await registry.load(shortcuts.id);\n            Private.loadShortcuts(commands, settings.composite);\n            settings.changed.connect(() => {\n                Private.loadShortcuts(commands, settings.composite);\n            });\n        }\n        catch (error) {\n            console.error(`Loading ${shortcuts.id} failed.`, error);\n        }\n    },\n    autoStart: true\n};\n/**\n * Export the shortcut plugin as default.\n */\nexport default shortcuts;\n/**\n * A namespace for private module data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The internal collection of currently loaded shortcuts.\n     */\n    let disposables;\n    /**\n     * Load the keyboard shortcuts from settings.\n     */\n    function loadShortcuts(commands, composite) {\n        var _a;\n        const shortcuts = ((_a = composite === null || composite === void 0 ? void 0 : composite.shortcuts) !== null && _a !== void 0 ? _a : []);\n        if (disposables) {\n            disposables.dispose();\n        }\n        disposables = shortcuts.reduce((acc, val) => {\n            const options = normalizeOptions(val);\n            if (options) {\n                acc.add(commands.addKeyBinding(options));\n            }\n            return acc;\n        }, new DisposableSet());\n    }\n    Private.loadShortcuts = loadShortcuts;\n    /**\n     * Normalize potential keyboard shortcut options.\n     */\n    function normalizeOptions(value) {\n        if (!value || typeof value !== 'object') {\n            return undefined;\n        }\n        const { isArray } = Array;\n        const valid = 'command' in value &&\n            'keys' in value &&\n            'selector' in value &&\n            isArray(value.keys);\n        return valid ? value : undefined;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"],"names":["ShortCutLocation","CommandIDs","ShortcutObject","constructor","this","commandName","label","keys","source","selector","category","id","numberOfShortcuts","hasConflict","get","sortCriteria","ErrorObject","super","takenBy","TakenByObject","shortcut","takenByKey","takenByLabel","ShortcutInput","props","handleUpdate","state","push","currentChain","setState","handleOverwrite","async","deleteShortcut","takenByObject","then","handleReplace","toggleInput","shortcutId","parseChaining","event","value","userInput","key","EN_US","keyForKeydownEvent","nativeEvent","modKeys","lastKey","substr","lastIndexOf","length","trim","ctrlKey","metaKey","altKey","shiftKey","checkNonFunctional","dontEnd","shortcutKeys","split","last","isFunctional","indexOf","checkShortcutAvailability","isAvailable","Object","keyBindingsUsed","join","binding","newOrReplace","handleInput","preventDefault","selected","parsed","toSymbols","checkConflict","handleBlur","relatedTarget","clearConflicts","placeholder","Array","sortConflict","render","trans","translator","load","inputClassName","className","displayInput","onBlur","tabIndex","onKeyDown","ref","input","focus","__","disabled","onClick","checkIcon","react","errorIcon","hidden","ShortcutItem","toggleInputNew","displayNewInput","toggleInputReplaceLeft","displayReplaceInputLeft","toggleInputReplaceRight","displayReplaceInputRight","addCommandIfNeeded","command","action","external","hasCommand","commandId","addCommand","caption","execute","handleRightClick","e","_commands","shortcutEdit","shortcutEditLeft","shortcutEditRight","shortcutAddNew","shortcutAddAnother","shortcutReset","resetShortcut","numShortcuts","filter","commandList","concat","contextMenu","reduce","result","Platform","IS_MAC","getErrorRow","_a","document","getElementById","click","getCategoryCell","getLabelCell","getResetShortCutLink","getSourceCell","getOptionalSelectorCell","showSelectors","getClassNameForShortCuts","nonEmptyKeys","classes","getToggleInputReplaceMethod","location","Left","Right","getDisplayReplaceInput","getOrDiplayIfNeeded","getShortCutAsInput","getShortCutForDisplayOnly","map","keyBinding","index","isLocationBeingEdited","getLocationFromIndex","getDivForKey","getAddLink","getInputBoxWhenToggled","getShortCutsCell","onContextMenu","persist","ShortcutList","style","height","shortcuts","ShortcutTitleItem","title","toLowerCase","active","updateSort","caretDownEmptyThinIcon","Symbols","AdvancedOptions","toggleSelectors","resetShortcuts","resetAll","TopNav","addMenuCommands","menu","createMenu","addItem","getShortCutTitleItem","currentSort","InputGroup","type","onChange","updateSearchQuery","rightIcon","fuzzySearch","item","query","score","Infinity","indices","rgx","rgxMatch","exec","match","StringExt","matchSumOfDeltas","pivot","j","ArrayExt","lowerBound","a","b","categoryIndices","slice","labelIndices","i","n","matchType","ShortcutUI","searchQuery","target","filteredShortcutList","_searchFilterShortcuts","shortcutList","sortShortcuts","settings","getAllShortCutSettings","user","removeShortCut","_refreshShortcutList","shortcutObject","userShortcuts","newUserShortcuts","found","set","newShortcut","errorRow","splice","forEach","commandIDs","open","clientX","clientY","shortcutsFetched","componentDidMount","shortcutObjects","composite","currentCount","getLabel","commandParts","userSetting","keyTo","getShortcutObjects","getKeyBindingsUsed","items","replace","scores","itemList","matchItems","filterCritera","sort","compareA","compareB","width","SHORTCUT_PLUGIN_ID","getExternalForJupyterLab","settingRegistry","app","commands","remove","Menu","options","description","requires","ISettingRegistry","optional","ITranslator","IFormRendererRegistry","activate","registry","editorRegistry","translator_","nullTranslator","canonical","cannonicalOverrides","loaded","component","fieldRenderer","renderShortCut","addRenderer","populate","schema","listCommands","JSONExt","deepCopy","properties","default","plugins","plugin","acc","val","some","cmd","CommandRegistry","parseKeystroke","localeCompare","pluginChanged","connect","sender","oldShortcuts","newShortcuts","undefined","deepEqual","transform","compose","_b","_c","_d","defaults","data","SettingRegistry","reconcileShortcuts","fetch","raw","version","Private","loadShortcuts","changed","error","console","autoStart","disposables","dispose","isArray","normalizeOptions","add","addKeyBinding","DisposableSet"],"sourceRoot":""}