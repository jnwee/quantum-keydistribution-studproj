{"version":3,"file":"3465.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/commands.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/customStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/ipython-md.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/rulers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/ybinding.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extension.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lezer/generator/dist/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/theme.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/pythonBuiltin.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/language.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/editor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/factory.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/mimetype.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/searchprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/token.js"],"sourcesContent":["/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { indentLess, indentMore, insertBlankLine, insertNewlineAndIndent, insertTab, simplifySelection } from '@codemirror/commands';\nimport { COMPLETER_ACTIVE_CLASS, COMPLETER_ENABLED_CLASS, COMPLETER_LINE_BEGINNING_CLASS } from '@jupyterlab/codeeditor';\n/**\n * Selector for a widget that can run code.\n */\nconst CODE_RUNNER_SELECTOR = '[data-jp-code-runner]';\n/**\n * Selector for a widget that can run code in terminal mode.\n */\nconst TERMINAL_CODE_RUNNER_SELECTOR = '[data-jp-interaction-mode=\"terminal\"]';\n/**\n * Selector for a widget that can open a tooltip.\n */\nconst TOOLTIP_OPENER_SELECTOR = '.jp-CodeMirrorEditor:not(.jp-mod-has-primary-selection):not(.jp-mod-in-leading-whitespace):not(.jp-mod-completer-active)';\n/**\n * Selector for an active cell in edit mode.\n */\nconst ACTIVE_CELL_IN_EDIT_MODE_SELECTOR = '.jp-mod-editMode .jp-Cell.jp-mod-active';\n/**\n * CodeMirror commands namespace\n */\nexport var StateCommands;\n(function (StateCommands) {\n    /**\n     * Indent or insert a tab as appropriate.\n     */\n    function indentMoreOrInsertTab(target) {\n        var _a;\n        let classList = (_a = target.dom.parentElement) === null || _a === void 0 ? void 0 : _a.classList;\n        let completerEnabled = classList === null || classList === void 0 ? void 0 : classList.contains(COMPLETER_ENABLED_CLASS);\n        let lineBeggining = classList === null || classList === void 0 ? void 0 : classList.contains(COMPLETER_LINE_BEGINNING_CLASS);\n        if (completerEnabled && !lineBeggining) {\n            return false;\n        }\n        const arg = { state: target.state, dispatch: target.dispatch };\n        const from = target.state.selection.main.from;\n        const to = target.state.selection.main.to;\n        if (from != to) {\n            return indentMore(arg);\n        }\n        const line = target.state.doc.lineAt(from);\n        const before = target.state.doc.slice(line.from, from).toString();\n        if (/^\\s*$/.test(before)) {\n            return indentMore(arg);\n        }\n        else {\n            return insertTab(arg);\n        }\n    }\n    StateCommands.indentMoreOrInsertTab = indentMoreOrInsertTab;\n    /**\n     * Insert new line if completer is not active.\n     */\n    function completerOrInsertNewLine(target) {\n        var _a;\n        if ((_a = target.dom.parentElement) === null || _a === void 0 ? void 0 : _a.classList.contains(COMPLETER_ACTIVE_CLASS)) {\n            // do not prevent default to allow completer `enter` action\n            return false;\n        }\n        if (target.dom.closest(TERMINAL_CODE_RUNNER_SELECTOR)) {\n            // do not prevent default to allow for the cell to run\n            return false;\n        }\n        const arg = { state: target.state, dispatch: target.dispatch };\n        return insertNewlineAndIndent(arg);\n    }\n    StateCommands.completerOrInsertNewLine = completerOrInsertNewLine;\n    /**\n     * Prevent insertion of new line when running cell with Ctrl/Command + Enter\n     * @deprecated\n     */\n    function preventNewLineOnRun(target) {\n        if (target.dom.closest(CODE_RUNNER_SELECTOR)) {\n            return true;\n        }\n        return false;\n    }\n    StateCommands.preventNewLineOnRun = preventNewLineOnRun;\n    /**\n     * Insert a new line or run a cell with Ctrl/Command + Enter\n     */\n    function insertBlankLineOnRun(target) {\n        if (target.dom.closest(CODE_RUNNER_SELECTOR)) {\n            // do not prevent default to allow `run` action to be handled by lumino\n            return false;\n        }\n        else {\n            const arg = { state: target.state, dispatch: target.dispatch };\n            return insertBlankLine(arg);\n        }\n    }\n    StateCommands.insertBlankLineOnRun = insertBlankLineOnRun;\n    /**\n     * Simplify selection but do not prevent default to allow switching to command mode.\n     */\n    function simplifySelectionAndMaybeSwitchToCommandMode(target) {\n        const arg = { state: target.state, dispatch: target.dispatch };\n        const preventDefault = simplifySelection(arg);\n        if (target.dom.closest(ACTIVE_CELL_IN_EDIT_MODE_SELECTOR)) {\n            // do not prevent default to allow switching to command mode\n            return false;\n        }\n        else {\n            return preventDefault;\n        }\n    }\n    StateCommands.simplifySelectionAndMaybeSwitchToCommandMode = simplifySelectionAndMaybeSwitchToCommandMode;\n    /**\n     * Prevent dedenting when launching inspection request (a.k.a tooltip).\n     *\n     * This function should be removed once a better way to prevent default\n     * CodeMirror commands is implemented, as tracked in\n     * https://github.com/jupyterlab/jupyterlab/issues/15897\n     */\n    function dedentIfNotLaunchingTooltip(target) {\n        if (target.dom.closest(TOOLTIP_OPENER_SELECTOR)) {\n            return false;\n        }\n        return indentLess(target);\n    }\n    StateCommands.dedentIfNotLaunchingTooltip = dedentIfNotLaunchingTooltip;\n})(StateCommands || (StateCommands = {}));\n//# sourceMappingURL=commands.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { combineConfig, Facet } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n/**\n * Custom theme configuration\n *\n * The first non-null value takes precedence\n */\nconst customThemeConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            fontFamily: null,\n            fontSize: null,\n            lineHeight: null\n        }, {\n            fontFamily: (a, b) => a !== null && a !== void 0 ? a : b,\n            fontSize: (a, b) => a !== null && a !== void 0 ? a : b,\n            lineHeight: (a, b) => a !== null && a !== void 0 ? a : b\n        });\n    }\n});\nfunction setEditorStyle(view) {\n    const { fontFamily, fontSize, lineHeight } = view.state.facet(customThemeConfig);\n    let style = '';\n    if (fontSize) {\n        style += `font-size: ${fontSize}px !important;`;\n    }\n    if (fontFamily) {\n        style += `font-family: ${fontFamily} !important;`;\n    }\n    if (lineHeight) {\n        style += `line-height: ${lineHeight.toString()} !important`;\n    }\n    return { style: style };\n}\n/**\n * Get the extension to customize an editor theme.\n *\n * @param config Theme customization\n * @returns Editor extension\n */\nexport function customTheme(config) {\n    return [\n        customThemeConfig.of(config),\n        EditorView.editorAttributes.of(setEditorStyle)\n    ];\n}\n//# sourceMappingURL=customStyle.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { parseMixed } from '@lezer/common';\nimport { tags } from '@lezer/highlight';\n// Mathematical expression delimiters\nconst INLINE_MATH_DOLLAR = 'InlineMathDollar';\nconst INLINE_MATH_BRACKET = 'InlineMathBracket';\nconst BLOCK_MATH_DOLLAR = 'BlockMathDollar';\nconst BLOCK_MATH_BRACKET = 'BlockMathBracket';\n/**\n * Length of the delimiter for a math expression\n */\nconst DELIMITER_LENGTH = {\n    [INLINE_MATH_DOLLAR]: 1,\n    [INLINE_MATH_BRACKET]: 3,\n    [BLOCK_MATH_DOLLAR]: 2,\n    [BLOCK_MATH_BRACKET]: 3\n};\n/**\n * Delimiters for math expressions\n */\n// Delimiters must be defined as constant because they are used in object match tests\nconst DELIMITERS = Object.keys(DELIMITER_LENGTH).reduce((agg, name) => {\n    agg[name] = { mark: `${name}Mark`, resolve: name };\n    return agg;\n}, {});\n/**\n * Define an IPython mathematical expression parser for Markdown.\n *\n * @param latexParser CodeMirror {@link Parser} for LaTeX mathematical expression\n * @returns Markdown extension\n */\nexport function parseMathIPython(latexParser) {\n    const defineNodes = new Array();\n    Object.keys(DELIMITER_LENGTH).forEach(name => {\n        defineNodes.push({\n            name,\n            style: tags.emphasis\n        }, { name: `${name}Mark`, style: tags.processingInstruction });\n    });\n    return {\n        defineNodes,\n        parseInline: [\n            {\n                name: BLOCK_MATH_DOLLAR,\n                parse(cx, next, pos) {\n                    if (next != 36 /* '$' */ || cx.char(pos + 1) != 36) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[BLOCK_MATH_DOLLAR], pos, pos + DELIMITER_LENGTH[BLOCK_MATH_DOLLAR], true, true);\n                }\n            },\n            {\n                name: INLINE_MATH_DOLLAR,\n                parse(cx, next, pos) {\n                    if (next != 36 /* '$' */ || cx.char(pos + 1) == 36) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[INLINE_MATH_DOLLAR], pos, pos + DELIMITER_LENGTH[INLINE_MATH_DOLLAR], true, true);\n                }\n            },\n            // Inline expression wrapped in \\\\( ... \\\\)\n            {\n                name: INLINE_MATH_BRACKET,\n                before: 'Escape',\n                parse(cx, next, pos) {\n                    if (next != 92 /* '\\' */ ||\n                        cx.char(pos + 1) != 92 ||\n                        ![40 /* '(' */, 41 /* ')' */].includes(cx.char(pos + 2))) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[INLINE_MATH_BRACKET], pos, pos + DELIMITER_LENGTH[INLINE_MATH_BRACKET], cx.char(pos + 2) == 40, cx.char(pos + 2) == 41);\n                }\n            },\n            // Block expression wrapped in \\\\[ ... \\\\]\n            {\n                name: BLOCK_MATH_BRACKET,\n                before: 'Escape',\n                parse(cx, next, pos) {\n                    if (next != 92 /* '\\' */ ||\n                        cx.char(pos + 1) != 92 ||\n                        ![91 /* '[' */, 93 /* ']' */].includes(cx.char(pos + 2))) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[BLOCK_MATH_BRACKET], pos, pos + DELIMITER_LENGTH[BLOCK_MATH_BRACKET], cx.char(pos + 2) == 91, cx.char(pos + 2) == 93);\n                }\n            }\n        ],\n        wrap: latexParser\n            ? parseMixed((node, input) => {\n                // Test if the node type is one of the math expression\n                const delimiterLength = DELIMITER_LENGTH[node.type.name];\n                if (delimiterLength) {\n                    return {\n                        parser: latexParser,\n                        // Remove delimiter from LaTeX parser otherwise it won't be highlighted\n                        overlay: [\n                            {\n                                from: node.from + delimiterLength,\n                                to: node.to - delimiterLength\n                            }\n                        ]\n                    };\n                }\n                return null;\n            })\n            : undefined\n    };\n}\n//# sourceMappingURL=ipython-md.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n// Inspired by https://discuss.codemirror.net/t/how-to-implement-ruler/4616/\nimport { Facet } from '@codemirror/state';\nimport { EditorView, ViewPlugin } from '@codemirror/view';\nimport { JSONExt } from '@lumino/coreutils';\nconst RULERS_CLASSNAME = 'cm-rulers';\n/**\n * Rulers style\n */\nconst baseTheme = EditorView.baseTheme({\n    [`.${RULERS_CLASSNAME}`]: { borderRight: '1px dotted gray', opacity: 0.7 }\n});\n/**\n * Rulers facet\n */\nconst rulerConfig = Facet.define({\n    // Merge all unique values\n    combine(value) {\n        const final = value.reduce((agg, arr) => agg.concat(\n        // Check value is not in aggregate nor multiple time in the array.\n        arr.filter((v, idx) => !agg.includes(v) && idx == arr.lastIndexOf(v))), []);\n        return final;\n    }\n});\n/**\n * View plugin displaying the rulers\n */\nconst plugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        var _a, _b;\n        this.rulersContainer = view.dom.appendChild(document.createElement('div'));\n        this.rulersContainer.style.cssText = `\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n                overflow: hidden;\n            `;\n        const defaultCharacterWidth = view.defaultCharacterWidth;\n        const widths = view.state.facet(rulerConfig);\n        const guttersWidths = (_b = (_a = view.scrollDOM.querySelector('.cm-gutters')) === null || _a === void 0 ? void 0 : _a.clientWidth) !== null && _b !== void 0 ? _b : 0;\n        this.rulers = widths.map(width => {\n            const ruler = this.rulersContainer.appendChild(document.createElement('div'));\n            ruler.classList.add(RULERS_CLASSNAME);\n            ruler.style.cssText = `\n                position: absolute;\n                left: ${guttersWidths + width * defaultCharacterWidth}px;\n                height: 100%;\n            `;\n            // FIXME: This should be equal to the amount of padding on a line.\n            // This value should be extracted from CodeMirror rather than hardcoded.\n            ruler.style.width = '6px';\n            return ruler;\n        });\n    }\n    update(update) {\n        var _a, _b;\n        const widths = update.view.state.facet(rulerConfig);\n        if (update.viewportChanged ||\n            update.geometryChanged ||\n            !JSONExt.deepEqual(widths, update.startState.facet(rulerConfig))) {\n            const guttersWidth = (_b = (_a = update.view.scrollDOM.querySelector('.cm-gutters')) === null || _a === void 0 ? void 0 : _a.clientWidth) !== null && _b !== void 0 ? _b : 0;\n            const defaultCharacterWidth = update.view.defaultCharacterWidth;\n            this.rulers.forEach((ruler, rulerIdx) => {\n                ruler.style.left = `${guttersWidth + widths[rulerIdx] * defaultCharacterWidth}px`;\n            });\n        }\n    }\n    destroy() {\n        this.rulers.forEach(ruler => {\n            ruler.remove();\n        });\n        this.rulersContainer.remove();\n    }\n});\n/**\n * Extension for CodeMirror 6 displaying rulers.\n *\n * @param value Rulers position\n * @returns CodeMirror 6 extension\n */\nexport function rulers(value) {\n    return [baseTheme, rulerConfig.of(value), plugin];\n}\n//# sourceMappingURL=rulers.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n *\n * Binding for yjs and codemirror\n *\n * It is a simplification of https://github.com/yjs/y-codemirror.next\n * licensed under MIT License by Kevin Jahns\n */\nimport { Annotation, EditorSelection, Facet } from '@codemirror/state';\nimport { ViewPlugin } from '@codemirror/view';\nimport { createAbsolutePositionFromRelativePosition, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, relativePositionToJSON } from 'yjs';\n/**\n * Defines a range on text using relative positions that can be transformed back to\n * absolute positions. (https://docs.yjs.dev/api/relative-positions)\n */\nexport class YRange {\n    /**\n     * @param yanchor\n     * @param yhead\n     */\n    constructor(yanchor, yhead) {\n        this.yanchor = yanchor;\n        this.yhead = yhead;\n    }\n    /**\n     * Convert the position to JSON\n     */\n    toJSON() {\n        return {\n            yanchor: relativePositionToJSON(this.yanchor),\n            yhead: relativePositionToJSON(this.yhead)\n        };\n    }\n    /**\n     * Convert a JSON range to a YRange\n     * @param json Range to convert\n     * @return The range as YRange\n     */\n    static fromJSON(json) {\n        return new YRange(createRelativePositionFromJSON(json.yanchor), createRelativePositionFromJSON(json.yhead));\n    }\n}\n/**\n * Yjs binding configuration\n */\nexport class YSyncConfig {\n    /**\n     * Create a new binding configuration\n     *\n     * @param ytext Yjs text to synchronize\n     */\n    constructor(ytext) {\n        this.ytext = ytext;\n    }\n    /**\n     * Helper function to transform an absolute index position to a Yjs-based relative position\n     * (https://docs.yjs.dev/api/relative-positions).\n     *\n     * A relative position can be transformed back to an absolute position even after the document has changed. The position is\n     * automatically adapted. This does not require any position transformations. Relative positions are computed based on\n     * the internal Yjs document model. Peers that share content through Yjs are guaranteed that their positions will always\n     * synced up when using relative positions.\n     *\n     * ```js\n     * import { ySyncFacet } from 'y-codemirror'\n     *\n     * ..\n     * const ysync = view.state.facet(ySyncFacet)\n     * // transform an absolute index position to a ypos\n     * const ypos = ysync.getYPos(3)\n     * // transform the ypos back to an absolute position\n     * ysync.fromYPos(ypos) // => 3\n     * ```\n     *\n     * It cannot be guaranteed that absolute index positions can be synced up between peers.\n     * This might lead to undesired behavior when implementing features that require that all peers see the\n     * same marked range (e.g. a comment plugin).\n     *\n     * @param pos\n     * @param assoc\n     */\n    toYPos(pos, assoc = 0) {\n        return createRelativePositionFromTypeIndex(this.ytext, pos, assoc);\n    }\n    /**\n     * @param rpos\n     */\n    fromYPos(rpos) {\n        const pos = createAbsolutePositionFromRelativePosition(createRelativePositionFromJSON(rpos), this.ytext.doc);\n        if (pos == null || pos.type !== this.ytext) {\n            throw new Error('[y-codemirror] The position you want to retrieve was created by a different document');\n        }\n        return {\n            pos: pos.index,\n            assoc: pos.assoc\n        };\n    }\n    /**\n     * @param range\n     * @return\n     */\n    toYRange(range) {\n        const assoc = range.assoc;\n        const yanchor = this.toYPos(range.anchor, assoc);\n        const yhead = this.toYPos(range.head, assoc);\n        return new YRange(yanchor, yhead);\n    }\n    /**\n     * @param yrange\n     */\n    fromYRange(yrange) {\n        const anchor = this.fromYPos(yrange.yanchor);\n        const head = this.fromYPos(yrange.yhead);\n        if (anchor.pos === head.pos) {\n            return EditorSelection.cursor(head.pos, head.assoc);\n        }\n        return EditorSelection.range(anchor.pos, head.pos);\n    }\n}\n/**\n * Yjs binding facet\n */\nexport const ySyncFacet = Facet.define({\n    combine(inputs) {\n        return inputs[inputs.length - 1];\n    }\n});\n/**\n * Yjs binding annotation\n *\n * It is used to track the origin of the document changes\n */\nexport const ySyncAnnotation = Annotation.define();\n/**\n * Yjs binding view plugin to synchronize the\n * editor state with the Yjs document.\n */\nexport const ySync = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.conf = view.state.facet(ySyncFacet);\n        this._observer = (event, tr) => {\n            var _a;\n            if (tr.origin !== this.conf) {\n                const delta = event.delta;\n                const changes = [];\n                let pos = 0;\n                for (let i = 0; i < delta.length; i++) {\n                    const d = delta[i];\n                    if (d.insert != null) {\n                        changes.push({ from: pos, to: pos, insert: d.insert });\n                    }\n                    else if (d.delete != null) {\n                        changes.push({ from: pos, to: pos + d.delete, insert: '' });\n                        pos += d.delete;\n                    }\n                    else {\n                        pos += (_a = d.retain) !== null && _a !== void 0 ? _a : 0;\n                    }\n                }\n                view.dispatch({\n                    changes,\n                    // Specified the changes origin to not loop when synchronizing\n                    annotations: [ySyncAnnotation.of(this.conf)]\n                });\n            }\n        };\n        this._ytext = this.conf.ytext;\n        this._ytext.observe(this._observer);\n    }\n    update(update) {\n        if (!update.docChanged ||\n            (update.transactions.length > 0 &&\n                update.transactions[0].annotation(ySyncAnnotation) === this.conf)) {\n            return;\n        }\n        const ytext = this.conf.ytext;\n        ytext.doc.transact(() => {\n            /**\n             * This variable adjusts the fromA position to the current position in the Y.Text type.\n             */\n            let adj = 0;\n            update.changes.iterChanges((fromA, toA, fromB, toB, insert) => {\n                const insertText = insert.sliceString(0, insert.length, '\\n');\n                if (fromA !== toA) {\n                    ytext.delete(fromA + adj, toA - fromA);\n                }\n                if (insertText.length > 0) {\n                    ytext.insert(fromA + adj, insertText);\n                }\n                adj += insertText.length - (toA - fromA);\n            });\n            // Set the configuration as origin to not loop when synchronizing\n        }, this.conf);\n    }\n    destroy() {\n        this._ytext.unobserve(this._observer);\n    }\n});\n/**\n * Extension for CodeMirror 6 binding the Yjs text (source of truth)\n * and the editor state.\n *\n * @param ytext Yjs text to bind\n * @param undoManager Yjs text undo manager\n * @returns CodeMirror 6 extension\n */\nexport function ybinding({ ytext, undoManager }) {\n    const ySyncConfig = new YSyncConfig(ytext);\n    // We don't need the undo manager extension as in y-codemirror.next\n    // because we deal with undo/redo with our own keyboard shortcut mechanism.\n    return [\n        ySyncFacet.of(ySyncConfig),\n        ySync,\n        // We need to add a new origin to the undo manager to ensure text updates\n        // are tracked.\n        undoManager\n            ? ViewPlugin.define(() => {\n                undoManager.addTrackedOrigin(ySyncConfig);\n                return {\n                    destroy: () => {\n                        undoManager.removeTrackedOrigin(ySyncConfig);\n                    }\n                };\n            })\n            : []\n    ];\n}\n//# sourceMappingURL=ybinding.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/autocomplete';\nimport { defaultKeymap } from '@codemirror/commands';\nimport { bracketMatching, foldGutter, indentOnInput, indentUnit } from '@codemirror/language';\nimport { Compartment, EditorState, Prec, StateEffect } from '@codemirror/state';\nimport { crosshairCursor, drawSelection, EditorView, highlightActiveLine, highlightSpecialChars, highlightTrailingWhitespace, highlightWhitespace, keymap, lineNumbers, rectangularSelection, scrollPastEnd, tooltips } from '@codemirror/view';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { StateCommands } from './commands';\nimport { customTheme, rulers } from './extensions';\nimport { closeSearchPanel, findNext, findPrevious, openSearchPanel, selectSelectionMatches } from '@codemirror/search';\n/**\n * The class name added to read only editor widgets.\n */\nconst READ_ONLY_CLASS = 'jp-mod-readOnly';\n/**\n * Editor configuration handler\n *\n * It stores the editor configuration and the editor extensions.\n * It also allows to inject new extensions into an editor.\n */\nexport class ExtensionsHandler {\n    constructor({ baseConfiguration, config, defaultExtensions } = {}) {\n        this._configChanged = new Signal(this);\n        this._disposed = new Signal(this);\n        this._isDisposed = false;\n        this._immutables = new Set();\n        this._baseConfig = baseConfiguration !== null && baseConfiguration !== void 0 ? baseConfiguration : {};\n        this._config = config !== null && config !== void 0 ? config : {};\n        this._configurableBuilderMap = new Map(defaultExtensions);\n        const configurables = Object.keys(this._config).concat(Object.keys(this._baseConfig));\n        this._immutables = new Set([...this._configurableBuilderMap.keys()].filter(key => !configurables.includes(key)));\n    }\n    /**\n     * Signal triggered when the editor configuration changes.\n     * It provides the mapping of the new configuration (only those that changed).\n     *\n     * It should result in a call to `IExtensionsHandler.reconfigureExtensions`.\n     */\n    get configChanged() {\n        return this._configChanged;\n    }\n    /**\n     * A signal emitted when the object is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Tests whether the object is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources held by the object.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposed.emit();\n        Signal.clearData(this);\n    }\n    /**\n     * Get a config option for the editor.\n     */\n    getOption(option) {\n        var _a;\n        return (_a = this._config[option]) !== null && _a !== void 0 ? _a : this._baseConfig[option];\n    }\n    /**\n     * Whether the option exists or not.\n     */\n    hasOption(option) {\n        return (Object.keys(this._config).includes(option) ||\n            Object.keys(this._baseConfig).includes(option));\n    }\n    /**\n     * Set a config option for the editor.\n     *\n     * You will need to reconfigure the editor extensions by listening\n     * to `IExtensionsHandler.configChanged`.\n     */\n    setOption(option, value) {\n        // Don't bother setting the option if it is already the same.\n        if (this._config[option] !== value) {\n            this._config[option] = value;\n            this._configChanged.emit({ [option]: value });\n        }\n    }\n    /**\n     * Set a base config option for the editor.\n     *\n     * You will need to reconfigure the editor extensions by listening\n     * to `IExtensionsHandler.configChanged`.\n     */\n    setBaseOptions(options) {\n        const changed = this._getChangedOptions(options, this._baseConfig);\n        if (changed.length > 0) {\n            this._baseConfig = options;\n            const customizedKeys = Object.keys(this._config);\n            const notOverridden = changed.filter(k => !customizedKeys.includes(k));\n            if (notOverridden.length > 0) {\n                this._configChanged.emit(notOverridden.reduce((agg, key) => {\n                    agg[key] = this._baseConfig[key];\n                    return agg;\n                }, {}));\n            }\n        }\n    }\n    /**\n     * Set config options for the editor.\n     *\n     * You will need to reconfigure the editor extensions by listening\n     * to `EditorHandler.configChanged`.\n     *\n     * This method is preferred when setting several options. The\n     * options are set within an operation, which only performs\n     * the costly update at the end, and not after every option\n     * is set.\n     */\n    setOptions(options) {\n        const changed = this._getChangedOptions(options, this._config);\n        if (changed.length > 0) {\n            this._config = { ...options };\n            this._configChanged.emit(changed.reduce((agg, key) => {\n                var _a;\n                agg[key] = (_a = this._config[key]) !== null && _a !== void 0 ? _a : this._baseConfig[key];\n                return agg;\n            }, {}));\n        }\n    }\n    /**\n     * Reconfigures the extension mapped with key with the provided value.\n     *\n     * @param view Editor view\n     * @param key Parameter unique key\n     * @param value Parameter value to be applied\n     */\n    reconfigureExtension(view, key, value) {\n        const effect = this.getEffect(view.state, key, value);\n        if (effect) {\n            view.dispatch({\n                effects: [effect]\n            });\n        }\n    }\n    /**\n     * Reconfigures all the extensions mapped with the options from the\n     * provided partial configuration.\n     *\n     * @param view Editor view\n     * @param configuration Editor configuration\n     */\n    reconfigureExtensions(view, configuration) {\n        const effects = Object.keys(configuration)\n            .filter(key => this.has(key))\n            .map(key => this.getEffect(view.state, key, configuration[key]));\n        view.dispatch({\n            effects: effects.filter(effect => effect !== null)\n        });\n    }\n    /**\n     * Appends extensions to the top-level configuration of the\n     * editor.\n     *\n     * Injected extension cannot be removed.\n     *\n     * ### Notes\n     * You should prefer registering a IEditorExtensionFactory instead\n     * of this feature.\n     *\n     * @alpha\n     * @param view Editor view\n     * @param extension Editor extension to inject\n     */\n    injectExtension(view, extension) {\n        view.dispatch({\n            effects: StateEffect.appendConfig.of(extension)\n        });\n    }\n    /**\n     * Returns the list of initial extensions of an editor\n     * based on the configuration.\n     *\n     * @returns The initial editor extensions\n     */\n    getInitialExtensions() {\n        const configuration = { ...this._baseConfig, ...this._config };\n        const extensions = [...this._immutables]\n            .map(key => { var _a; return (_a = this.get(key)) === null || _a === void 0 ? void 0 : _a.instance(undefined); })\n            .filter(ext => ext);\n        for (const k of Object.keys(configuration)) {\n            const builder = this.get(k);\n            if (builder) {\n                const value = configuration[k];\n                extensions.push(builder.instance(value));\n            }\n        }\n        return extensions;\n    }\n    /**\n     * Get a extension builder\n     * @param key Extension unique identifier\n     * @returns The extension builder\n     */\n    get(key) {\n        return this._configurableBuilderMap.get(key);\n    }\n    /**\n     * Whether the editor has an extension for the identifier.\n     *\n     * @param key Extension unique identifier\n     * @returns Extension existence\n     */\n    has(key) {\n        return this._configurableBuilderMap.has(key);\n    }\n    getEffect(state, key, value) {\n        var _a;\n        const builder = this.get(key);\n        return (_a = builder === null || builder === void 0 ? void 0 : builder.reconfigure(value)) !== null && _a !== void 0 ? _a : null;\n    }\n    _getChangedOptions(newConfig, oldConfig) {\n        const changed = new Array();\n        const newKeys = new Array();\n        for (const [key, value] of Object.entries(newConfig)) {\n            newKeys.push(key);\n            if (oldConfig[key] !== value) {\n                changed.push(key);\n            }\n        }\n        // Add removed old keys\n        changed.push(...Object.keys(oldConfig).filter(k => !newKeys.includes(k)));\n        return changed;\n    }\n}\n/**\n * CodeMirror extensions registry\n */\nexport class EditorExtensionRegistry {\n    constructor() {\n        this.configurationBuilder = new Map();\n        this.configurationSchema = {};\n        this.defaultOptions = {};\n        this.handlers = new Set();\n        this.immutableExtensions = new Set();\n        this._baseConfiguration = {};\n    }\n    /**\n     * Base editor configuration\n     *\n     * This is the default configuration optionally modified by the user;\n     * e.g. through user settings.\n     */\n    get baseConfiguration() {\n        return { ...this.defaultOptions, ...this._baseConfiguration };\n    }\n    set baseConfiguration(v) {\n        if (!JSONExt.deepEqual(v, this._baseConfiguration)) {\n            this._baseConfiguration = v;\n            for (const handler of this.handlers) {\n                handler.setBaseOptions(this.baseConfiguration);\n            }\n        }\n    }\n    /**\n     * Default editor configuration\n     *\n     * This is the default configuration as defined when extensions\n     * are registered.\n     */\n    get defaultConfiguration() {\n        // Only options with schema should be JSON serializable\n        // So we cannot use `JSONExt.deepCopy` on the default options.\n        return Object.freeze({ ...this.defaultOptions });\n    }\n    /**\n     * Editor configuration JSON schema\n     */\n    get settingsSchema() {\n        return Object.freeze(JSONExt.deepCopy(this.configurationSchema));\n    }\n    /**\n     * Add a default editor extension\n     *\n     * @template T Extension parameter type\n     * @param factory Extension factory\n     */\n    addExtension(factory) {\n        var _a;\n        if (this.configurationBuilder.has(factory.name)) {\n            throw new Error(`Extension named ${factory.name} is already registered.`);\n        }\n        this.configurationBuilder.set(factory.name, factory);\n        if (typeof factory.default != 'undefined') {\n            this.defaultOptions[factory.name] = factory.default;\n        }\n        if (factory.schema) {\n            this.configurationSchema[factory.name] = {\n                default: (_a = factory.default) !== null && _a !== void 0 ? _a : null,\n                ...factory.schema\n            };\n            this.defaultOptions[factory.name] =\n                this.configurationSchema[factory.name].default;\n        }\n    }\n    /**\n     * Create a new extensions handler for an editor\n     *\n     * @param options Extensions options and initial editor configuration\n     */\n    createNew(options) {\n        const configuration = new Array();\n        for (const [key, builder] of this.configurationBuilder.entries()) {\n            const extension = builder.factory(options);\n            if (extension) {\n                configuration.push([key, extension]);\n            }\n        }\n        const handler = new ExtensionsHandler({\n            baseConfiguration: this.baseConfiguration,\n            config: options.config,\n            defaultExtensions: configuration\n        });\n        this.handlers.add(handler);\n        handler.disposed.connect(() => {\n            this.handlers.delete(handler);\n        });\n        return handler;\n    }\n}\n/**\n * Editor extension registry namespace\n */\n(function (EditorExtensionRegistry) {\n    /**\n     * Dynamically configurable editor extension.\n     */\n    class ConfigurableExtension {\n        /**\n         * Create a dynamic editor extension.\n         *\n         * @param builder Extension builder\n         */\n        constructor(builder) {\n            this._compartment = new Compartment();\n            this._builder = builder;\n        }\n        /**\n         * Create an editor extension for the provided value.\n         *\n         * @param value Editor extension parameter value\n         * @returns The editor extension\n         */\n        instance(value) {\n            return this._compartment.of(this._builder(value));\n        }\n        /**\n         * Reconfigure an editor extension.\n         *\n         * @param value Editor extension value\n         * @returns Editor state effect\n         */\n        reconfigure(value) {\n            return this._compartment.reconfigure(this._builder(value));\n        }\n    }\n    /**\n     * Immutable editor extension class\n     */\n    class ImmutableExtension {\n        /**\n         * Create an immutable editor extension.\n         *\n         * @param extension Extension\n         */\n        constructor(extension) {\n            this._extension = extension;\n        }\n        /**\n         * Create an editor extension.\n         *\n         * @returns The editor extension\n         */\n        instance() {\n            return this._extension;\n        }\n        /**\n         * Reconfigure an editor extension.\n         *\n         * This is a no-op\n         */\n        reconfigure() {\n            // This is a no-op\n            return null;\n        }\n    }\n    /**\n     * Creates a dynamically configurable editor extension.\n     *\n     * @param builder Extension builder\n     * @return The extension\n     */\n    function createConfigurableExtension(builder) {\n        return new ConfigurableExtension(builder);\n    }\n    EditorExtensionRegistry.createConfigurableExtension = createConfigurableExtension;\n    /**\n     * Creates a configurable extension returning\n     * one of two extensions depending on a boolean value.\n     *\n     * @param truthy Extension to apply when the parameter is true\n     * @param falsy Extension to apply when the parameter is false\n     * @return The extension\n     */\n    function createConditionalExtension(truthy, falsy = []) {\n        return new ConfigurableExtension(value => value ? truthy : falsy);\n    }\n    EditorExtensionRegistry.createConditionalExtension = createConditionalExtension;\n    /**\n     * Creates an immutable extension.\n     *\n     * @param extension Immutable extension\n     * @return The extension\n     */\n    function createImmutableExtension(extension) {\n        return new ImmutableExtension(extension);\n    }\n    EditorExtensionRegistry.createImmutableExtension = createImmutableExtension;\n    /**\n     * Get the default editor extensions.\n     *\n     * @returns CodeMirror 6 extension factories\n     */\n    function getDefaultExtensions(options = {}) {\n        const { themes, translator } = options;\n        const trans = (translator !== null && translator !== void 0 ? translator : nullTranslator).load('jupyterlab');\n        const extensions = [\n            Object.freeze({\n                name: 'autoClosingBrackets',\n                default: false,\n                factory: () => createConditionalExtension(closeBrackets()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Auto Closing Brackets')\n                }\n            }),\n            Object.freeze({\n                name: 'codeFolding',\n                default: false,\n                factory: () => createConditionalExtension(foldGutter()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Code Folding')\n                }\n            }),\n            Object.freeze({\n                name: 'cursorBlinkRate',\n                default: 1200,\n                factory: () => createConfigurableExtension((value) => drawSelection({ cursorBlinkRate: value })),\n                schema: {\n                    type: 'number',\n                    title: trans.__('Cursor blinking rate'),\n                    description: trans.__('Half-period in milliseconds used for cursor blinking. The default blink rate is 1200ms. By setting this to zero, blinking can be disabled.')\n                }\n            }),\n            Object.freeze({\n                name: 'highlightActiveLine',\n                default: false,\n                factory: () => createConditionalExtension(highlightActiveLine()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Highlight the active line')\n                }\n            }),\n            Object.freeze({\n                name: 'highlightSpecialCharacters',\n                default: true,\n                factory: () => createConditionalExtension(highlightSpecialChars()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Highlight special characters')\n                }\n            }),\n            Object.freeze({\n                name: 'highlightTrailingWhitespace',\n                default: false,\n                factory: () => createConditionalExtension(highlightTrailingWhitespace()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Highlight trailing white spaces')\n                }\n            }),\n            Object.freeze({\n                name: 'highlightWhitespace',\n                default: false,\n                factory: () => createConditionalExtension(highlightWhitespace()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Highlight white spaces')\n                }\n            }),\n            Object.freeze({\n                name: 'indentUnit',\n                default: '4',\n                factory: () => createConfigurableExtension((value) => value == 'Tab'\n                    ? indentUnit.of('\\t')\n                    : indentUnit.of(' '.repeat(parseInt(value, 10)))),\n                schema: {\n                    type: 'string',\n                    title: trans.__('Indentation unit'),\n                    description: trans.__('The indentation is a `Tab` or the number of spaces. This defaults to 4 spaces.'),\n                    enum: ['Tab', '1', '2', '4', '8']\n                }\n            }),\n            // Default keyboard shortcuts\n            // TODO at some point we may want to get this configurable\n            Object.freeze({\n                name: 'keymap',\n                default: [\n                    {\n                        key: 'Mod-Enter',\n                        run: StateCommands.insertBlankLineOnRun\n                    },\n                    {\n                        key: 'Enter',\n                        run: StateCommands.completerOrInsertNewLine\n                    },\n                    {\n                        key: 'Escape',\n                        run: StateCommands.simplifySelectionAndMaybeSwitchToCommandMode\n                    },\n                    ...defaultKeymap.filter(binding => {\n                        // - Disable the default Mod-Enter handler as it always prevents default,\n                        //   preventing us from running cells with Ctrl + Enter. Instead we provide\n                        //   our own handler (insertBlankLineOnRun) which does not prevent default\n                        //   when used in code runner editors.\n                        // - Disable the default Shift-Mod-k handler because users prefer Ctrl+D\n                        //   for deleting lines, and because it prevents opening Table of Contents\n                        //   with Ctrl+Shift+K.\n                        // - Disable shortcuts for toggling comments (\"Mod-/\" and \"Alt-A\")\n                        //   as these as handled by lumino command\n                        // - Disable Escape handler because it prevents default and we\n                        //   want to run a cell action (switch to command mode) on Esc\n                        // - Disable default Enter handler because it prevents us from\n                        //   accepting a completer suggestion with Enter.\n                        return ![\n                            'Mod-Enter',\n                            'Shift-Mod-k',\n                            'Mod-/',\n                            'Alt-A',\n                            'Escape',\n                            'Enter'\n                        ].includes(binding.key);\n                    }),\n                    {\n                        key: 'Tab',\n                        run: StateCommands.indentMoreOrInsertTab,\n                        shift: StateCommands.dedentIfNotLaunchingTooltip\n                    }\n                ],\n                factory: () => createConfigurableExtension(value => keymap.of(value))\n            }),\n            Object.freeze({\n                name: 'lineNumbers',\n                default: true,\n                factory: () => createConditionalExtension(lineNumbers()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Line Numbers')\n                }\n            }),\n            Object.freeze({\n                name: 'lineWrap',\n                factory: () => createConditionalExtension(EditorView.lineWrapping),\n                default: true,\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Line Wrap')\n                }\n            }),\n            Object.freeze({\n                name: 'matchBrackets',\n                default: true,\n                factory: () => createConditionalExtension([\n                    bracketMatching(),\n                    // closeBracketsKeymap must have higher precedence over defaultKeymap\n                    Prec.high(keymap.of(closeBracketsKeymap))\n                ]),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Match Brackets')\n                }\n            }),\n            Object.freeze({\n                name: 'rectangularSelection',\n                default: true,\n                factory: () => createConditionalExtension([\n                    rectangularSelection(),\n                    crosshairCursor()\n                ]),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Rectangular selection'),\n                    description: trans.__('Rectangular (block) selection can be created by dragging the mouse pointer while holding the left mouse button and the Alt key. When the Alt key is pressed, a crosshair cursor will appear, indicating that the rectangular selection mode is active.')\n                }\n            }),\n            Object.freeze({\n                name: 'readOnly',\n                default: false,\n                factory: () => createConfigurableExtension((value) => [\n                    EditorState.readOnly.of(value),\n                    value\n                        ? EditorView.editorAttributes.of({ class: READ_ONLY_CLASS })\n                        : []\n                ])\n            }),\n            Object.freeze({\n                name: 'rulers',\n                default: [],\n                factory: () => createConfigurableExtension((value) => value.length > 0 ? rulers(value) : []),\n                schema: {\n                    type: 'array',\n                    title: trans.__('Rulers'),\n                    items: {\n                        type: 'number',\n                        minimum: 0\n                    }\n                }\n            }),\n            Object.freeze({\n                name: 'extendSelection',\n                default: true,\n                factory: () => createConditionalExtension(keymap.of([\n                    {\n                        key: 'Mod-Shift-l',\n                        run: selectSelectionMatches,\n                        preventDefault: true\n                    }\n                ]))\n            }),\n            Object.freeze({\n                // Whether to activate the native CodeMirror search panel or not.\n                name: 'searchWithCM',\n                default: false,\n                factory: () => createConditionalExtension(keymap.of([\n                    {\n                        key: 'Mod-f',\n                        run: openSearchPanel,\n                        scope: 'editor search-panel'\n                    },\n                    {\n                        key: 'F3',\n                        run: findNext,\n                        shift: findPrevious,\n                        scope: 'editor search-panel',\n                        preventDefault: true\n                    },\n                    {\n                        key: 'Mod-g',\n                        run: findNext,\n                        shift: findPrevious,\n                        scope: 'editor search-panel',\n                        preventDefault: true\n                    },\n                    {\n                        key: 'Escape',\n                        run: closeSearchPanel,\n                        scope: 'editor search-panel'\n                    }\n                ]))\n            }),\n            Object.freeze({\n                name: 'scrollPastEnd',\n                default: false,\n                factory: (options) => options.inline ? null : createConditionalExtension(scrollPastEnd())\n            }),\n            Object.freeze({\n                name: 'smartIndent',\n                default: true,\n                factory: () => createConditionalExtension(indentOnInput()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Smart Indentation')\n                }\n            }),\n            /**\n             * tabFocusable\n             *\n             * Can the user use the tab key to focus on / enter the CodeMirror editor?\n             * If this is false, the CodeMirror editor can still be focused (via\n             * mouse-click, for example), just not via tab key navigation.\n             *\n             * It can be useful to set tabFocusable to false when the editor is\n             * embedded in a context that provides an alternative to the tab key for\n             * navigation. For example, the Notebook widget allows the user to move\n             * from one cell to another using the up and down arrow keys and to enter\n             * and exit the CodeMirror editor associated with that cell by pressing\n             * the enter and escape keys, respectively.\n             */\n            Object.freeze({\n                name: 'tabFocusable',\n                // The default for this needs to be true because the CodeMirror editor\n                // is used in lots of different places. By default, a user should be\n                // able to tab into a CodeMirror editor on the page, and by default, the\n                // user should be able to get out of the editor by pressing the escape\n                // key then immediately pressing the tab key (or shift+tab to go\n                // backwards on the page). If there are places in the app where this\n                // model of user interaction doesn't make sense or is broken, those\n                // places should be remedied on a case-by-case basis, **not** by making\n                // `tabFocusable` false by default.\n                default: true,\n                factory: () => createConditionalExtension(EditorView.contentAttributes.of({\n                    tabIndex: '0'\n                }), EditorView.contentAttributes.of({\n                    tabIndex: '-1'\n                }))\n            }),\n            Object.freeze({\n                name: 'tabSize',\n                default: 4,\n                factory: () => createConfigurableExtension((value) => EditorState.tabSize.of(value)),\n                schema: {\n                    type: 'number',\n                    title: trans.__('Tab size')\n                }\n            }),\n            Object.freeze({\n                name: 'tooltips',\n                factory: () => \n                // we need `absolute` due to use of `contain: layout` in lumino;\n                // we attach to body to ensure cursor collaboration tooltip is\n                // visible in first line of the editor.\n                createImmutableExtension(tooltips({\n                    position: 'absolute',\n                    parent: document.body\n                }))\n            }),\n            Object.freeze({\n                name: 'allowMultipleSelections',\n                default: true,\n                factory: () => createConfigurableExtension((value) => EditorState.allowMultipleSelections.of(value)),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Multiple selections')\n                }\n            }),\n            Object.freeze({\n                name: 'customStyles',\n                factory: () => createConfigurableExtension(config => customTheme(config)),\n                default: {\n                    fontFamily: null,\n                    fontSize: null,\n                    lineHeight: null\n                },\n                schema: {\n                    title: trans.__('Custom editor styles'),\n                    type: 'object',\n                    properties: {\n                        fontFamily: {\n                            type: ['string', 'null'],\n                            title: trans.__('Font Family')\n                        },\n                        fontSize: {\n                            type: ['number', 'null'],\n                            minimum: 1,\n                            maximum: 100,\n                            title: trans.__('Font Size')\n                        },\n                        lineHeight: {\n                            type: ['number', 'null'],\n                            title: trans.__('Line Height')\n                        }\n                    },\n                    additionalProperties: false\n                }\n            })\n        ];\n        if (themes) {\n            extensions.push(Object.freeze({\n                name: 'theme',\n                default: 'jupyter',\n                factory: () => createConfigurableExtension(value => themes.getTheme(value)),\n                schema: {\n                    type: 'string',\n                    title: trans.__('Theme'),\n                    description: trans.__('CodeMirror theme')\n                }\n            }));\n        }\n        if (translator) {\n            extensions.push(Object.freeze({\n                name: 'translation',\n                // The list of internal strings is available at https://codemirror.net/examples/translate/\n                default: {\n                    // @codemirror/view\n                    'Control character': trans.__('Control character'),\n                    // @codemirror/commands\n                    'Selection deleted': trans.__('Selection deleted'),\n                    // @codemirror/language\n                    'Folded lines': trans.__('Folded lines'),\n                    'Unfolded lines': trans.__('Unfolded lines'),\n                    to: trans.__('to'),\n                    'folded code': trans.__('folded code'),\n                    unfold: trans.__('unfold'),\n                    'Fold line': trans.__('Fold line'),\n                    'Unfold line': trans.__('Unfold line'),\n                    // @codemirror/search\n                    'Go to line': trans.__('Go to line'),\n                    go: trans.__('go'),\n                    Find: trans.__('Find'),\n                    Replace: trans.__('Replace'),\n                    next: trans.__('next'),\n                    previous: trans.__('previous'),\n                    all: trans.__('all'),\n                    'match case': trans.__('match case'),\n                    replace: trans.__('replace'),\n                    'replace all': trans.__('replace all'),\n                    close: trans.__('close'),\n                    'current match': trans.__('current match'),\n                    'replaced $ matches': trans.__('replaced $ matches'),\n                    'replaced match on line $': trans.__('replaced match on line $'),\n                    'on line': trans.__('on line'),\n                    // @codemirror/autocomplete\n                    Completions: trans.__('Completions'),\n                    // @codemirror/lint\n                    Diagnostics: trans.__('Diagnostics'),\n                    'No diagnostics': trans.__('No diagnostics')\n                },\n                factory: () => createConfigurableExtension(value => EditorState.phrases.of(value))\n            }));\n        }\n        return extensions;\n    }\n    EditorExtensionRegistry.getDefaultExtensions = getDefaultExtensions;\n})(EditorExtensionRegistry || (EditorExtensionRegistry = {}));\n//# sourceMappingURL=extension.js.map","import { NodeProp } from '@lezer/common';\nimport { LRParser, LocalTokenGroup } from '@lezer/lr';\n\nclass Node {\n    constructor(start) {\n        this.start = start;\n    }\n}\nclass GrammarDeclaration extends Node {\n    constructor(start, rules, topRules, tokens, localTokens, context, externalTokens, externalSpecializers, externalPropSources, precedences, mainSkip, scopedSkip, dialects, externalProps, autoDelim) {\n        super(start);\n        this.rules = rules;\n        this.topRules = topRules;\n        this.tokens = tokens;\n        this.localTokens = localTokens;\n        this.context = context;\n        this.externalTokens = externalTokens;\n        this.externalSpecializers = externalSpecializers;\n        this.externalPropSources = externalPropSources;\n        this.precedences = precedences;\n        this.mainSkip = mainSkip;\n        this.scopedSkip = scopedSkip;\n        this.dialects = dialects;\n        this.externalProps = externalProps;\n        this.autoDelim = autoDelim;\n    }\n    toString() { return Object.values(this.rules).join(\"\\n\"); }\n}\nclass RuleDeclaration extends Node {\n    constructor(start, id, props, params, expr) {\n        super(start);\n        this.id = id;\n        this.props = props;\n        this.params = params;\n        this.expr = expr;\n    }\n    toString() {\n        return this.id.name + (this.params.length ? `<${this.params.join()}>` : \"\") + \" -> \" + this.expr;\n    }\n}\nclass PrecDeclaration extends Node {\n    constructor(start, items) {\n        super(start);\n        this.items = items;\n    }\n}\nclass TokenPrecDeclaration extends Node {\n    constructor(start, items) {\n        super(start);\n        this.items = items;\n    }\n}\nclass TokenConflictDeclaration extends Node {\n    constructor(start, a, b) {\n        super(start);\n        this.a = a;\n        this.b = b;\n    }\n}\nclass TokenDeclaration extends Node {\n    constructor(start, precedences, conflicts, rules, literals) {\n        super(start);\n        this.precedences = precedences;\n        this.conflicts = conflicts;\n        this.rules = rules;\n        this.literals = literals;\n    }\n}\nclass LocalTokenDeclaration extends Node {\n    constructor(start, precedences, rules, fallback) {\n        super(start);\n        this.precedences = precedences;\n        this.rules = rules;\n        this.fallback = fallback;\n    }\n}\nclass LiteralDeclaration extends Node {\n    constructor(start, literal, props) {\n        super(start);\n        this.literal = literal;\n        this.props = props;\n    }\n}\nclass ContextDeclaration extends Node {\n    constructor(start, id, source) {\n        super(start);\n        this.id = id;\n        this.source = source;\n    }\n}\nclass ExternalTokenDeclaration extends Node {\n    constructor(start, id, source, tokens) {\n        super(start);\n        this.id = id;\n        this.source = source;\n        this.tokens = tokens;\n    }\n}\nclass ExternalSpecializeDeclaration extends Node {\n    constructor(start, type, token, id, source, tokens) {\n        super(start);\n        this.type = type;\n        this.token = token;\n        this.id = id;\n        this.source = source;\n        this.tokens = tokens;\n    }\n}\nclass ExternalPropSourceDeclaration extends Node {\n    constructor(start, id, source) {\n        super(start);\n        this.id = id;\n        this.source = source;\n    }\n}\nclass ExternalPropDeclaration extends Node {\n    constructor(start, id, externalID, source) {\n        super(start);\n        this.id = id;\n        this.externalID = externalID;\n        this.source = source;\n    }\n}\nclass Identifier extends Node {\n    constructor(start, name) {\n        super(start);\n        this.name = name;\n    }\n    toString() { return this.name; }\n}\nclass Expression extends Node {\n    walk(f) { return f(this); }\n    eq(_other) { return false; }\n}\nExpression.prototype.prec = 10;\nclass NameExpression extends Expression {\n    constructor(start, id, args) {\n        super(start);\n        this.id = id;\n        this.args = args;\n    }\n    toString() { return this.id.name + (this.args.length ? `<${this.args.join()}>` : \"\"); }\n    eq(other) {\n        return this.id.name == other.id.name && exprsEq(this.args, other.args);\n    }\n    walk(f) {\n        let args = walkExprs(this.args, f);\n        return f(args == this.args ? this : new NameExpression(this.start, this.id, args));\n    }\n}\nclass SpecializeExpression extends Expression {\n    constructor(start, type, props, token, content) {\n        super(start);\n        this.type = type;\n        this.props = props;\n        this.token = token;\n        this.content = content;\n    }\n    toString() { return `@${this.type}[${this.props.join(\",\")}]<${this.token}, ${this.content}>`; }\n    eq(other) {\n        return this.type == other.type && Prop.eqProps(this.props, other.props) && exprEq(this.token, other.token) &&\n            exprEq(this.content, other.content);\n    }\n    walk(f) {\n        let token = this.token.walk(f), content = this.content.walk(f);\n        return f(token == this.token && content == this.content ? this : new SpecializeExpression(this.start, this.type, this.props, token, content));\n    }\n}\nclass InlineRuleExpression extends Expression {\n    constructor(start, rule) {\n        super(start);\n        this.rule = rule;\n    }\n    toString() {\n        let rule = this.rule;\n        return `${rule.id}${rule.props.length ? `[${rule.props.join(\",\")}]` : \"\"} { ${rule.expr} }`;\n    }\n    eq(other) {\n        let rule = this.rule, oRule = other.rule;\n        return exprEq(rule.expr, oRule.expr) && rule.id.name == oRule.id.name && Prop.eqProps(rule.props, oRule.props);\n    }\n    walk(f) {\n        let rule = this.rule, expr = rule.expr.walk(f);\n        return f(expr == rule.expr ? this :\n            new InlineRuleExpression(this.start, new RuleDeclaration(rule.start, rule.id, rule.props, [], expr)));\n    }\n}\nclass ChoiceExpression extends Expression {\n    constructor(start, exprs) {\n        super(start);\n        this.exprs = exprs;\n    }\n    toString() { return this.exprs.map(e => maybeParens(e, this)).join(\" | \"); }\n    eq(other) {\n        return exprsEq(this.exprs, other.exprs);\n    }\n    walk(f) {\n        let exprs = walkExprs(this.exprs, f);\n        return f(exprs == this.exprs ? this : new ChoiceExpression(this.start, exprs));\n    }\n}\nChoiceExpression.prototype.prec = 1;\nclass SequenceExpression extends Expression {\n    constructor(start, exprs, markers, empty = false) {\n        super(start);\n        this.exprs = exprs;\n        this.markers = markers;\n        this.empty = empty;\n    }\n    toString() { return this.empty ? \"()\" : this.exprs.map(e => maybeParens(e, this)).join(\" \"); }\n    eq(other) {\n        return exprsEq(this.exprs, other.exprs) && this.markers.every((m, i) => {\n            let om = other.markers[i];\n            return m.length == om.length && m.every((x, i) => x.eq(om[i]));\n        });\n    }\n    walk(f) {\n        let exprs = walkExprs(this.exprs, f);\n        return f(exprs == this.exprs ? this : new SequenceExpression(this.start, exprs, this.markers, this.empty && !exprs.length));\n    }\n}\nSequenceExpression.prototype.prec = 2;\nclass ConflictMarker extends Node {\n    constructor(start, id, type) {\n        super(start);\n        this.id = id;\n        this.type = type;\n    }\n    toString() { return (this.type == \"ambig\" ? \"~\" : \"!\") + this.id.name; }\n    eq(other) { return this.id.name == other.id.name && this.type == other.type; }\n}\nclass RepeatExpression extends Expression {\n    constructor(start, expr, kind) {\n        super(start);\n        this.expr = expr;\n        this.kind = kind;\n    }\n    toString() { return maybeParens(this.expr, this) + this.kind; }\n    eq(other) {\n        return exprEq(this.expr, other.expr) && this.kind == other.kind;\n    }\n    walk(f) {\n        let expr = this.expr.walk(f);\n        return f(expr == this.expr ? this : new RepeatExpression(this.start, expr, this.kind));\n    }\n}\nRepeatExpression.prototype.prec = 3;\nclass LiteralExpression extends Expression {\n    // value.length is always > 0\n    constructor(start, value) {\n        super(start);\n        this.value = value;\n    }\n    toString() { return JSON.stringify(this.value); }\n    eq(other) { return this.value == other.value; }\n}\nclass SetExpression extends Expression {\n    constructor(start, ranges, inverted) {\n        super(start);\n        this.ranges = ranges;\n        this.inverted = inverted;\n    }\n    toString() {\n        return `[${this.inverted ? \"^\" : \"\"}${this.ranges.map(([a, b]) => {\n            return String.fromCodePoint(a) + (b == a + 1 ? \"\" : \"-\" + String.fromCodePoint(b));\n        })}]`;\n    }\n    eq(other) {\n        return this.inverted == other.inverted && this.ranges.length == other.ranges.length &&\n            this.ranges.every(([a, b], i) => { let [x, y] = other.ranges[i]; return a == x && b == y; });\n    }\n}\nclass AnyExpression extends Expression {\n    constructor(start) {\n        super(start);\n    }\n    toString() { return \"_\"; }\n    eq() { return true; }\n}\nfunction walkExprs(exprs, f) {\n    let result = null;\n    for (let i = 0; i < exprs.length; i++) {\n        let expr = exprs[i].walk(f);\n        if (expr != exprs[i] && !result)\n            result = exprs.slice(0, i);\n        if (result)\n            result.push(expr);\n    }\n    return result || exprs;\n}\nconst CharClasses = {\n    asciiLetter: [[65, 91], [97, 123]],\n    asciiLowercase: [[97, 123]],\n    asciiUppercase: [[65, 91]],\n    digit: [[48, 58]],\n    whitespace: [[9, 14], [32, 33], [133, 134], [160, 161], [5760, 5761], [8192, 8203],\n        [8232, 8234], [8239, 8240], [8287, 8288], [12288, 12289]],\n    eof: [[0xffff, 0xffff]]\n};\nclass CharClass extends Expression {\n    constructor(start, type) {\n        super(start);\n        this.type = type;\n    }\n    toString() { return \"@\" + this.type; }\n    eq(expr) { return this.type == expr.type; }\n}\nfunction exprEq(a, b) {\n    return a.constructor == b.constructor && a.eq(b);\n}\nfunction exprsEq(a, b) {\n    return a.length == b.length && a.every((e, i) => exprEq(e, b[i]));\n}\nclass Prop extends Node {\n    constructor(start, at, name, value) {\n        super(start);\n        this.at = at;\n        this.name = name;\n        this.value = value;\n    }\n    eq(other) {\n        return this.name == other.name && this.value.length == other.value.length &&\n            this.value.every((v, i) => v.value == other.value[i].value && v.name == other.value[i].name);\n    }\n    toString() {\n        let result = (this.at ? \"@\" : \"\") + this.name;\n        if (this.value.length) {\n            result += \"=\";\n            for (let { name, value } of this.value)\n                result += name ? `{${name}}` : /[^\\w-]/.test(value) ? JSON.stringify(value) : value;\n        }\n        return result;\n    }\n    static eqProps(a, b) {\n        return a.length == b.length && a.every((p, i) => p.eq(b[i]));\n    }\n}\nclass PropPart extends Node {\n    constructor(start, value, name) {\n        super(start);\n        this.value = value;\n        this.name = name;\n    }\n}\nfunction maybeParens(node, parent) {\n    return node.prec < parent.prec ? \"(\" + node.toString() + \")\" : node.toString();\n}\n\n/**\nThe type of error raised when the parser generator finds an issue.\n*/\nclass GenError extends Error {\n}\n\nfunction hasProps(props) {\n    for (let _p in props)\n        return true;\n    return false;\n}\nlet termHash = 0;\nclass Term {\n    constructor(name, flags, nodeName, props = {}) {\n        this.name = name;\n        this.flags = flags;\n        this.nodeName = nodeName;\n        this.props = props;\n        this.hash = ++termHash; // Used for sorting and hashing during parser generation\n        this.id = -1; // Assigned in a later stage, used in actual output\n        // Filled in only after the rules are simplified, used in automaton.ts\n        this.rules = [];\n    }\n    toString() { return this.name; }\n    get nodeType() { return this.top || this.nodeName != null || hasProps(this.props) || this.repeated; }\n    get terminal() { return (this.flags & 1 /* TermFlag.Terminal */) > 0; }\n    get eof() { return (this.flags & 4 /* TermFlag.Eof */) > 0; }\n    get error() { return \"error\" in this.props; }\n    get top() { return (this.flags & 2 /* TermFlag.Top */) > 0; }\n    get interesting() { return this.flags > 0 || this.nodeName != null; }\n    get repeated() { return (this.flags & 16 /* TermFlag.Repeated */) > 0; }\n    set preserve(value) { this.flags = value ? this.flags | 8 /* TermFlag.Preserve */ : this.flags & ~8 /* TermFlag.Preserve */; }\n    get preserve() { return (this.flags & 8 /* TermFlag.Preserve */) > 0; }\n    set inline(value) { this.flags = value ? this.flags | 32 /* TermFlag.Inline */ : this.flags & ~32 /* TermFlag.Inline */; }\n    get inline() { return (this.flags & 32 /* TermFlag.Inline */) > 0; }\n    cmp(other) { return this.hash - other.hash; }\n}\nclass TermSet {\n    constructor() {\n        this.terms = [];\n        // Map from term names to Term instances\n        this.names = Object.create(null);\n        this.tops = [];\n        this.eof = this.term(\"␄\", null, 1 /* TermFlag.Terminal */ | 4 /* TermFlag.Eof */);\n        this.error = this.term(\"⚠\", \"⚠\", 8 /* TermFlag.Preserve */);\n    }\n    term(name, nodeName, flags = 0, props = {}) {\n        let term = new Term(name, flags, nodeName, props);\n        this.terms.push(term);\n        this.names[name] = term;\n        return term;\n    }\n    makeTop(nodeName, props) {\n        const term = this.term(\"@top\", nodeName, 2 /* TermFlag.Top */, props);\n        this.tops.push(term);\n        return term;\n    }\n    makeTerminal(name, nodeName, props = {}) {\n        return this.term(name, nodeName, 1 /* TermFlag.Terminal */, props);\n    }\n    makeNonTerminal(name, nodeName, props = {}) {\n        return this.term(name, nodeName, 0, props);\n    }\n    makeRepeat(name) {\n        return this.term(name, null, 16 /* TermFlag.Repeated */);\n    }\n    uniqueName(name) {\n        for (let i = 0;; i++) {\n            let cur = i ? `${name}-${i}` : name;\n            if (!this.names[cur])\n                return cur;\n        }\n    }\n    finish(rules) {\n        for (let rule of rules)\n            rule.name.rules.push(rule);\n        this.terms = this.terms.filter(t => t.terminal || t.preserve || rules.some(r => r.name == t || r.parts.includes(t)));\n        let names = {};\n        let nodeTypes = [this.error];\n        this.error.id = 0 /* T.Err */;\n        let nextID = 0 /* T.Err */ + 1;\n        // Assign ids to terms that represent node types\n        for (let term of this.terms)\n            if (term.id < 0 && term.nodeType && !term.repeated) {\n                term.id = nextID++;\n                nodeTypes.push(term);\n            }\n        // Put all repeated terms after the regular node types\n        let minRepeatTerm = nextID;\n        for (let term of this.terms)\n            if (term.repeated) {\n                term.id = nextID++;\n                nodeTypes.push(term);\n            }\n        // Then comes the EOF term\n        this.eof.id = nextID++;\n        // And then the remaining (non-node, non-repeat) terms.\n        for (let term of this.terms) {\n            if (term.id < 0)\n                term.id = nextID++;\n            if (term.name)\n                names[term.id] = term.name;\n        }\n        if (nextID >= 0xfffe)\n            throw new GenError(\"Too many terms\");\n        return { nodeTypes, names, minRepeatTerm, maxTerm: nextID - 1 };\n    }\n}\nfunction cmpSet(a, b, cmp) {\n    if (a.length != b.length)\n        return a.length - b.length;\n    for (let i = 0; i < a.length; i++) {\n        let diff = cmp(a[i], b[i]);\n        if (diff)\n            return diff;\n    }\n    return 0;\n}\nconst none$3 = [];\nclass Conflicts {\n    constructor(precedence, ambigGroups = none$3, cut = 0) {\n        this.precedence = precedence;\n        this.ambigGroups = ambigGroups;\n        this.cut = cut;\n    }\n    join(other) {\n        if (this == Conflicts.none || this == other)\n            return other;\n        if (other == Conflicts.none)\n            return this;\n        return new Conflicts(Math.max(this.precedence, other.precedence), union(this.ambigGroups, other.ambigGroups), Math.max(this.cut, other.cut));\n    }\n    cmp(other) {\n        return this.precedence - other.precedence || cmpSet(this.ambigGroups, other.ambigGroups, (a, b) => a < b ? -1 : a > b ? 1 : 0) ||\n            this.cut - other.cut;\n    }\n}\nConflicts.none = new Conflicts(0);\nfunction union(a, b) {\n    if (a.length == 0 || a == b)\n        return b;\n    if (b.length == 0)\n        return a;\n    let result = a.slice();\n    for (let value of b)\n        if (!a.includes(value))\n            result.push(value);\n    return result.sort();\n}\nlet ruleID = 0;\nclass Rule {\n    constructor(name, parts, conflicts, skip) {\n        this.name = name;\n        this.parts = parts;\n        this.conflicts = conflicts;\n        this.skip = skip;\n        this.id = ruleID++;\n    }\n    cmp(rule) {\n        return this.id - rule.id;\n    }\n    cmpNoName(rule) {\n        return this.parts.length - rule.parts.length ||\n            this.skip.hash - rule.skip.hash ||\n            this.parts.reduce((r, s, i) => r || s.cmp(rule.parts[i]), 0) ||\n            cmpSet(this.conflicts, rule.conflicts, (a, b) => a.cmp(b));\n    }\n    toString() {\n        return this.name + \" -> \" + this.parts.join(\" \");\n    }\n    get isRepeatWrap() {\n        return this.name.repeated && this.parts.length == 2 && this.parts[0] == this.name;\n    }\n    sameReduce(other) {\n        return this.name == other.name && this.parts.length == other.parts.length && this.isRepeatWrap == other.isRepeatWrap;\n    }\n}\n\nconst MAX_CHAR = 0xffff;\nclass Edge {\n    constructor(from, to, target) {\n        this.from = from;\n        this.to = to;\n        this.target = target;\n    }\n    toString() {\n        return `-> ${this.target.id}[label=${JSON.stringify(this.from < 0 ? \"ε\" : charFor(this.from) +\n            (this.to > this.from + 1 ? \"-\" + charFor(this.to - 1) : \"\"))}]`;\n    }\n}\nfunction charFor(n) {\n    return n > MAX_CHAR ? \"∞\"\n        : n == 10 ? \"\\\\n\"\n            : n == 13 ? \"\\\\r\"\n                : n < 32 || n >= 0xd800 && n < 0xdfff ? \"\\\\u{\" + n.toString(16) + \"}\"\n                    : String.fromCharCode(n);\n}\nfunction minimize(states, start) {\n    let partition = Object.create(null);\n    let byAccepting = Object.create(null);\n    for (let state of states) {\n        let id = ids(state.accepting);\n        let group = byAccepting[id] || (byAccepting[id] = []);\n        group.push(state);\n        partition[state.id] = group;\n    }\n    for (;;) {\n        let split = false, newPartition = Object.create(null);\n        for (let state of states) {\n            if (newPartition[state.id])\n                continue;\n            let group = partition[state.id];\n            if (group.length == 1) {\n                newPartition[group[0].id] = group;\n                continue;\n            }\n            let parts = [];\n            groups: for (let state of group) {\n                for (let p of parts) {\n                    if (isEquivalent(state, p[0], partition)) {\n                        p.push(state);\n                        continue groups;\n                    }\n                }\n                parts.push([state]);\n            }\n            if (parts.length > 1)\n                split = true;\n            for (let p of parts)\n                for (let s of p)\n                    newPartition[s.id] = p;\n        }\n        if (!split)\n            return applyMinimization(states, start, partition);\n        partition = newPartition;\n    }\n}\nfunction isEquivalent(a, b, partition) {\n    if (a.edges.length != b.edges.length)\n        return false;\n    for (let i = 0; i < a.edges.length; i++) {\n        let eA = a.edges[i], eB = b.edges[i];\n        if (eA.from != eB.from || eA.to != eB.to || partition[eA.target.id] != partition[eB.target.id])\n            return false;\n    }\n    return true;\n}\nfunction applyMinimization(states, start, partition) {\n    for (let state of states) {\n        for (let i = 0; i < state.edges.length; i++) {\n            let edge = state.edges[i], target = partition[edge.target.id][0];\n            if (target != edge.target)\n                state.edges[i] = new Edge(edge.from, edge.to, target);\n        }\n    }\n    return partition[start.id][0];\n}\nlet stateID = 1;\nlet State$1 = class State {\n    constructor(accepting = [], id = stateID++) {\n        this.accepting = accepting;\n        this.id = id;\n        this.edges = [];\n    }\n    edge(from, to, target) {\n        this.edges.push(new Edge(from, to, target));\n    }\n    nullEdge(target) { this.edge(-1, -1, target); }\n    compile() {\n        let labeled = Object.create(null), localID = 0;\n        let startState = explore(this.closure().sort((a, b) => a.id - b.id));\n        return minimize(Object.values(labeled), startState);\n        function explore(states) {\n            let newState = labeled[ids(states)] =\n                new State(states.reduce((a, s) => union(a, s.accepting), []), localID++);\n            let out = [];\n            for (let state of states)\n                for (let edge of state.edges) {\n                    if (edge.from >= 0)\n                        out.push(edge);\n                }\n            let transitions = mergeEdges(out);\n            for (let merged of transitions) {\n                let targets = merged.targets.sort((a, b) => a.id - b.id);\n                newState.edge(merged.from, merged.to, labeled[ids(targets)] || explore(targets));\n            }\n            return newState;\n        }\n    }\n    closure() {\n        let result = [], seen = Object.create(null);\n        function explore(state) {\n            if (seen[state.id])\n                return;\n            seen[state.id] = true;\n            // States with only epsilon edges and no accepting term that\n            // isn't also in the next states are left out to help reduce the\n            // number of unique state combinations\n            if (state.edges.some(e => e.from >= 0) ||\n                (state.accepting.length > 0 && !state.edges.some(e => sameSet$1(state.accepting, e.target.accepting))))\n                result.push(state);\n            for (let edge of state.edges)\n                if (edge.from < 0)\n                    explore(edge.target);\n        }\n        explore(this);\n        return result;\n    }\n    findConflicts(occurTogether) {\n        let conflicts = [], cycleTerms = this.cycleTerms();\n        function add(a, b, soft, aEdges, bEdges) {\n            if (a.id < b.id) {\n                [a, b] = [b, a];\n                soft = -soft;\n            }\n            let found = conflicts.find(c => c.a == a && c.b == b);\n            if (!found)\n                conflicts.push(new Conflict$1(a, b, soft, exampleFromEdges(aEdges), bEdges && exampleFromEdges(bEdges)));\n            else if (found.soft != soft)\n                found.soft = 0;\n        }\n        this.reachable((state, edges) => {\n            if (state.accepting.length == 0)\n                return;\n            for (let i = 0; i < state.accepting.length; i++)\n                for (let j = i + 1; j < state.accepting.length; j++)\n                    add(state.accepting[i], state.accepting[j], 0, edges);\n            state.reachable((s, es) => {\n                if (s != state)\n                    for (let term of s.accepting) {\n                        let hasCycle = cycleTerms.includes(term);\n                        for (let orig of state.accepting)\n                            if (term != orig)\n                                add(term, orig, hasCycle || cycleTerms.includes(orig) || !occurTogether(term, orig) ? 0 : 1, edges, edges.concat(es));\n                    }\n            });\n        });\n        return conflicts;\n    }\n    cycleTerms() {\n        let work = [];\n        this.reachable(state => {\n            for (let { target } of state.edges)\n                work.push(state, target);\n        });\n        let table = new Map;\n        let haveCycle = [];\n        for (let i = 0; i < work.length;) {\n            let from = work[i++], to = work[i++];\n            let entry = table.get(from);\n            if (!entry)\n                table.set(from, entry = []);\n            if (entry.includes(to))\n                continue;\n            if (from == to) {\n                if (!haveCycle.includes(from))\n                    haveCycle.push(from);\n            }\n            else {\n                for (let next of entry)\n                    work.push(from, next);\n                entry.push(to);\n            }\n        }\n        let result = [];\n        for (let state of haveCycle) {\n            for (let term of state.accepting) {\n                if (!result.includes(term))\n                    result.push(term);\n            }\n        }\n        return result;\n    }\n    reachable(f) {\n        let seen = [], edges = [];\n        (function explore(s) {\n            f(s, edges);\n            seen.push(s);\n            for (let edge of s.edges)\n                if (!seen.includes(edge.target)) {\n                    edges.push(edge);\n                    explore(edge.target);\n                    edges.pop();\n                }\n        })(this);\n    }\n    toString() {\n        let out = \"digraph {\\n\";\n        this.reachable(state => {\n            if (state.accepting.length)\n                out += `  ${state.id} [label=${JSON.stringify(state.accepting.join())}];\\n`;\n            for (let edge of state.edges)\n                out += `  ${state.id} ${edge};\\n`;\n        });\n        return out + \"}\";\n    }\n    // Tokenizer data is represented as a single flat array. This\n    // contains regions for each tokenizer state. Region offsets are\n    // used to identify states.\n    //\n    // Each state is laid out as:\n    //  - Token group mask\n    //  - Offset of the end of the accepting data\n    //  - Number of outgoing edges in the state\n    //  - Pairs of token masks and term ids that indicate the accepting\n    //    states, sorted by precedence\n    //  - Triples for the edges: each with a low and high bound and the\n    //    offset of the next state.\n    toArray(groupMasks, precedence) {\n        let offsets = []; // Used to 'link' the states after building the arrays\n        let data = [];\n        this.reachable(state => {\n            let start = data.length;\n            let acceptEnd = start + 3 + state.accepting.length * 2;\n            offsets[state.id] = start;\n            data.push(state.stateMask(groupMasks), acceptEnd, state.edges.length);\n            state.accepting.sort((a, b) => precedence.indexOf(a.id) - precedence.indexOf(b.id));\n            for (let term of state.accepting)\n                data.push(term.id, groupMasks[term.id] || 0xffff);\n            for (let edge of state.edges)\n                data.push(edge.from, edge.to, -edge.target.id - 1);\n        });\n        // Replace negative numbers with resolved state offsets\n        for (let i = 0; i < data.length; i++)\n            if (data[i] < 0)\n                data[i] = offsets[-data[i] - 1];\n        if (data.length > Math.pow(2, 16))\n            throw new GenError(\"Tokenizer tables too big to represent with 16-bit offsets.\");\n        return Uint16Array.from(data);\n    }\n    stateMask(groupMasks) {\n        let mask = 0;\n        this.reachable(state => {\n            for (let term of state.accepting)\n                mask |= (groupMasks[term.id] || 0xffff);\n        });\n        return mask;\n    }\n};\nlet Conflict$1 = class Conflict {\n    constructor(a, b, \n    // Conflicts between two non-cyclic tokens are marked as\n    // 'soft', with a negative number if a is shorter than\n    // b, and a positive if b is shorter than a.\n    soft, exampleA, exampleB) {\n        this.a = a;\n        this.b = b;\n        this.soft = soft;\n        this.exampleA = exampleA;\n        this.exampleB = exampleB;\n    }\n};\nfunction exampleFromEdges(edges) {\n    let str = \"\";\n    for (let i = 0; i < edges.length; i++)\n        str += String.fromCharCode(edges[i].from);\n    return str;\n}\nfunction ids(elts) {\n    let result = \"\";\n    for (let elt of elts) {\n        if (result.length)\n            result += \"-\";\n        result += elt.id;\n    }\n    return result;\n}\nfunction sameSet$1(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i])\n            return false;\n    return true;\n}\nclass MergedEdge {\n    constructor(from, to, targets) {\n        this.from = from;\n        this.to = to;\n        this.targets = targets;\n    }\n}\n// Merge multiple edges (tagged by character ranges) into a set of\n// mutually exclusive ranges pointing at all target states for that\n// range\nfunction mergeEdges(edges) {\n    let separate = [], result = [];\n    for (let edge of edges) {\n        if (!separate.includes(edge.from))\n            separate.push(edge.from);\n        if (!separate.includes(edge.to))\n            separate.push(edge.to);\n    }\n    separate.sort((a, b) => a - b);\n    for (let i = 1; i < separate.length; i++) {\n        let from = separate[i - 1], to = separate[i];\n        let found = [];\n        for (let edge of edges)\n            if (edge.to > from && edge.from < to) {\n                for (let target of edge.target.closure())\n                    if (!found.includes(target))\n                        found.push(target);\n            }\n        if (found.length)\n            result.push(new MergedEdge(from, to, found));\n    }\n    let eof = edges.filter(e => e.from == 65535 /* Seq.End */ && e.to == 65535 /* Seq.End */);\n    if (eof.length) {\n        let found = [];\n        for (let edge of eof)\n            for (let target of edge.target.closure())\n                if (!found.includes(target))\n                    found.push(target);\n        if (found.length)\n            result.push(new MergedEdge(65535 /* Seq.End */, 65535 /* Seq.End */, found));\n    }\n    return result;\n}\n\n// Note that this is the parser for grammar files, not the generated parser\nlet word = /[\\w_-]+/gy;\n// Some engines (specifically SpiderMonkey) have still not implemented \\p\ntry {\n    word = /[\\p{Alphabetic}\\d_-]+/ugy;\n}\ncatch (_) { }\nconst none$2 = [];\nclass Input {\n    constructor(string, fileName = null) {\n        this.string = string;\n        this.fileName = fileName;\n        this.type = \"sof\";\n        this.value = null;\n        this.start = 0;\n        this.end = 0;\n        this.next();\n    }\n    lineInfo(pos) {\n        for (let line = 1, cur = 0;;) {\n            let next = this.string.indexOf(\"\\n\", cur);\n            if (next > -1 && next < pos) {\n                ++line;\n                cur = next + 1;\n            }\n            else {\n                return { line, ch: pos - cur };\n            }\n        }\n    }\n    message(msg, pos = -1) {\n        let posInfo = this.fileName || \"\";\n        if (pos > -1) {\n            let info = this.lineInfo(pos);\n            posInfo += (posInfo ? \" \" : \"\") + info.line + \":\" + info.ch;\n        }\n        return posInfo ? msg + ` (${posInfo})` : msg;\n    }\n    raise(msg, pos = -1) {\n        throw new GenError(this.message(msg, pos));\n    }\n    match(pos, re) {\n        let match = re.exec(this.string.slice(pos));\n        return match ? pos + match[0].length : -1;\n    }\n    next() {\n        let start = this.match(this.end, /^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/);\n        if (start == this.string.length)\n            return this.set(\"eof\", null, start, start);\n        let next = this.string[start];\n        if (next == '\"') {\n            let end = this.match(start + 1, /^(\\\\.|[^\"\\\\])*\"/);\n            if (end == -1)\n                this.raise(\"Unterminated string literal\", start);\n            return this.set(\"string\", readString(this.string.slice(start + 1, end - 1)), start, end);\n        }\n        else if (next == \"'\") {\n            let end = this.match(start + 1, /^(\\\\.|[^'\\\\])*'/);\n            if (end == -1)\n                this.raise(\"Unterminated string literal\", start);\n            return this.set(\"string\", readString(this.string.slice(start + 1, end - 1)), start, end);\n        }\n        else if (next == \"@\") {\n            word.lastIndex = start + 1;\n            let m = word.exec(this.string);\n            if (!m)\n                return this.raise(\"@ without a name\", start);\n            return this.set(\"at\", m[0], start, start + 1 + m[0].length);\n        }\n        else if ((next == \"$\" || next == \"!\") && this.string[start + 1] == \"[\") {\n            let end = this.match(start + 2, /^(?:\\\\.|[^\\]\\\\])*\\]/);\n            if (end == -1)\n                this.raise(\"Unterminated character set\", start);\n            return this.set(\"set\", this.string.slice(start + 2, end - 1), start, end);\n        }\n        else if (/[\\[\\]()!~+*?{}<>\\.,|:$=]/.test(next)) {\n            return this.set(next, null, start, start + 1);\n        }\n        else {\n            word.lastIndex = start;\n            let m = word.exec(this.string);\n            if (!m)\n                return this.raise(\"Unexpected character \" + JSON.stringify(next), start);\n            return this.set(\"id\", m[0], start, start + m[0].length);\n        }\n    }\n    set(type, value, start, end) {\n        this.type = type;\n        this.value = value;\n        this.start = start;\n        this.end = end;\n    }\n    eat(type, value = null) {\n        if (this.type == type && (value == null || this.value === value)) {\n            this.next();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    unexpected() {\n        return this.raise(`Unexpected token '${this.string.slice(this.start, this.end)}'`, this.start);\n    }\n    expect(type, value = null) {\n        let val = this.value;\n        if (this.type != type || !(value == null || val === value))\n            this.unexpected();\n        this.next();\n        return val;\n    }\n    parse() {\n        return parseGrammar(this);\n    }\n}\nfunction parseGrammar(input) {\n    let start = input.start;\n    let rules = [];\n    let prec = null;\n    let tokens = null;\n    let localTokens = [];\n    let mainSkip = null;\n    let scopedSkip = [];\n    let dialects = [];\n    let context = null;\n    let external = [];\n    let specialized = [];\n    let props = [];\n    let propSources = [];\n    let tops = [];\n    let sawTop = false;\n    let autoDelim = false;\n    while (input.type != \"eof\") {\n        let start = input.start;\n        if (input.eat(\"at\", \"top\")) {\n            if (input.type != \"id\")\n                input.raise(`Top rules must have a name`, input.start);\n            tops.push(parseRule(input, parseIdent(input)));\n            sawTop = true;\n        }\n        else if (input.type == \"at\" && input.value == \"tokens\") {\n            if (tokens)\n                input.raise(`Multiple @tokens declaractions`, input.start);\n            else\n                tokens = parseTokens(input);\n        }\n        else if (input.eat(\"at\", \"local\")) {\n            input.expect(\"id\", \"tokens\");\n            localTokens.push(parseLocalTokens(input, start));\n        }\n        else if (input.eat(\"at\", \"context\")) {\n            if (context)\n                input.raise(`Multiple @context declarations`, start);\n            let id = parseIdent(input);\n            input.expect(\"id\", \"from\");\n            let source = input.expect(\"string\");\n            context = new ContextDeclaration(start, id, source);\n        }\n        else if (input.eat(\"at\", \"external\")) {\n            if (input.eat(\"id\", \"tokens\"))\n                external.push(parseExternalTokens(input, start));\n            else if (input.eat(\"id\", \"prop\"))\n                props.push(parseExternalProp(input, start));\n            else if (input.eat(\"id\", \"extend\"))\n                specialized.push(parseExternalSpecialize(input, \"extend\", start));\n            else if (input.eat(\"id\", \"specialize\"))\n                specialized.push(parseExternalSpecialize(input, \"specialize\", start));\n            else if (input.eat(\"id\", \"propSource\"))\n                propSources.push(parseExternalPropSource(input, start));\n            else\n                input.unexpected();\n        }\n        else if (input.eat(\"at\", \"dialects\")) {\n            input.expect(\"{\");\n            for (let first = true; !input.eat(\"}\"); first = false) {\n                if (!first)\n                    input.eat(\",\");\n                dialects.push(parseIdent(input));\n            }\n        }\n        else if (input.type == \"at\" && input.value == \"precedence\") {\n            if (prec)\n                input.raise(`Multiple precedence declarations`, input.start);\n            prec = parsePrecedence(input);\n        }\n        else if (input.eat(\"at\", \"detectDelim\")) {\n            autoDelim = true;\n        }\n        else if (input.eat(\"at\", \"skip\")) {\n            let skip = parseBracedExpr(input);\n            if (input.type == \"{\") {\n                input.next();\n                let rules = [], topRules = [];\n                while (!input.eat(\"}\")) {\n                    if (input.eat(\"at\", \"top\")) {\n                        topRules.push(parseRule(input, parseIdent(input)));\n                        sawTop = true;\n                    }\n                    else {\n                        rules.push(parseRule(input));\n                    }\n                }\n                scopedSkip.push({ expr: skip, topRules, rules });\n            }\n            else {\n                if (mainSkip)\n                    input.raise(`Multiple top-level skip declarations`, input.start);\n                mainSkip = skip;\n            }\n        }\n        else {\n            rules.push(parseRule(input));\n        }\n    }\n    if (!sawTop)\n        return input.raise(`Missing @top declaration`);\n    return new GrammarDeclaration(start, rules, tops, tokens, localTokens, context, external, specialized, propSources, prec, mainSkip, scopedSkip, dialects, props, autoDelim);\n}\nfunction parseRule(input, named) {\n    let start = named ? named.start : input.start;\n    let id = named || parseIdent(input);\n    let props = parseProps(input);\n    let params = [];\n    if (input.eat(\"<\"))\n        while (!input.eat(\">\")) {\n            if (params.length)\n                input.expect(\",\");\n            params.push(parseIdent(input));\n        }\n    let expr = parseBracedExpr(input);\n    return new RuleDeclaration(start, id, props, params, expr);\n}\nfunction parseProps(input) {\n    if (input.type != \"[\")\n        return none$2;\n    let props = [];\n    input.expect(\"[\");\n    while (!input.eat(\"]\")) {\n        if (props.length)\n            input.expect(\",\");\n        props.push(parseProp(input));\n    }\n    return props;\n}\nfunction parseProp(input) {\n    let start = input.start, value = [], name = input.value, at = input.type == \"at\";\n    if (!input.eat(\"at\") && !input.eat(\"id\"))\n        input.unexpected();\n    if (input.eat(\"=\"))\n        for (;;) {\n            if (input.type == \"string\" || input.type == \"id\") {\n                value.push(new PropPart(input.start, input.value, null));\n                input.next();\n            }\n            else if (input.eat(\".\")) {\n                value.push(new PropPart(input.start, \".\", null));\n            }\n            else if (input.eat(\"{\")) {\n                value.push(new PropPart(input.start, null, input.expect(\"id\")));\n                input.expect(\"}\");\n            }\n            else {\n                break;\n            }\n        }\n    return new Prop(start, at, name, value);\n}\nfunction parseBracedExpr(input) {\n    input.expect(\"{\");\n    let expr = parseExprChoice(input);\n    input.expect(\"}\");\n    return expr;\n}\nconst SET_MARKER = \"\\ufdda\"; // (Invalid unicode character)\nfunction parseExprInner(input) {\n    let start = input.start;\n    if (input.eat(\"(\")) {\n        if (input.eat(\")\"))\n            return new SequenceExpression(start, none$2, [none$2, none$2]);\n        let expr = parseExprChoice(input);\n        input.expect(\")\");\n        return expr;\n    }\n    else if (input.type == \"string\") {\n        let value = input.value;\n        input.next();\n        if (value.length == 0)\n            return new SequenceExpression(start, none$2, [none$2, none$2]);\n        return new LiteralExpression(start, value);\n    }\n    else if (input.eat(\"id\", \"_\")) {\n        return new AnyExpression(start);\n    }\n    else if (input.type == \"set\") {\n        let content = input.value, invert = input.string[input.start] == \"!\";\n        let unescaped = readString(content.replace(/\\\\.|-|\"/g, (m) => {\n            return m == \"-\" ? SET_MARKER : m == '\"' ? '\\\\\"' : m;\n        }));\n        let ranges = [];\n        for (let pos = 0; pos < unescaped.length;) {\n            let code = unescaped.codePointAt(pos);\n            pos += code > 0xffff ? 2 : 1;\n            if (pos < unescaped.length - 1 && unescaped[pos] == SET_MARKER) {\n                let end = unescaped.codePointAt(pos + 1);\n                pos += end > 0xffff ? 3 : 2;\n                if (end < code)\n                    input.raise(\"Invalid character range\", input.start);\n                addRange(input, ranges, code, end + 1);\n            }\n            else {\n                if (code == SET_MARKER.charCodeAt(0))\n                    code = 45;\n                addRange(input, ranges, code, code + 1);\n            }\n        }\n        input.next();\n        return new SetExpression(start, ranges.sort((a, b) => a[0] - b[0]), invert);\n    }\n    else if (input.type == \"at\" && (input.value == \"specialize\" || input.value == \"extend\")) {\n        let { start, value } = input;\n        input.next();\n        let props = parseProps(input);\n        input.expect(\"<\");\n        let token = parseExprChoice(input), content;\n        if (input.eat(\",\")) {\n            content = parseExprChoice(input);\n        }\n        else if (token instanceof LiteralExpression) {\n            content = token;\n        }\n        else {\n            input.raise(`@${value} requires two arguments when its first argument isn't a literal string`);\n        }\n        input.expect(\">\");\n        return new SpecializeExpression(start, value, props, token, content);\n    }\n    else if (input.type == \"at\" && CharClasses.hasOwnProperty(input.value)) {\n        let cls = new CharClass(input.start, input.value);\n        input.next();\n        return cls;\n    }\n    else if (input.type == \"[\") {\n        let rule = parseRule(input, new Identifier(start, \"_anon\"));\n        if (rule.params.length)\n            input.raise(`Inline rules can't have parameters`, rule.start);\n        return new InlineRuleExpression(start, rule);\n    }\n    else {\n        let id = parseIdent(input);\n        if (input.type == \"[\" || input.type == \"{\") {\n            let rule = parseRule(input, id);\n            if (rule.params.length)\n                input.raise(`Inline rules can't have parameters`, rule.start);\n            return new InlineRuleExpression(start, rule);\n        }\n        else {\n            if (input.eat(\".\") && id.name == \"std\" && CharClasses.hasOwnProperty(input.value)) {\n                let cls = new CharClass(start, input.value);\n                input.next();\n                return cls;\n            }\n            return new NameExpression(start, id, parseArgs(input));\n        }\n    }\n}\nfunction parseArgs(input) {\n    let args = [];\n    if (input.eat(\"<\"))\n        while (!input.eat(\">\")) {\n            if (args.length)\n                input.expect(\",\");\n            args.push(parseExprChoice(input));\n        }\n    return args;\n}\nfunction addRange(input, ranges, from, to) {\n    if (!ranges.every(([a, b]) => b <= from || a >= to))\n        input.raise(\"Overlapping character range\", input.start);\n    ranges.push([from, to]);\n}\nfunction parseExprSuffix(input) {\n    let start = input.start;\n    let expr = parseExprInner(input);\n    for (;;) {\n        let kind = input.type;\n        if (input.eat(\"*\") || input.eat(\"?\") || input.eat(\"+\"))\n            expr = new RepeatExpression(start, expr, kind);\n        else\n            return expr;\n    }\n}\nfunction endOfSequence(input) {\n    return input.type == \"}\" || input.type == \")\" || input.type == \"|\" || input.type == \"/\" ||\n        input.type == \"/\\\\\" || input.type == \"{\" || input.type == \",\" || input.type == \">\";\n}\nfunction parseExprSequence(input) {\n    let start = input.start, exprs = [], markers = [none$2];\n    do {\n        // Add markers at this position\n        for (;;) {\n            let localStart = input.start, markerType;\n            if (input.eat(\"~\"))\n                markerType = \"ambig\";\n            else if (input.eat(\"!\"))\n                markerType = \"prec\";\n            else\n                break;\n            markers[markers.length - 1] =\n                markers[markers.length - 1].concat(new ConflictMarker(localStart, parseIdent(input), markerType));\n        }\n        if (endOfSequence(input))\n            break;\n        exprs.push(parseExprSuffix(input));\n        markers.push(none$2);\n    } while (!endOfSequence(input));\n    if (exprs.length == 1 && markers.every(ms => ms.length == 0))\n        return exprs[0];\n    return new SequenceExpression(start, exprs, markers, !exprs.length);\n}\nfunction parseExprChoice(input) {\n    let start = input.start, left = parseExprSequence(input);\n    if (!input.eat(\"|\"))\n        return left;\n    let exprs = [left];\n    do {\n        exprs.push(parseExprSequence(input));\n    } while (input.eat(\"|\"));\n    let empty = exprs.find(s => s instanceof SequenceExpression && s.empty);\n    if (empty)\n        input.raise(\"Empty expression in choice operator. If this is intentional, use () to make it explicit.\", empty.start);\n    return new ChoiceExpression(start, exprs);\n}\nfunction parseIdent(input) {\n    if (input.type != \"id\")\n        input.unexpected();\n    let start = input.start, name = input.value;\n    input.next();\n    return new Identifier(start, name);\n}\nfunction parsePrecedence(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let items = [];\n    while (!input.eat(\"}\")) {\n        if (items.length)\n            input.eat(\",\");\n        items.push({\n            id: parseIdent(input),\n            type: input.eat(\"at\", \"left\") ? \"left\" : input.eat(\"at\", \"right\") ? \"right\" : input.eat(\"at\", \"cut\") ? \"cut\" : null\n        });\n    }\n    return new PrecDeclaration(start, items);\n}\nfunction parseTokens(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let tokenRules = [];\n    let literals = [];\n    let precedences = [];\n    let conflicts = [];\n    while (!input.eat(\"}\")) {\n        if (input.type == \"at\" && input.value == \"precedence\") {\n            precedences.push(parseTokenPrecedence(input));\n        }\n        else if (input.type == \"at\" && input.value == \"conflict\") {\n            conflicts.push(parseTokenConflict(input));\n        }\n        else if (input.type == \"string\") {\n            literals.push(new LiteralDeclaration(input.start, input.expect(\"string\"), parseProps(input)));\n        }\n        else {\n            tokenRules.push(parseRule(input));\n        }\n    }\n    return new TokenDeclaration(start, precedences, conflicts, tokenRules, literals);\n}\nfunction parseLocalTokens(input, start) {\n    input.expect(\"{\");\n    let tokenRules = [];\n    let precedences = [];\n    let fallback = null;\n    while (!input.eat(\"}\")) {\n        if (input.type == \"at\" && input.value == \"precedence\") {\n            precedences.push(parseTokenPrecedence(input));\n        }\n        else if (input.eat(\"at\", \"else\") && !fallback) {\n            fallback = { id: parseIdent(input), props: parseProps(input) };\n        }\n        else {\n            tokenRules.push(parseRule(input));\n        }\n    }\n    return new LocalTokenDeclaration(start, precedences, tokenRules, fallback);\n}\nfunction parseTokenPrecedence(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let tokens = [];\n    while (!input.eat(\"}\")) {\n        if (tokens.length)\n            input.eat(\",\");\n        let expr = parseExprInner(input);\n        if (expr instanceof LiteralExpression || expr instanceof NameExpression)\n            tokens.push(expr);\n        else\n            input.raise(`Invalid expression in token precedences`, expr.start);\n    }\n    return new TokenPrecDeclaration(start, tokens);\n}\nfunction parseTokenConflict(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let a = parseExprInner(input);\n    if (!(a instanceof LiteralExpression || a instanceof NameExpression))\n        input.raise(`Invalid expression in token conflict`, a.start);\n    input.eat(\",\");\n    let b = parseExprInner(input);\n    if (!(b instanceof LiteralExpression || b instanceof NameExpression))\n        input.raise(`Invalid expression in token conflict`, b.start);\n    input.expect(\"}\");\n    return new TokenConflictDeclaration(start, a, b);\n}\nfunction parseExternalTokenSet(input) {\n    let tokens = [];\n    input.expect(\"{\");\n    while (!input.eat(\"}\")) {\n        if (tokens.length)\n            input.eat(\",\");\n        let id = parseIdent(input);\n        let props = parseProps(input);\n        tokens.push({ id, props });\n    }\n    return tokens;\n}\nfunction parseExternalTokens(input, start) {\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalTokenDeclaration(start, id, from, parseExternalTokenSet(input));\n}\nfunction parseExternalSpecialize(input, type, start) {\n    let token = parseBracedExpr(input);\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalSpecializeDeclaration(start, type, token, id, from, parseExternalTokenSet(input));\n}\nfunction parseExternalPropSource(input, start) {\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    return new ExternalPropSourceDeclaration(start, id, input.expect(\"string\"));\n}\nfunction parseExternalProp(input, start) {\n    let externalID = parseIdent(input);\n    let id = input.eat(\"id\", \"as\") ? parseIdent(input) : externalID;\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalPropDeclaration(start, id, externalID, from);\n}\nfunction readString(string) {\n    let point = /\\\\(?:u\\{([\\da-f]+)\\}|u([\\da-f]{4})|x([\\da-f]{2})|([ntbrf0])|(.))|[^]/yig;\n    let out = \"\", m;\n    while (m = point.exec(string)) {\n        let [all, u1, u2, u3, single, unknown] = m;\n        if (u1 || u2 || u3)\n            out += String.fromCodePoint(parseInt(u1 || u2 || u3, 16));\n        else if (single)\n            out += single == \"n\" ? \"\\n\" : single == \"t\" ? \"\\t\" : single == \"0\" ? \"\\0\" : single == \"r\" ? \"\\r\" : single == \"f\" ? \"\\f\" : \"\\b\";\n        else if (unknown)\n            out += unknown;\n        else\n            out += all;\n    }\n    return out;\n}\n\nfunction hash(a, b) { return (a << 5) + a + b; }\nfunction hashString(h, s) {\n    for (let i = 0; i < s.length; i++)\n        h = hash(h, s.charCodeAt(i));\n    return h;\n}\n\nconst verbose = (typeof process != \"undefined\" && process.env.LOG) || \"\";\nconst timing = /\\btime\\b/.test(verbose);\nconst time = timing ? (label, f) => {\n    let t0 = Date.now();\n    let result = f();\n    console.log(`${label} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n    return result;\n} : (_label, f) => f();\n\nclass Pos {\n    constructor(rule, pos, \n    // NOTE `ahead` and `ambigAhead` aren't mutated anymore after `finish()` has been called\n    ahead, ambigAhead, skipAhead, via) {\n        this.rule = rule;\n        this.pos = pos;\n        this.ahead = ahead;\n        this.ambigAhead = ambigAhead;\n        this.skipAhead = skipAhead;\n        this.via = via;\n        this.hash = 0;\n    }\n    finish() {\n        let h = hash(hash(this.rule.id, this.pos), this.skipAhead.hash);\n        for (let a of this.ahead)\n            h = hash(h, a.hash);\n        for (let group of this.ambigAhead)\n            h = hashString(h, group);\n        this.hash = h;\n        return this;\n    }\n    get next() {\n        return this.pos < this.rule.parts.length ? this.rule.parts[this.pos] : null;\n    }\n    advance() {\n        return new Pos(this.rule, this.pos + 1, this.ahead, this.ambigAhead, this.skipAhead, this.via).finish();\n    }\n    get skip() {\n        return this.pos == this.rule.parts.length ? this.skipAhead : this.rule.skip;\n    }\n    cmp(pos) {\n        return this.rule.cmp(pos.rule) || this.pos - pos.pos || this.skipAhead.hash - pos.skipAhead.hash ||\n            cmpSet(this.ahead, pos.ahead, (a, b) => a.cmp(b)) || cmpSet(this.ambigAhead, pos.ambigAhead, cmpStr);\n    }\n    eqSimple(pos) {\n        return pos.rule == this.rule && pos.pos == this.pos;\n    }\n    toString() {\n        let parts = this.rule.parts.map(t => t.name);\n        parts.splice(this.pos, 0, \"·\");\n        return `${this.rule.name} -> ${parts.join(\" \")}`;\n    }\n    eq(other) {\n        return this == other ||\n            this.hash == other.hash && this.rule == other.rule && this.pos == other.pos && this.skipAhead == other.skipAhead &&\n                sameSet(this.ahead, other.ahead) &&\n                sameSet(this.ambigAhead, other.ambigAhead);\n    }\n    trail(maxLen = 60) {\n        let result = [];\n        for (let pos = this; pos; pos = pos.via) {\n            for (let i = pos.pos - 1; i >= 0; i--)\n                result.push(pos.rule.parts[i]);\n        }\n        let value = result.reverse().join(\" \");\n        if (value.length > maxLen)\n            value = value.slice(value.length - maxLen).replace(/.*? /, \"… \");\n        return value;\n    }\n    conflicts(pos = this.pos) {\n        let result = this.rule.conflicts[pos];\n        if (pos == this.rule.parts.length && this.ambigAhead.length)\n            result = result.join(new Conflicts(0, this.ambigAhead));\n        return result;\n    }\n    static addOrigins(group, context) {\n        let result = group.slice();\n        for (let i = 0; i < result.length; i++) {\n            let next = result[i];\n            if (next.pos == 0)\n                for (let pos of context) {\n                    if (pos.next == next.rule.name && !result.includes(pos))\n                        result.push(pos);\n                }\n        }\n        return result;\n    }\n}\nfunction conflictsAt(group) {\n    let result = Conflicts.none;\n    for (let pos of group)\n        result = result.join(pos.conflicts());\n    return result;\n}\n// Applies automatic action precedence based on repeat productions.\n// These are left-associative, so reducing the `R -> R R` rule has\n// higher precedence.\nfunction compareRepeatPrec(a, b) {\n    for (let pos of a)\n        if (pos.rule.name.repeated) {\n            for (let posB of b)\n                if (posB.rule.name == pos.rule.name) {\n                    if (pos.rule.isRepeatWrap && pos.pos == 2)\n                        return 1;\n                    if (posB.rule.isRepeatWrap && posB.pos == 2)\n                        return -1;\n                }\n        }\n    return 0;\n}\nfunction cmpStr(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction termsAhead(rule, pos, after, first) {\n    let found = [];\n    for (let i = pos + 1; i < rule.parts.length; i++) {\n        let next = rule.parts[i], cont = false;\n        if (next.terminal) {\n            addTo(next, found);\n        }\n        else\n            for (let term of first[next.name]) {\n                if (term == null)\n                    cont = true;\n                else\n                    addTo(term, found);\n            }\n        if (!cont)\n            return found;\n    }\n    for (let a of after)\n        addTo(a, found);\n    return found;\n}\nfunction eqSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction sameSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i])\n            return false;\n    return true;\n}\nclass Shift {\n    constructor(term, target) {\n        this.term = term;\n        this.target = target;\n    }\n    eq(other) { return other instanceof Shift && this.term == other.term && other.target.id == this.target.id; }\n    cmp(other) { return other instanceof Reduce ? -1 : this.term.id - other.term.id || this.target.id - other.target.id; }\n    matches(other, mapping) {\n        return other instanceof Shift && mapping[other.target.id] == mapping[this.target.id];\n    }\n    toString() { return \"s\" + this.target.id; }\n    map(mapping, states) {\n        let mapped = states[mapping[this.target.id]];\n        return mapped == this.target ? this : new Shift(this.term, mapped);\n    }\n}\nclass Reduce {\n    constructor(term, rule) {\n        this.term = term;\n        this.rule = rule;\n    }\n    eq(other) {\n        return other instanceof Reduce && this.term == other.term && other.rule.sameReduce(this.rule);\n    }\n    cmp(other) {\n        return other instanceof Shift ? 1 : this.term.id - other.term.id || this.rule.name.id - other.rule.name.id ||\n            this.rule.parts.length - other.rule.parts.length;\n    }\n    matches(other, mapping) {\n        return other instanceof Reduce && other.rule.sameReduce(this.rule);\n    }\n    toString() { return `${this.rule.name.name}(${this.rule.parts.length})`; }\n    map() { return this; }\n}\nfunction hashPositions(set) {\n    let h = 5381;\n    for (let pos of set)\n        h = hash(h, pos.hash);\n    return h;\n}\nclass ConflictContext {\n    constructor(first) {\n        this.first = first;\n        this.conflicts = [];\n    }\n}\nclass State {\n    constructor(id, set, flags = 0, skip, hash = hashPositions(set), startRule = null) {\n        this.id = id;\n        this.set = set;\n        this.flags = flags;\n        this.skip = skip;\n        this.hash = hash;\n        this.startRule = startRule;\n        this.actions = [];\n        this.actionPositions = [];\n        this.goto = [];\n        this.tokenGroup = -1;\n        this.defaultReduce = null;\n        this._actionsByTerm = null;\n    }\n    toString() {\n        let actions = this.actions.map(t => t.term + \"=\" + t).join(\",\") +\n            (this.goto.length ? \" | \" + this.goto.map(g => g.term + \"=\" + g).join(\",\") : \"\");\n        return this.id + \": \" + this.set.filter(p => p.pos > 0).join() +\n            (this.defaultReduce ? `\\n  always ${this.defaultReduce.name}(${this.defaultReduce.parts.length})`\n                : actions.length ? \"\\n  \" + actions : \"\");\n    }\n    addActionInner(value, positions) {\n        check: for (let i = 0; i < this.actions.length; i++) {\n            let action = this.actions[i];\n            if (action.term == value.term) {\n                if (action.eq(value))\n                    return null;\n                let fullPos = Pos.addOrigins(positions, this.set), actionFullPos = Pos.addOrigins(this.actionPositions[i], this.set);\n                let conflicts = conflictsAt(fullPos), actionConflicts = conflictsAt(actionFullPos);\n                let diff = compareRepeatPrec(fullPos, actionFullPos) || conflicts.precedence - actionConflicts.precedence;\n                if (diff > 0) { // Drop the existing action\n                    this.actions.splice(i, 1);\n                    this.actionPositions.splice(i, 1);\n                    i--;\n                    continue check;\n                }\n                else if (diff < 0) { // Drop this one\n                    return null;\n                }\n                else if (conflicts.ambigGroups.some(g => actionConflicts.ambigGroups.includes(g))) { // Explicitly allowed ambiguity\n                    continue check;\n                }\n                else { // Not resolved\n                    return action;\n                }\n            }\n        }\n        this.actions.push(value);\n        this.actionPositions.push(positions);\n        return null;\n    }\n    addAction(value, positions, context) {\n        let conflict = this.addActionInner(value, positions);\n        if (conflict) {\n            let conflictPos = this.actionPositions[this.actions.indexOf(conflict)][0];\n            let rules = [positions[0].rule.name, conflictPos.rule.name];\n            if (context.conflicts.some(c => c.rules.some(r => rules.includes(r))))\n                return;\n            let error;\n            if (conflict instanceof Shift)\n                error = `shift/reduce conflict between\\n  ${conflictPos}\\nand\\n  ${positions[0].rule}`;\n            else\n                error = `reduce/reduce conflict between\\n  ${conflictPos.rule}\\nand\\n  ${positions[0].rule}`;\n            error += `\\nWith input:\\n  ${positions[0].trail(70)} · ${value.term} …`;\n            if (conflict instanceof Shift)\n                error += findConflictShiftSource(positions[0], conflict.term, context.first);\n            error += findConflictOrigin(conflictPos, positions[0]);\n            context.conflicts.push(new Conflict(error, rules));\n        }\n    }\n    getGoto(term) {\n        return this.goto.find(a => a.term == term);\n    }\n    hasSet(set) {\n        return eqSet(this.set, set);\n    }\n    actionsByTerm() {\n        let result = this._actionsByTerm;\n        if (!result) {\n            this._actionsByTerm = result = Object.create(null);\n            for (let action of this.actions)\n                (result[action.term.id] || (result[action.term.id] = [])).push(action);\n        }\n        return result;\n    }\n    finish() {\n        if (this.actions.length) {\n            let first = this.actions[0];\n            if (first instanceof Reduce) {\n                let { rule } = first;\n                if (this.actions.every(a => a instanceof Reduce && a.rule.sameReduce(rule)))\n                    this.defaultReduce = rule;\n            }\n        }\n        this.actions.sort((a, b) => a.cmp(b));\n        this.goto.sort((a, b) => a.cmp(b));\n    }\n    eq(other) {\n        let dThis = this.defaultReduce, dOther = other.defaultReduce;\n        if (dThis || dOther)\n            return dThis && dOther ? dThis.sameReduce(dOther) : false;\n        return this.skip == other.skip &&\n            this.tokenGroup == other.tokenGroup &&\n            eqSet(this.actions, other.actions) &&\n            eqSet(this.goto, other.goto);\n    }\n}\nfunction closure(set, first) {\n    let added = [], redo = [];\n    function addFor(name, ahead, ambigAhead, skipAhead, via) {\n        for (let rule of name.rules) {\n            let add = added.find(a => a.rule == rule);\n            if (!add) {\n                let existing = set.find(p => p.pos == 0 && p.rule == rule);\n                add = existing ? new Pos(rule, 0, existing.ahead.slice(), existing.ambigAhead, existing.skipAhead, existing.via)\n                    : new Pos(rule, 0, [], none$1, skipAhead, via);\n                added.push(add);\n            }\n            if (add.skipAhead != skipAhead)\n                throw new GenError(\"Inconsistent skip sets after \" + via.trail());\n            add.ambigAhead = union(add.ambigAhead, ambigAhead);\n            for (let term of ahead)\n                if (!add.ahead.includes(term)) {\n                    add.ahead.push(term);\n                    if (add.rule.parts.length && !add.rule.parts[0].terminal)\n                        addTo(add, redo);\n                }\n        }\n    }\n    for (let pos of set) {\n        let next = pos.next;\n        if (next && !next.terminal)\n            addFor(next, termsAhead(pos.rule, pos.pos, pos.ahead, first), pos.conflicts(pos.pos + 1).ambigGroups, pos.pos == pos.rule.parts.length - 1 ? pos.skipAhead : pos.rule.skip, pos);\n    }\n    while (redo.length) {\n        let add = redo.pop();\n        addFor(add.rule.parts[0], termsAhead(add.rule, 0, add.ahead, first), union(add.rule.conflicts[1].ambigGroups, add.rule.parts.length == 1 ? add.ambigAhead : none$1), add.rule.parts.length == 1 ? add.skipAhead : add.rule.skip, add);\n    }\n    let result = set.slice();\n    for (let add of added) {\n        add.ahead.sort((a, b) => a.hash - b.hash);\n        add.finish();\n        let origIndex = set.findIndex(p => p.pos == 0 && p.rule == add.rule);\n        if (origIndex > -1)\n            result[origIndex] = add;\n        else\n            result.push(add);\n    }\n    return result.sort((a, b) => a.cmp(b));\n}\nfunction addTo(value, array) {\n    if (!array.includes(value))\n        array.push(value);\n}\nfunction computeFirstSets(terms) {\n    let table = Object.create(null);\n    for (let t of terms.terms)\n        if (!t.terminal)\n            table[t.name] = [];\n    for (;;) {\n        let change = false;\n        for (let nt of terms.terms)\n            if (!nt.terminal)\n                for (let rule of nt.rules) {\n                    let set = table[nt.name];\n                    let found = false, startLen = set.length;\n                    for (let part of rule.parts) {\n                        found = true;\n                        if (part.terminal) {\n                            addTo(part, set);\n                        }\n                        else {\n                            for (let t of table[part.name]) {\n                                if (t == null)\n                                    found = false;\n                                else\n                                    addTo(t, set);\n                            }\n                        }\n                        if (found)\n                            break;\n                    }\n                    if (!found)\n                        addTo(null, set);\n                    if (set.length > startLen)\n                        change = true;\n                }\n        if (!change)\n            return table;\n    }\n}\nclass Core {\n    constructor(set, state) {\n        this.set = set;\n        this.state = state;\n    }\n}\nclass Conflict {\n    constructor(error, rules) {\n        this.error = error;\n        this.rules = rules;\n    }\n}\nfunction findConflictOrigin(a, b) {\n    if (a.eqSimple(b))\n        return \"\";\n    function via(root, start) {\n        let hist = [];\n        for (let p = start.via; !p.eqSimple(root); p = p.via)\n            hist.push(p);\n        if (!hist.length)\n            return \"\";\n        hist.unshift(start);\n        return hist.reverse().map((p, i) => \"\\n\" + \"  \".repeat(i + 1) + (p == start ? \"\" : \"via \") + p).join(\"\");\n    }\n    for (let p = a; p; p = p.via)\n        for (let p2 = b; p2; p2 = p2.via) {\n            if (p.eqSimple(p2))\n                return \"\\nShared origin: \" + p + via(p, a) + via(p, b);\n        }\n    return \"\";\n}\n// Search for the reason that a given 'after' token exists at the\n// given pos, by scanning up the trail of positions. Because the `via`\n// link is only one source of a pos, of potentially many, this\n// requires a re-simulation of the whole path up to the pos.\nfunction findConflictShiftSource(conflictPos, termAfter, first) {\n    let pos = conflictPos, path = [];\n    for (;;) {\n        for (let i = pos.pos - 1; i >= 0; i--)\n            path.push(pos.rule.parts[i]);\n        if (!pos.via)\n            break;\n        pos = pos.via;\n    }\n    path.reverse();\n    let seen = new Set();\n    function explore(pos, i, hasMatch) {\n        if (i == path.length && hasMatch && !pos.next)\n            return `\\nThe reduction of ${conflictPos.rule.name} is allowed before ${termAfter} because of this rule:\\n  ${hasMatch}`;\n        for (let next; next = pos.next;) {\n            if (i < path.length && next == path[i]) {\n                let inner = explore(pos.advance(), i + 1, hasMatch);\n                if (inner)\n                    return inner;\n            }\n            let after = pos.rule.parts[pos.pos + 1], match = pos.pos + 1 == pos.rule.parts.length ? hasMatch : null;\n            if (after && (after.terminal ? after == termAfter : first[after.name].includes(termAfter)))\n                match = pos.advance();\n            for (let rule of next.rules) {\n                let hash = (rule.id << 5) + i + (match ? 555 : 0);\n                if (!seen.has(hash)) {\n                    seen.add(hash);\n                    let inner = explore(new Pos(rule, 0, [], [], next, pos), i, match);\n                    if (inner)\n                        return inner;\n                }\n            }\n            if (!next.terminal && first[next.name].includes(null))\n                pos = pos.advance();\n            else\n                break;\n        }\n        return \"\";\n    }\n    return explore(pos, 0, null);\n}\n// Builds a full LR(1) automaton\nfunction buildFullAutomaton(terms, startTerms, first) {\n    let states = [], statesBySetHash = {};\n    let cores = {};\n    let t0 = Date.now();\n    function getState(core, top) {\n        if (core.length == 0)\n            return null;\n        let coreHash = hashPositions(core), byHash = cores[coreHash];\n        let skip;\n        for (let pos of core) {\n            if (!skip)\n                skip = pos.skip;\n            else if (skip != pos.skip)\n                throw new GenError(\"Inconsistent skip sets after \" + pos.trail());\n        }\n        if (byHash)\n            for (let known of byHash)\n                if (eqSet(core, known.set)) {\n                    if (known.state.skip != skip)\n                        throw new GenError(\"Inconsistent skip sets after \" + known.set[0].trail());\n                    return known.state;\n                }\n        let set = closure(core, first);\n        let hash = hashPositions(set), forHash = statesBySetHash[hash] || (statesBySetHash[hash] = []);\n        let found;\n        if (!top)\n            for (let state of forHash)\n                if (state.hasSet(set))\n                    found = state;\n        if (!found) {\n            found = new State(states.length, set, 0, skip, hash, top);\n            forHash.push(found);\n            states.push(found);\n            if (timing && states.length % 500 == 0)\n                console.log(`${states.length} states after ${((Date.now() - t0) / 1000).toFixed(2)}s`);\n        }\n        (cores[coreHash] || (cores[coreHash] = [])).push(new Core(core, found));\n        return found;\n    }\n    for (const startTerm of startTerms) {\n        const startSkip = startTerm.rules.length ? startTerm.rules[0].skip : terms.names[\"%noskip\"];\n        getState(startTerm.rules.map(rule => new Pos(rule, 0, [terms.eof], none$1, startSkip, null).finish()), startTerm);\n    }\n    let conflicts = new ConflictContext(first);\n    for (let filled = 0; filled < states.length; filled++) {\n        let state = states[filled];\n        let byTerm = [], byTermPos = [], atEnd = [];\n        for (let pos of state.set) {\n            if (pos.pos == pos.rule.parts.length) {\n                if (!pos.rule.name.top)\n                    atEnd.push(pos);\n            }\n            else {\n                let next = pos.rule.parts[pos.pos];\n                let index = byTerm.indexOf(next);\n                if (index < 0) {\n                    byTerm.push(next);\n                    byTermPos.push([pos]);\n                }\n                else {\n                    byTermPos[index].push(pos);\n                }\n            }\n        }\n        for (let i = 0; i < byTerm.length; i++) {\n            let term = byTerm[i], positions = byTermPos[i].map(p => p.advance());\n            if (term.terminal) {\n                let set = applyCut(positions);\n                let next = getState(set);\n                if (next)\n                    state.addAction(new Shift(term, next), byTermPos[i], conflicts);\n            }\n            else {\n                let goto = getState(positions);\n                if (goto)\n                    state.goto.push(new Shift(term, goto));\n            }\n        }\n        let replaced = false;\n        for (let pos of atEnd)\n            for (let ahead of pos.ahead) {\n                let count = state.actions.length;\n                state.addAction(new Reduce(ahead, pos.rule), [pos], conflicts);\n                if (state.actions.length == count)\n                    replaced = true;\n            }\n        // If some actions were replaced by others, double-check whether\n        // goto entries are now superfluous (for example, in an operator\n        // precedence-related state that has a shift for `*` but only a\n        // reduce for `+`, we don't need a goto entry for rules that start\n        // with `+`)\n        if (replaced)\n            for (let i = 0; i < state.goto.length; i++) {\n                let start = first[state.goto[i].term.name];\n                if (!start.some(term => state.actions.some(a => a.term == term && (a instanceof Shift))))\n                    state.goto.splice(i--, 1);\n            }\n    }\n    if (conflicts.conflicts.length)\n        throw new GenError(conflicts.conflicts.map(c => c.error).join(\"\\n\\n\"));\n    // Resolve alwaysReduce and sort actions\n    for (let state of states)\n        state.finish();\n    if (timing)\n        console.log(`${states.length} states total.`);\n    return states;\n}\nfunction applyCut(set) {\n    let found = null, cut = 1;\n    for (let pos of set) {\n        let value = pos.rule.conflicts[pos.pos - 1].cut;\n        if (value < cut)\n            continue;\n        if (!found || value > cut) {\n            cut = value;\n            found = [];\n        }\n        found.push(pos);\n    }\n    return found || set;\n}\n// Verify that there are no conflicting actions or goto entries in the\n// two given states (using the state ID remapping provided in mapping)\nfunction canMerge(a, b, mapping) {\n    // If a goto for the same term differs, that makes the states\n    // incompatible\n    for (let goto of a.goto)\n        for (let other of b.goto) {\n            if (goto.term == other.term && mapping[goto.target.id] != mapping[other.target.id])\n                return false;\n        }\n    // If there is an action where a conflicting action exists in the\n    // other state, the merge is only allowed when both states have the\n    // exact same set of actions for this term.\n    let byTerm = b.actionsByTerm();\n    for (let action of a.actions) {\n        let setB = byTerm[action.term.id];\n        if (setB && setB.some(other => !other.matches(action, mapping))) {\n            if (setB.length == 1)\n                return false;\n            let setA = a.actionsByTerm()[action.term.id];\n            if (setA.length != setB.length || setA.some(a1 => !setB.some(a2 => a1.matches(a2, mapping))))\n                return false;\n        }\n    }\n    return true;\n}\nfunction mergeStates(states, mapping) {\n    let newStates = [];\n    for (let state of states) {\n        let newID = mapping[state.id];\n        if (!newStates[newID]) {\n            newStates[newID] = new State(newID, state.set, 0, state.skip, state.hash, state.startRule);\n            newStates[newID].tokenGroup = state.tokenGroup;\n            newStates[newID].defaultReduce = state.defaultReduce;\n        }\n    }\n    for (let state of states) {\n        let newID = mapping[state.id], target = newStates[newID];\n        target.flags |= state.flags;\n        for (let i = 0; i < state.actions.length; i++) {\n            let action = state.actions[i].map(mapping, newStates);\n            if (!target.actions.some(a => a.eq(action))) {\n                target.actions.push(action);\n                target.actionPositions.push(state.actionPositions[i]);\n            }\n        }\n        for (let goto of state.goto) {\n            let mapped = goto.map(mapping, newStates);\n            if (!target.goto.some(g => g.eq(mapped)))\n                target.goto.push(mapped);\n        }\n    }\n    return newStates;\n}\nclass Group {\n    constructor(origin, member) {\n        this.origin = origin;\n        this.members = [member];\n    }\n}\nfunction samePosSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].eqSimple(b[i]))\n            return false;\n    return true;\n}\n// Collapse an LR(1) automaton to an LALR-like automaton\nfunction collapseAutomaton(states) {\n    let mapping = [], groups = [];\n    assignGroups: for (let i = 0; i < states.length; i++) {\n        let state = states[i];\n        if (!state.startRule)\n            for (let j = 0; j < groups.length; j++) {\n                let group = groups[j], other = states[group.members[0]];\n                if (state.tokenGroup == other.tokenGroup &&\n                    state.skip == other.skip &&\n                    !other.startRule &&\n                    samePosSet(state.set, other.set)) {\n                    group.members.push(i);\n                    mapping.push(j);\n                    continue assignGroups;\n                }\n            }\n        mapping.push(groups.length);\n        groups.push(new Group(groups.length, i));\n    }\n    function spill(groupIndex, index) {\n        let group = groups[groupIndex], state = states[group.members[index]];\n        let pop = group.members.pop();\n        if (index != group.members.length)\n            group.members[index] = pop;\n        for (let i = groupIndex + 1; i < groups.length; i++) {\n            mapping[state.id] = i;\n            if (groups[i].origin == group.origin &&\n                groups[i].members.every(id => canMerge(state, states[id], mapping))) {\n                groups[i].members.push(state.id);\n                return;\n            }\n        }\n        mapping[state.id] = groups.length;\n        groups.push(new Group(group.origin, state.id));\n    }\n    for (let pass = 1;; pass++) {\n        let conflicts = false, t0 = Date.now();\n        for (let g = 0, startLen = groups.length; g < startLen; g++) {\n            let group = groups[g];\n            for (let i = 0; i < group.members.length - 1; i++) {\n                for (let j = i + 1; j < group.members.length; j++) {\n                    let idA = group.members[i], idB = group.members[j];\n                    if (!canMerge(states[idA], states[idB], mapping)) {\n                        conflicts = true;\n                        spill(g, j--);\n                    }\n                }\n            }\n        }\n        if (timing)\n            console.log(`Collapse pass ${pass}${conflicts ? `` : `, done`} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n        if (!conflicts)\n            return mergeStates(states, mapping);\n    }\n}\nfunction mergeIdentical(states) {\n    for (let pass = 1;; pass++) {\n        let mapping = [], didMerge = false, t0 = Date.now();\n        let newStates = [];\n        // Find states that either have the same alwaysReduce or the same\n        // actions, and merge them.\n        for (let i = 0; i < states.length; i++) {\n            let state = states[i];\n            let match = newStates.findIndex(s => state.eq(s));\n            if (match < 0) {\n                mapping[i] = newStates.length;\n                newStates.push(state);\n            }\n            else {\n                mapping[i] = match;\n                didMerge = true;\n                let other = newStates[match], add = null;\n                for (let pos of state.set)\n                    if (!other.set.some(p => p.eqSimple(pos)))\n                        (add || (add = [])).push(pos);\n                if (add)\n                    other.set = add.concat(other.set).sort((a, b) => a.cmp(b));\n            }\n        }\n        if (timing)\n            console.log(`Merge identical pass ${pass}${didMerge ? \"\" : \", done\"} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n        if (!didMerge)\n            return states;\n        // Make sure actions point at merged state objects\n        for (let state of newStates)\n            if (!state.defaultReduce) {\n                state.actions = state.actions.map(a => a.map(mapping, newStates));\n                state.goto = state.goto.map(a => a.map(mapping, newStates));\n            }\n        // Renumber ids\n        for (let i = 0; i < newStates.length; i++)\n            newStates[i].id = i;\n        states = newStates;\n    }\n}\nconst none$1 = [];\nfunction finishAutomaton(full) {\n    return mergeIdentical(collapseAutomaton(full));\n}\n\n// Encode numbers as groups of printable ascii characters\n//\n// - 0xffff, which is often used as placeholder, is encoded as \"~\"\n//\n// - The characters from \" \" (32) to \"}\" (125), excluding '\"' and\n//   \"\\\\\", indicate values from 0 to 92\n//\n// - The first bit in a 'digit' is used to indicate whether this is\n//   the end of a number.\n//\n// - That leaves 46 other values, which are actually significant.\n//\n// - The digits in a number are ordered from high to low significance.\nfunction digitToChar(digit) {\n    let ch = digit + 32 /* Encode.Start */;\n    if (ch >= 34 /* Encode.Gap1 */)\n        ch++;\n    if (ch >= 92 /* Encode.Gap2 */)\n        ch++;\n    return String.fromCharCode(ch);\n}\nfunction encode(value, max = 0xffff) {\n    if (value > max)\n        throw new Error(\"Trying to encode a number that's too big: \" + value);\n    if (value == 65535 /* Encode.BigVal */)\n        return String.fromCharCode(126 /* Encode.BigValCode */);\n    let result = \"\";\n    for (let first = 46 /* Encode.Base */;; first = 0) {\n        let low = value % 46 /* Encode.Base */, rest = value - low;\n        result = digitToChar(low + first) + result;\n        if (rest == 0)\n            break;\n        value = rest / 46 /* Encode.Base */;\n    }\n    return result;\n}\nfunction encodeArray(values, max = 0xffff) {\n    let result = '\"' + encode(values.length, 0xffffffff);\n    for (let i = 0; i < values.length; i++)\n        result += encode(values[i], max);\n    result += '\"';\n    return result;\n}\n\nconst none = [];\nclass Parts {\n    constructor(terms, conflicts) {\n        this.terms = terms;\n        this.conflicts = conflicts;\n    }\n    concat(other) {\n        if (this == Parts.none)\n            return other;\n        if (other == Parts.none)\n            return this;\n        let conflicts = null;\n        if (this.conflicts || other.conflicts) {\n            conflicts = this.conflicts ? this.conflicts.slice() : this.ensureConflicts();\n            let otherConflicts = other.ensureConflicts();\n            conflicts[conflicts.length - 1] = conflicts[conflicts.length - 1].join(otherConflicts[0]);\n            for (let i = 1; i < otherConflicts.length; i++)\n                conflicts.push(otherConflicts[i]);\n        }\n        return new Parts(this.terms.concat(other.terms), conflicts);\n    }\n    withConflicts(pos, conflicts) {\n        if (conflicts == Conflicts.none)\n            return this;\n        let array = this.conflicts ? this.conflicts.slice() : this.ensureConflicts();\n        array[pos] = array[pos].join(conflicts);\n        return new Parts(this.terms, array);\n    }\n    ensureConflicts() {\n        if (this.conflicts)\n            return this.conflicts;\n        let empty = [];\n        for (let i = 0; i <= this.terms.length; i++)\n            empty.push(Conflicts.none);\n        return empty;\n    }\n}\nParts.none = new Parts(none, null);\nfunction p(...terms) { return new Parts(terms, null); }\nclass BuiltRule {\n    constructor(id, args, term) {\n        this.id = id;\n        this.args = args;\n        this.term = term;\n    }\n    matches(expr) {\n        return this.id == expr.id.name && exprsEq(expr.args, this.args);\n    }\n    matchesRepeat(expr) {\n        return this.id == \"+\" && exprEq(expr.expr, this.args[0]);\n    }\n}\nclass Builder {\n    constructor(text, options) {\n        this.options = options;\n        this.terms = new TermSet;\n        this.specialized = Object.create(null);\n        this.tokenOrigins = Object.create(null);\n        this.rules = [];\n        this.built = [];\n        this.ruleNames = Object.create(null);\n        this.namespaces = Object.create(null);\n        this.namedTerms = Object.create(null);\n        this.termTable = Object.create(null);\n        this.knownProps = Object.create(null);\n        this.dynamicRulePrecedences = [];\n        this.definedGroups = [];\n        this.astRules = [];\n        this.currentSkip = [];\n        time(\"Parse\", () => {\n            this.input = new Input(text, options.fileName);\n            this.ast = this.input.parse();\n        });\n        let NP = NodeProp;\n        for (let prop in NP) {\n            if (NP[prop] instanceof NodeProp && !NP[prop].perNode)\n                this.knownProps[prop] = { prop: NP[prop], source: { name: prop, from: null } };\n        }\n        for (let prop of this.ast.externalProps) {\n            this.knownProps[prop.id.name] = {\n                prop: this.options.externalProp ? this.options.externalProp(prop.id.name) : new NodeProp(),\n                source: { name: prop.externalID.name, from: prop.source }\n            };\n        }\n        this.dialects = this.ast.dialects.map(d => d.name);\n        this.tokens = new MainTokenSet(this, this.ast.tokens);\n        this.localTokens = this.ast.localTokens.map(g => new LocalTokenSet(this, g));\n        this.externalTokens = this.ast.externalTokens.map(ext => new ExternalTokenSet(this, ext));\n        this.externalSpecializers = this.ast.externalSpecializers.map(decl => new ExternalSpecializer(this, decl));\n        time(\"Build rules\", () => {\n            let noSkip = this.newName(\"%noskip\", true);\n            this.defineRule(noSkip, []);\n            let mainSkip = this.ast.mainSkip ? this.newName(\"%mainskip\", true) : noSkip;\n            let scopedSkip = [], topRules = [];\n            for (let rule of this.ast.rules)\n                this.astRules.push({ skip: mainSkip, rule });\n            for (let rule of this.ast.topRules)\n                topRules.push({ skip: mainSkip, rule });\n            for (let scoped of this.ast.scopedSkip) {\n                let skip = noSkip, found = this.ast.scopedSkip.findIndex((sc, i) => i < scopedSkip.length && exprEq(sc.expr, scoped.expr));\n                if (found > -1)\n                    skip = scopedSkip[found];\n                else if (this.ast.mainSkip && exprEq(scoped.expr, this.ast.mainSkip))\n                    skip = mainSkip;\n                else if (!isEmpty(scoped.expr))\n                    skip = this.newName(\"%skip\", true);\n                scopedSkip.push(skip);\n                for (let rule of scoped.rules)\n                    this.astRules.push({ skip, rule });\n                for (let rule of scoped.topRules)\n                    topRules.push({ skip, rule });\n            }\n            for (let { rule } of this.astRules) {\n                this.unique(rule.id);\n            }\n            this.currentSkip.push(noSkip);\n            this.skipRules = mainSkip == noSkip ? [mainSkip] : [noSkip, mainSkip];\n            if (mainSkip != noSkip)\n                this.defineRule(mainSkip, this.normalizeExpr(this.ast.mainSkip));\n            for (let i = 0; i < this.ast.scopedSkip.length; i++) {\n                let skip = scopedSkip[i];\n                if (!this.skipRules.includes(skip)) {\n                    this.skipRules.push(skip);\n                    if (skip != noSkip)\n                        this.defineRule(skip, this.normalizeExpr(this.ast.scopedSkip[i].expr));\n                }\n            }\n            this.currentSkip.pop();\n            for (let { rule, skip } of topRules.sort((a, b) => a.rule.start - b.rule.start)) {\n                this.unique(rule.id);\n                this.used(rule.id.name);\n                this.currentSkip.push(skip);\n                let { name, props } = this.nodeInfo(rule.props, \"a\", rule.id.name, none, none, rule.expr);\n                let term = this.terms.makeTop(name, props);\n                this.namedTerms[name] = term;\n                this.defineRule(term, this.normalizeExpr(rule.expr));\n                this.currentSkip.pop();\n            }\n            for (let ext of this.externalSpecializers)\n                ext.finish();\n            for (let { skip, rule } of this.astRules) {\n                if (this.ruleNames[rule.id.name] && isExported(rule) && !rule.params.length) {\n                    this.buildRule(rule, [], skip, false);\n                    if (rule.expr instanceof SequenceExpression && rule.expr.exprs.length == 0)\n                        this.used(rule.id.name);\n                }\n            }\n        });\n        for (let name in this.ruleNames) {\n            let value = this.ruleNames[name];\n            if (value)\n                this.warn(`Unused rule '${value.name}'`, value.start);\n        }\n        this.tokens.takePrecedences();\n        this.tokens.takeConflicts();\n        for (let lt of this.localTokens)\n            lt.takePrecedences();\n        for (let { name, group, rule } of this.definedGroups)\n            this.defineGroup(name, group, rule);\n        this.checkGroups();\n    }\n    unique(id) {\n        if (id.name in this.ruleNames)\n            this.raise(`Duplicate definition of rule '${id.name}'`, id.start);\n        this.ruleNames[id.name] = id;\n    }\n    used(name) {\n        this.ruleNames[name] = null;\n    }\n    newName(base, nodeName = null, props = {}) {\n        for (let i = nodeName ? 0 : 1;; i++) {\n            let name = i ? `${base}-${i}` : base;\n            if (!this.terms.names[name])\n                return this.terms.makeNonTerminal(name, nodeName === true ? null : nodeName, props);\n        }\n    }\n    prepareParser() {\n        let rules = time(\"Simplify rules\", () => simplifyRules(this.rules, [\n            ...this.skipRules,\n            ...this.terms.tops\n        ]));\n        let { nodeTypes, names: termNames, minRepeatTerm, maxTerm } = this.terms.finish(rules);\n        for (let prop in this.namedTerms)\n            this.termTable[prop] = this.namedTerms[prop].id;\n        if (/\\bgrammar\\b/.test(verbose))\n            console.log(rules.join(\"\\n\"));\n        let startTerms = this.terms.tops.slice();\n        let first = computeFirstSets(this.terms);\n        let skipInfo = this.skipRules.map((name, id) => {\n            let skip = [], startTokens = [], rules = [];\n            for (let rule of name.rules) {\n                if (!rule.parts.length)\n                    continue;\n                let start = rule.parts[0];\n                for (let t of start.terminal ? [start] : first[start.name] || [])\n                    if (t && !startTokens.includes(t))\n                        startTokens.push(t);\n                if (start.terminal && rule.parts.length == 1 && !rules.some(r => r != rule && r.parts[0] == start))\n                    skip.push(start);\n                else\n                    rules.push(rule);\n            }\n            name.rules = rules;\n            if (rules.length)\n                startTerms.push(name);\n            return { skip, rule: rules.length ? name : null, startTokens, id };\n        });\n        let fullTable = time(\"Build full automaton\", () => buildFullAutomaton(this.terms, startTerms, first));\n        let localTokens = this.localTokens\n            .map((grp, i) => grp.buildLocalGroup(fullTable, skipInfo, i));\n        let { tokenGroups, tokenPrec, tokenData } = time(\"Build token groups\", () => this.tokens.buildTokenGroups(fullTable, skipInfo, localTokens.length));\n        let table = time(\"Finish automaton\", () => finishAutomaton(fullTable));\n        let skipState = findSkipStates(table, this.terms.tops);\n        if (/\\blr\\b/.test(verbose))\n            console.log(table.join(\"\\n\"));\n        let specialized = [];\n        for (let ext of this.externalSpecializers)\n            specialized.push(ext);\n        for (let name in this.specialized)\n            specialized.push({ token: this.terms.names[name], table: buildSpecializeTable(this.specialized[name]) });\n        let tokStart = (tokenizer) => {\n            if (tokenizer instanceof ExternalTokenSet)\n                return tokenizer.ast.start;\n            return this.tokens.ast ? this.tokens.ast.start : -1;\n        };\n        let tokenizers = tokenGroups\n            .concat(this.externalTokens)\n            .sort((a, b) => tokStart(a) - tokStart(b))\n            .concat(localTokens);\n        let data = new DataBuilder;\n        let skipData = skipInfo.map(info => {\n            let actions = [];\n            for (let term of info.skip)\n                actions.push(term.id, 0, 262144 /* Action.StayFlag */ >> 16);\n            if (info.rule) {\n                let state = table.find(s => s.startRule == info.rule);\n                for (let action of state.actions)\n                    actions.push(action.term.id, state.id, 131072 /* Action.GotoFlag */ >> 16);\n            }\n            actions.push(65535 /* Seq.End */, 0 /* Seq.Done */);\n            return data.storeArray(actions);\n        });\n        let states = time(\"Finish states\", () => {\n            let states = new Uint32Array(table.length * 6 /* ParseState.Size */);\n            let forceReductions = this.computeForceReductions(table, skipInfo);\n            let finishCx = new FinishStateContext(tokenizers, data, states, skipData, skipInfo, table, this);\n            for (let s of table)\n                finishCx.finish(s, skipState(s.id), forceReductions[s.id]);\n            return states;\n        });\n        let dialects = Object.create(null);\n        for (let i = 0; i < this.dialects.length; i++)\n            dialects[this.dialects[i]] = data.storeArray((this.tokens.byDialect[i] || none).map(t => t.id).concat(65535 /* Seq.End */));\n        let dynamicPrecedences = null;\n        if (this.dynamicRulePrecedences.length) {\n            dynamicPrecedences = Object.create(null);\n            for (let { rule, prec } of this.dynamicRulePrecedences)\n                dynamicPrecedences[rule.id] = prec;\n        }\n        let topRules = Object.create(null);\n        for (let term of this.terms.tops)\n            topRules[term.nodeName] = [table.find(state => state.startRule == term).id, term.id];\n        let precTable = data.storeArray(tokenPrec.concat(65535 /* Seq.End */));\n        let { nodeProps, skippedTypes } = this.gatherNodeProps(nodeTypes);\n        return {\n            states,\n            stateData: data.finish(),\n            goto: computeGotoTable(table),\n            nodeNames: nodeTypes.filter(t => t.id < minRepeatTerm).map(t => t.nodeName).join(\" \"),\n            nodeProps,\n            skippedTypes,\n            maxTerm,\n            repeatNodeCount: nodeTypes.length - minRepeatTerm,\n            tokenizers,\n            tokenData,\n            topRules,\n            dialects,\n            dynamicPrecedences,\n            specialized,\n            tokenPrec: precTable,\n            termNames\n        };\n    }\n    getParser() {\n        let { states, stateData, goto, nodeNames, nodeProps: rawNodeProps, skippedTypes, maxTerm, repeatNodeCount, tokenizers, tokenData, topRules, dialects, dynamicPrecedences, specialized: rawSpecialized, tokenPrec, termNames } = this.prepareParser();\n        let specialized = rawSpecialized.map(v => {\n            if (v instanceof ExternalSpecializer) {\n                let ext = this.options.externalSpecializer(v.ast.id.name, this.termTable);\n                return {\n                    term: v.term.id,\n                    get: (value, stack) => (ext(value, stack) << 1) |\n                        (v.ast.type == \"extend\" ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */),\n                    external: ext,\n                    extend: v.ast.type == \"extend\"\n                };\n            }\n            else {\n                return { term: v.token.id, get: (value) => v.table[value] || -1 };\n            }\n        });\n        return LRParser.deserialize({\n            version: 14 /* File.Version */,\n            states,\n            stateData,\n            goto,\n            nodeNames,\n            maxTerm,\n            repeatNodeCount,\n            nodeProps: rawNodeProps.map(({ prop, terms }) => [this.knownProps[prop].prop, ...terms]),\n            propSources: !this.options.externalPropSource ? undefined\n                : this.ast.externalPropSources.map(s => this.options.externalPropSource(s.id.name)),\n            skippedNodes: skippedTypes,\n            tokenData,\n            tokenizers: tokenizers.map(tok => tok.create()),\n            context: !this.ast.context ? undefined\n                : typeof this.options.contextTracker == \"function\" ? this.options.contextTracker(this.termTable)\n                    : this.options.contextTracker,\n            topRules,\n            dialects,\n            dynamicPrecedences,\n            specialized,\n            tokenPrec,\n            termNames\n        });\n    }\n    getParserFile() {\n        let { states, stateData, goto, nodeNames, nodeProps: rawNodeProps, skippedTypes, maxTerm, repeatNodeCount, tokenizers: rawTokenizers, tokenData, topRules, dialects: rawDialects, dynamicPrecedences, specialized: rawSpecialized, tokenPrec, termNames } = this.prepareParser();\n        let mod = this.options.moduleStyle || \"es\";\n        let gen = \"// This file was generated by lezer-generator. You probably shouldn't edit it.\\n\", head = gen;\n        let imports = {}, imported = Object.create(null);\n        let defined = Object.create(null);\n        for (let word of KEYWORDS)\n            defined[word] = true;\n        let exportName = this.options.exportName || \"parser\";\n        defined[exportName] = true;\n        let getName = (prefix) => {\n            for (let i = 0;; i++) {\n                let id = prefix + (i ? \"_\" + i : \"\");\n                if (!defined[id])\n                    return id;\n            }\n        };\n        let importName = (name, source, prefix = name) => {\n            let spec = name + \" from \" + source;\n            if (imported[spec])\n                return imported[spec];\n            let src = JSON.stringify(source), varName = name;\n            if (name in defined) {\n                varName = getName(prefix);\n                name += `${mod == \"cjs\" ? \":\" : \" as\"} ${varName}`;\n            }\n            defined[varName] = true;\n            (imports[src] || (imports[src] = [])).push(name);\n            return imported[spec] = varName;\n        };\n        let lrParser = importName(\"LRParser\", \"@lezer/lr\");\n        let tokenizers = rawTokenizers.map(tok => tok.createSource(importName));\n        let context = this.ast.context ? importName(this.ast.context.id.name, this.ast.context.source) : null;\n        let nodeProps = rawNodeProps.map(({ prop, terms }) => {\n            let { source } = this.knownProps[prop];\n            let propID = source.from ? importName(source.name, source.from) : JSON.stringify(source.name);\n            return `[${propID}, ${terms.map(serializePropValue).join(\",\")}]`;\n        });\n        function specializationTableString(table) {\n            return \"{__proto__:null,\" + Object.keys(table).map(key => `${/^(\\d+|[a-zA-Z_]\\w*)$/.test(key) ? key : JSON.stringify(key)}:${table[key]}`)\n                .join(\", \") + \"}\";\n        }\n        let specHead = \"\";\n        let specialized = rawSpecialized.map(v => {\n            if (v instanceof ExternalSpecializer) {\n                let name = importName(v.ast.id.name, v.ast.source);\n                let ts = this.options.typeScript ? \": any\" : \"\";\n                return `{term: ${v.term.id}, get: (value${ts}, stack${ts}) => (${name}(value, stack) << 1)${v.ast.type == \"extend\" ? ` | ${1 /* Specialize.Extend */}` : ''}, external: ${name}${v.ast.type == \"extend\" ? ', extend: true' : ''}}`;\n            }\n            else {\n                let tableName = getName(\"spec_\" + v.token.name.replace(/\\W/g, \"\"));\n                defined[tableName] = true;\n                specHead += `const ${tableName} = ${specializationTableString(v.table)}\\n`;\n                let ts = this.options.typeScript ? `: keyof typeof ${tableName}` : \"\";\n                return `{term: ${v.token.id}, get: (value${ts}) => ${tableName}[value] || -1}`;\n            }\n        });\n        let propSources = this.ast.externalPropSources.map(s => importName(s.id.name, s.source));\n        for (let source in imports) {\n            if (mod == \"cjs\")\n                head += `const {${imports[source].join(\", \")}} = require(${source})\\n`;\n            else\n                head += `import {${imports[source].join(\", \")}} from ${source}\\n`;\n        }\n        head += specHead;\n        function serializePropValue(value) {\n            return typeof value != \"string\" || /^(true|false|\\d+(\\.\\d+)?|\\.\\d+)$/.test(value) ? value : JSON.stringify(value);\n        }\n        let dialects = Object.keys(rawDialects).map(d => `${d}: ${rawDialects[d]}`);\n        let parserStr = `${lrParser}.deserialize({\n  version: ${14 /* File.Version */},\n  states: ${encodeArray(states, 0xffffffff)},\n  stateData: ${encodeArray(stateData)},\n  goto: ${encodeArray(goto)},\n  nodeNames: ${JSON.stringify(nodeNames)},\n  maxTerm: ${maxTerm}${context ? `,\n  context: ${context}` : \"\"}${nodeProps.length ? `,\n  nodeProps: [\n    ${nodeProps.join(\",\\n    \")}\n  ]` : \"\"}${propSources.length ? `,\n  propSources: [${propSources.join()}]` : \"\"}${skippedTypes.length ? `,\n  skippedNodes: ${JSON.stringify(skippedTypes)}` : \"\"},\n  repeatNodeCount: ${repeatNodeCount},\n  tokenData: ${encodeArray(tokenData)},\n  tokenizers: [${tokenizers.join(\", \")}],\n  topRules: ${JSON.stringify(topRules)}${dialects.length ? `,\n  dialects: {${dialects.join(\", \")}}` : \"\"}${dynamicPrecedences ? `,\n  dynamicPrecedences: ${JSON.stringify(dynamicPrecedences)}` : \"\"}${specialized.length ? `,\n  specialized: [${specialized.join(\",\")}]` : \"\"},\n  tokenPrec: ${tokenPrec}${this.options.includeNames ? `,\n  termNames: ${JSON.stringify(termNames)}` : ''}\n})`;\n        let terms = [];\n        for (let name in this.termTable) {\n            let id = name;\n            if (KEYWORDS.includes(id))\n                for (let i = 1;; i++) {\n                    id = \"_\".repeat(i) + name;\n                    if (!(id in this.termTable))\n                        break;\n                }\n            else if (!/^[\\w$]+$/.test(name)) {\n                continue;\n            }\n            terms.push(`${id}${mod == \"cjs\" ? \":\" : \" =\"} ${this.termTable[name]}`);\n        }\n        for (let id = 0; id < this.dialects.length; id++)\n            terms.push(`Dialect_${this.dialects[id]}${mod == \"cjs\" ? \":\" : \" =\"} ${id}`);\n        return {\n            parser: head + (mod == \"cjs\" ? `exports.${exportName} = ${parserStr}\\n` : `export const ${exportName} = ${parserStr}\\n`),\n            terms: mod == \"cjs\" ? `${gen}module.exports = {\\n  ${terms.join(\",\\n  \")}\\n}`\n                : `${gen}export const\\n  ${terms.join(\",\\n  \")}\\n`\n        };\n    }\n    gatherNonSkippedNodes() {\n        let seen = Object.create(null);\n        let work = [];\n        let add = (term) => {\n            if (!seen[term.id]) {\n                seen[term.id] = true;\n                work.push(term);\n            }\n        };\n        this.terms.tops.forEach(add);\n        for (let i = 0; i < work.length; i++) {\n            for (let rule of work[i].rules)\n                for (let part of rule.parts)\n                    add(part);\n        }\n        return seen;\n    }\n    gatherNodeProps(nodeTypes) {\n        let notSkipped = this.gatherNonSkippedNodes(), skippedTypes = [];\n        let nodeProps = [];\n        for (let type of nodeTypes) {\n            if (!notSkipped[type.id] && !type.error)\n                skippedTypes.push(type.id);\n            for (let prop in type.props) {\n                let known = this.knownProps[prop];\n                if (!known)\n                    throw new GenError(\"No known prop type for \" + prop);\n                if (known.source.from == null && (known.source.name == \"repeated\" || known.source.name == \"error\"))\n                    continue;\n                let rec = nodeProps.find(r => r.prop == prop);\n                if (!rec)\n                    nodeProps.push(rec = { prop, values: {} });\n                (rec.values[type.props[prop]] || (rec.values[type.props[prop]] = [])).push(type.id);\n            }\n        }\n        return {\n            nodeProps: nodeProps.map(({ prop, values }) => {\n                let terms = [];\n                for (let val in values) {\n                    let ids = values[val];\n                    if (ids.length == 1) {\n                        terms.push(ids[0], val);\n                    }\n                    else {\n                        terms.push(-ids.length);\n                        for (let id of ids)\n                            terms.push(id);\n                        terms.push(val);\n                    }\n                }\n                return { prop, terms };\n            }),\n            skippedTypes\n        };\n    }\n    makeTerminal(name, tag, props) {\n        return this.terms.makeTerminal(this.terms.uniqueName(name), tag, props);\n    }\n    computeForceReductions(states, skipInfo) {\n        // This finds a forced reduction for every state, trying to guard\n        // against cyclic forced reductions, where a given parse stack can\n        // endlessly continue running forced reductions without making any\n        // progress.\n        //\n        // This occurs with length-1 reductions. We never generate\n        // length-0 reductions, and length-2+ reductions always shrink the\n        // stack, so they are guaranteed to make progress.\n        //\n        // If there are states S1 and S2 whose forced reductions reduce\n        // terms T1 and T2 respectively, both with a length of 1, _and_\n        // there is a state S3, which has goto entries T1 -> S2, T2 -> S1,\n        // you can get cyclic reductions. Of course, the cycle may also\n        // contain more than two steps.\n        let reductions = [];\n        let candidates = [];\n        // A map from terms to states that they are mapped to in goto\n        // entries.\n        let gotoEdges = Object.create(null);\n        for (let state of states) {\n            reductions.push(0);\n            for (let edge of state.goto) {\n                let array = gotoEdges[edge.term.id] || (gotoEdges[edge.term.id] = []);\n                let found = array.find(o => o.target == edge.target.id);\n                if (found)\n                    found.parents.push(state.id);\n                else\n                    array.push({ parents: [state.id], target: edge.target.id });\n            }\n            candidates[state.id] = state.set.filter(pos => pos.pos > 0 && !pos.rule.name.top)\n                .sort((a, b) => b.pos - a.pos || a.rule.parts.length - b.rule.parts.length);\n        }\n        // Mapping from state ids to terms that that state has a length-1\n        // forced reduction for.\n        let length1Reductions = Object.create(null);\n        function createsCycle(term, startState, parents = null) {\n            let edges = gotoEdges[term];\n            if (!edges)\n                return false;\n            return edges.some(val => {\n                let parentIntersection = parents ? parents.filter(id => val.parents.includes(id)) : val.parents;\n                if (parentIntersection.length == 0)\n                    return false;\n                if (val.target == startState)\n                    return true;\n                let found = length1Reductions[val.target];\n                return found != null && createsCycle(found, startState, parentIntersection);\n            });\n        }\n        for (let state of states) {\n            if (state.defaultReduce && state.defaultReduce.parts.length > 0) {\n                reductions[state.id] = reduceAction(state.defaultReduce, skipInfo);\n                if (state.defaultReduce.parts.length == 1)\n                    length1Reductions[state.id] = state.defaultReduce.name.id;\n            }\n        }\n        // To avoid painting states that only have one potential forced\n        // reduction into a corner, reduction assignment is done by\n        // candidate size, starting with the states with fewer candidates.\n        for (let setSize = 1;; setSize++) {\n            let done = true;\n            for (let state of states) {\n                if (state.defaultReduce)\n                    continue;\n                let set = candidates[state.id];\n                if (set.length != setSize) {\n                    if (set.length > setSize)\n                        done = false;\n                    continue;\n                }\n                for (let pos of set) {\n                    if (pos.pos != 1 || !createsCycle(pos.rule.name.id, state.id)) {\n                        reductions[state.id] = reduceAction(pos.rule, skipInfo, pos.pos);\n                        if (pos.pos == 1)\n                            length1Reductions[state.id] = pos.rule.name.id;\n                        break;\n                    }\n                }\n            }\n            if (done)\n                break;\n        }\n        return reductions;\n    }\n    substituteArgs(expr, args, params) {\n        if (args.length == 0)\n            return expr;\n        return expr.walk(expr => {\n            let found;\n            if (expr instanceof NameExpression &&\n                (found = params.findIndex(p => p.name == expr.id.name)) > -1) {\n                let arg = args[found];\n                if (expr.args.length) {\n                    if (arg instanceof NameExpression && !arg.args.length)\n                        return new NameExpression(expr.start, arg.id, expr.args);\n                    this.raise(`Passing arguments to a parameter that already has arguments`, expr.start);\n                }\n                return arg;\n            }\n            else if (expr instanceof InlineRuleExpression) {\n                let r = expr.rule, props = this.substituteArgsInProps(r.props, args, params);\n                return props == r.props ? expr :\n                    new InlineRuleExpression(expr.start, new RuleDeclaration(r.start, r.id, props, r.params, r.expr));\n            }\n            else if (expr instanceof SpecializeExpression) {\n                let props = this.substituteArgsInProps(expr.props, args, params);\n                return props == expr.props ? expr :\n                    new SpecializeExpression(expr.start, expr.type, props, expr.token, expr.content);\n            }\n            return expr;\n        });\n    }\n    substituteArgsInProps(props, args, params) {\n        let substituteInValue = (value) => {\n            let result = value;\n            for (let i = 0; i < value.length; i++) {\n                let part = value[i];\n                if (!part.name)\n                    continue;\n                let found = params.findIndex(p => p.name == part.name);\n                if (found < 0)\n                    continue;\n                if (result == value)\n                    result = value.slice();\n                let expr = args[found];\n                if (expr instanceof NameExpression && !expr.args.length)\n                    result[i] = new PropPart(part.start, expr.id.name, null);\n                else if (expr instanceof LiteralExpression)\n                    result[i] = new PropPart(part.start, expr.value, null);\n                else\n                    this.raise(`Trying to interpolate expression '${expr}' into a prop`, part.start);\n            }\n            return result;\n        };\n        let result = props;\n        for (let i = 0; i < props.length; i++) {\n            let prop = props[i], value = substituteInValue(prop.value);\n            if (value != prop.value) {\n                if (result == props)\n                    result = props.slice();\n                result[i] = new Prop(prop.start, prop.at, prop.name, value);\n            }\n        }\n        return result;\n    }\n    conflictsFor(markers) {\n        let here = Conflicts.none, atEnd = Conflicts.none;\n        for (let marker of markers) {\n            if (marker.type == \"ambig\") {\n                here = here.join(new Conflicts(0, [marker.id.name]));\n            }\n            else {\n                let precs = this.ast.precedences;\n                let index = precs ? precs.items.findIndex(item => item.id.name == marker.id.name) : -1;\n                if (index < 0)\n                    this.raise(`Reference to unknown precedence: '${marker.id.name}'`, marker.id.start);\n                let prec = precs.items[index], value = precs.items.length - index;\n                if (prec.type == \"cut\") {\n                    here = here.join(new Conflicts(0, none, value));\n                }\n                else {\n                    here = here.join(new Conflicts(value << 2));\n                    atEnd = atEnd.join(new Conflicts((value << 2) + (prec.type == \"left\" ? 1 : prec.type == \"right\" ? -1 : 0)));\n                }\n            }\n        }\n        return { here, atEnd };\n    }\n    raise(message, pos = 1) {\n        return this.input.raise(message, pos);\n    }\n    warn(message, pos = -1) {\n        let msg = this.input.message(message, pos);\n        if (this.options.warn)\n            this.options.warn(msg);\n        else\n            console.warn(msg);\n    }\n    defineRule(name, choices) {\n        let skip = this.currentSkip[this.currentSkip.length - 1];\n        for (let choice of choices)\n            this.rules.push(new Rule(name, choice.terms, choice.ensureConflicts(), skip));\n    }\n    resolve(expr) {\n        for (let built of this.built)\n            if (built.matches(expr))\n                return [p(built.term)];\n        let found = this.tokens.getToken(expr);\n        if (found)\n            return [p(found)];\n        for (let grp of this.localTokens) {\n            let found = grp.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        for (let ext of this.externalTokens) {\n            let found = ext.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        for (let ext of this.externalSpecializers) {\n            let found = ext.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        let known = this.astRules.find(r => r.rule.id.name == expr.id.name);\n        if (!known)\n            return this.raise(`Reference to undefined rule '${expr.id.name}'`, expr.start);\n        if (known.rule.params.length != expr.args.length)\n            this.raise(`Wrong number or arguments for '${expr.id.name}'`, expr.start);\n        this.used(known.rule.id.name);\n        return [p(this.buildRule(known.rule, expr.args, known.skip))];\n    }\n    // For tree-balancing reasons, repeat expressions X+ have to be\n    // normalized to something like\n    //\n    //     R -> X | R R\n    //\n    // Returns the `R` term.\n    normalizeRepeat(expr) {\n        let known = this.built.find(b => b.matchesRepeat(expr));\n        if (known)\n            return p(known.term);\n        let name = expr.expr.prec < expr.prec ? `(${expr.expr})+` : `${expr.expr}+`;\n        let term = this.terms.makeRepeat(this.terms.uniqueName(name));\n        this.built.push(new BuiltRule(\"+\", [expr.expr], term));\n        this.defineRule(term, this.normalizeExpr(expr.expr).concat(p(term, term)));\n        return p(term);\n    }\n    normalizeSequence(expr) {\n        let result = expr.exprs.map(e => this.normalizeExpr(e));\n        let builder = this;\n        function complete(start, from, endConflicts) {\n            let { here, atEnd } = builder.conflictsFor(expr.markers[from]);\n            if (from == result.length)\n                return [start.withConflicts(start.terms.length, here.join(endConflicts))];\n            let choices = [];\n            for (let choice of result[from]) {\n                for (let full of complete(start.concat(choice).withConflicts(start.terms.length, here), from + 1, endConflicts.join(atEnd)))\n                    choices.push(full);\n            }\n            return choices;\n        }\n        return complete(Parts.none, 0, Conflicts.none);\n    }\n    normalizeExpr(expr) {\n        if (expr instanceof RepeatExpression && expr.kind == \"?\") {\n            return [Parts.none, ...this.normalizeExpr(expr.expr)];\n        }\n        else if (expr instanceof RepeatExpression) {\n            let repeated = this.normalizeRepeat(expr);\n            return expr.kind == \"+\" ? [repeated] : [Parts.none, repeated];\n        }\n        else if (expr instanceof ChoiceExpression) {\n            return expr.exprs.reduce((o, e) => o.concat(this.normalizeExpr(e)), []);\n        }\n        else if (expr instanceof SequenceExpression) {\n            return this.normalizeSequence(expr);\n        }\n        else if (expr instanceof LiteralExpression) {\n            return [p(this.tokens.getLiteral(expr))];\n        }\n        else if (expr instanceof NameExpression) {\n            return this.resolve(expr);\n        }\n        else if (expr instanceof SpecializeExpression) {\n            return [p(this.resolveSpecialization(expr))];\n        }\n        else if (expr instanceof InlineRuleExpression) {\n            return [p(this.buildRule(expr.rule, none, this.currentSkip[this.currentSkip.length - 1], true))];\n        }\n        else {\n            return this.raise(`This type of expression ('${expr}') may not occur in non-token rules`, expr.start);\n        }\n    }\n    buildRule(rule, args, skip, inline = false) {\n        let expr = this.substituteArgs(rule.expr, args, rule.params);\n        let { name: nodeName, props, dynamicPrec, inline: explicitInline, group, exported } = this.nodeInfo(rule.props || none, inline ? \"pg\" : \"pgi\", rule.id.name, args, rule.params, rule.expr);\n        if (exported && rule.params.length)\n            this.warn(`Can't export parameterized rules`, rule.start);\n        if (exported && inline)\n            this.warn(`Can't export inline rule`, rule.start);\n        let name = this.newName(rule.id.name + (args.length ? \"<\" + args.join(\",\") + \">\" : \"\"), nodeName || true, props);\n        if (explicitInline)\n            name.inline = true;\n        if (dynamicPrec)\n            this.registerDynamicPrec(name, dynamicPrec);\n        if ((name.nodeType || exported) && rule.params.length == 0) {\n            if (!nodeName)\n                name.preserve = true;\n            if (!inline)\n                this.namedTerms[exported || rule.id.name] = name;\n        }\n        if (!inline)\n            this.built.push(new BuiltRule(rule.id.name, args, name));\n        this.currentSkip.push(skip);\n        let parts = this.normalizeExpr(expr);\n        if (parts.length > 100 * (expr instanceof ChoiceExpression ? expr.exprs.length : 1))\n            this.warn(`Rule ${rule.id.name} is generating a lot (${parts.length}) of choices.\\n  Consider splitting it up or reducing the amount of ? or | operator uses.`, rule.start);\n        if (/\\brulesize\\b/.test(verbose) && parts.length > 10)\n            console.log(`Rule ${rule.id.name}: ${parts.length} variants`);\n        this.defineRule(name, parts);\n        this.currentSkip.pop();\n        if (group)\n            this.definedGroups.push({ name, group, rule });\n        return name;\n    }\n    nodeInfo(props, \n    // p for dynamic precedence, d for dialect, i for inline, g for group, a for disabling the ignore test for default name\n    allow, defaultName = null, args = none, params = none, expr, defaultProps) {\n        let result = {};\n        let name = defaultName && (allow.indexOf(\"a\") > -1 || !ignored(defaultName)) && !/ /.test(defaultName) ? defaultName : null;\n        let dialect = null, dynamicPrec = 0, inline = false, group = null, exported = null;\n        for (let prop of props) {\n            if (!prop.at) {\n                if (!this.knownProps[prop.name]) {\n                    let builtin = [\"name\", \"dialect\", \"dynamicPrecedence\", \"export\", \"isGroup\"].includes(prop.name)\n                        ? ` (did you mean '@${prop.name}'?)` : \"\";\n                    this.raise(`Unknown prop name '${prop.name}'${builtin}`, prop.start);\n                }\n                result[prop.name] = this.finishProp(prop, args, params);\n            }\n            else if (prop.name == \"name\") {\n                name = this.finishProp(prop, args, params);\n                if (/ /.test(name))\n                    this.raise(`Node names cannot have spaces ('${name}')`, prop.start);\n            }\n            else if (prop.name == \"dialect\") {\n                if (allow.indexOf(\"d\") < 0)\n                    this.raise(\"Can't specify a dialect on non-token rules\", props[0].start);\n                if (prop.value.length != 1 && !prop.value[0].value)\n                    this.raise(\"The '@dialect' rule prop must hold a plain string value\");\n                let dialectID = this.dialects.indexOf(prop.value[0].value);\n                if (dialectID < 0)\n                    this.raise(`Unknown dialect '${prop.value[0].value}'`, prop.value[0].start);\n                dialect = dialectID;\n            }\n            else if (prop.name == \"dynamicPrecedence\") {\n                if (allow.indexOf(\"p\") < 0)\n                    this.raise(\"Dynamic precedence can only be specified on nonterminals\");\n                if (prop.value.length != 1 || !/^-?(?:10|\\d)$/.test(prop.value[0].value))\n                    this.raise(\"The '@dynamicPrecedence' rule prop must hold an integer between -10 and 10\");\n                dynamicPrec = +prop.value[0].value;\n            }\n            else if (prop.name == \"inline\") {\n                if (prop.value.length)\n                    this.raise(\"'@inline' doesn't take a value\", prop.value[0].start);\n                if (allow.indexOf(\"i\") < 0)\n                    this.raise(\"Inline can only be specified on nonterminals\");\n                inline = true;\n            }\n            else if (prop.name == \"isGroup\") {\n                if (allow.indexOf(\"g\") < 0)\n                    this.raise(\"'@isGroup' can only be specified on nonterminals\");\n                group = prop.value.length ? this.finishProp(prop, args, params) : defaultName;\n            }\n            else if (prop.name == \"export\") {\n                if (prop.value.length)\n                    exported = this.finishProp(prop, args, params);\n                else\n                    exported = defaultName;\n            }\n            else {\n                this.raise(`Unknown built-in prop name '@${prop.name}'`, prop.start);\n            }\n        }\n        if (expr && this.ast.autoDelim && (name || hasProps(result))) {\n            let delim = this.findDelimiters(expr);\n            if (delim) {\n                addToProp(delim[0], \"closedBy\", delim[1].nodeName);\n                addToProp(delim[1], \"openedBy\", delim[0].nodeName);\n            }\n        }\n        if (defaultProps && hasProps(defaultProps)) {\n            for (let prop in defaultProps)\n                if (!(prop in result))\n                    result[prop] = defaultProps[prop];\n        }\n        if (hasProps(result) && !name)\n            this.raise(`Node has properties but no name`, props.length ? props[0].start : expr.start);\n        if (inline && (hasProps(result) || dialect || dynamicPrec))\n            this.raise(`Inline nodes can't have props, dynamic precedence, or a dialect`, props[0].start);\n        if (inline && name)\n            name = null;\n        return { name, props: result, dialect, dynamicPrec, inline, group, exported };\n    }\n    finishProp(prop, args, params) {\n        return prop.value.map(part => {\n            if (part.value)\n                return part.value;\n            let pos = params.findIndex(param => param.name == part.name);\n            if (pos < 0)\n                this.raise(`Property refers to '${part.name}', but no parameter by that name is in scope`, part.start);\n            let expr = args[pos];\n            if (expr instanceof NameExpression && !expr.args.length)\n                return expr.id.name;\n            if (expr instanceof LiteralExpression)\n                return expr.value;\n            return this.raise(`Expression '${expr}' can not be used as part of a property value`, part.start);\n        }).join(\"\");\n    }\n    resolveSpecialization(expr) {\n        let type = expr.type;\n        let { name, props, dialect, exported } = this.nodeInfo(expr.props, \"d\");\n        let terminal = this.normalizeExpr(expr.token);\n        if (terminal.length != 1 || terminal[0].terms.length != 1 || !terminal[0].terms[0].terminal)\n            this.raise(`The first argument to '${type}' must resolve to a token`, expr.token.start);\n        let values;\n        if (expr.content instanceof LiteralExpression)\n            values = [expr.content.value];\n        else if ((expr.content instanceof ChoiceExpression) && expr.content.exprs.every(e => e instanceof LiteralExpression))\n            values = expr.content.exprs.map(expr => expr.value);\n        else\n            return this.raise(`The second argument to '${expr.type}' must be a literal or choice of literals`, expr.content.start);\n        let term = terminal[0].terms[0], token = null;\n        let table = this.specialized[term.name] || (this.specialized[term.name] = []);\n        for (let value of values) {\n            let known = table.find(sp => sp.value == value);\n            if (known == null) {\n                if (!token) {\n                    token = this.makeTerminal(term.name + \"/\" + JSON.stringify(value), name, props);\n                    if (dialect != null)\n                        (this.tokens.byDialect[dialect] || (this.tokens.byDialect[dialect] = [])).push(token);\n                }\n                table.push({ value, term: token, type, dialect, name });\n                this.tokenOrigins[token.name] = { spec: term };\n                if (name || exported) {\n                    if (!name)\n                        token.preserve = true;\n                    this.namedTerms[exported || name] = token;\n                }\n            }\n            else {\n                if (known.type != type)\n                    this.raise(`Conflicting specialization types for ${JSON.stringify(value)} of ${term.name} (${type} vs ${known.type})`, expr.start);\n                if (known.dialect != dialect)\n                    this.raise(`Conflicting dialects for specialization ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                if (known.name != name)\n                    this.raise(`Conflicting names for specialization ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                if (token && known.term != token)\n                    this.raise(`Conflicting specialization tokens for ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                token = known.term;\n            }\n        }\n        return token;\n    }\n    findDelimiters(expr) {\n        if (!(expr instanceof SequenceExpression) || expr.exprs.length < 2)\n            return null;\n        let findToken = (expr) => {\n            if (expr instanceof LiteralExpression)\n                return { term: this.tokens.getLiteral(expr), str: expr.value };\n            if (expr instanceof NameExpression && expr.args.length == 0) {\n                let rule = this.ast.rules.find(r => r.id.name == expr.id.name);\n                if (rule)\n                    return findToken(rule.expr);\n                let token = this.tokens.rules.find(r => r.id.name == expr.id.name);\n                if (token && token.expr instanceof LiteralExpression)\n                    return { term: this.tokens.getToken(expr), str: token.expr.value };\n            }\n            return null;\n        };\n        let lastToken = findToken(expr.exprs[expr.exprs.length - 1]);\n        if (!lastToken || !lastToken.term.nodeName)\n            return null;\n        const brackets = [\"()\", \"[]\", \"{}\", \"<>\"];\n        let bracket = brackets.find(b => lastToken.str.indexOf(b[1]) > -1 && lastToken.str.indexOf(b[0]) < 0);\n        if (!bracket)\n            return null;\n        let firstToken = findToken(expr.exprs[0]);\n        if (!firstToken || !firstToken.term.nodeName ||\n            firstToken.str.indexOf(bracket[0]) < 0 || firstToken.str.indexOf(bracket[1]) > -1)\n            return null;\n        return [firstToken.term, lastToken.term];\n    }\n    registerDynamicPrec(term, prec) {\n        this.dynamicRulePrecedences.push({ rule: term, prec });\n        term.preserve = true;\n    }\n    defineGroup(rule, group, ast) {\n        var _a;\n        let recur = [];\n        let getNamed = (rule) => {\n            if (rule.nodeName)\n                return [rule];\n            if (recur.includes(rule))\n                this.raise(`Rule '${ast.id.name}' cannot define a group because it contains a non-named recursive rule ('${rule.name}')`, ast.start);\n            let result = [];\n            recur.push(rule);\n            for (let r of this.rules)\n                if (r.name == rule) {\n                    let names = r.parts.map(getNamed).filter(x => x.length);\n                    if (names.length > 1)\n                        this.raise(`Rule '${ast.id.name}' cannot define a group because some choices produce multiple named nodes`, ast.start);\n                    if (names.length == 1)\n                        for (let n of names[0])\n                            result.push(n);\n                }\n            recur.pop();\n            return result;\n        };\n        for (let name of getNamed(rule))\n            name.props[\"group\"] = (((_a = name.props[\"group\"]) === null || _a === void 0 ? void 0 : _a.split(\" \")) || []).concat(group).sort().join(\" \");\n    }\n    checkGroups() {\n        let groups = Object.create(null), nodeNames = Object.create(null);\n        for (let term of this.terms.terms)\n            if (term.nodeName) {\n                nodeNames[term.nodeName] = true;\n                if (term.props[\"group\"])\n                    for (let group of term.props[\"group\"].split(\" \")) {\n                        (groups[group] || (groups[group] = [])).push(term);\n                    }\n            }\n        let names = Object.keys(groups);\n        for (let i = 0; i < names.length; i++) {\n            let name = names[i], terms = groups[name];\n            if (nodeNames[name])\n                this.warn(`Group name '${name}' conflicts with a node of the same name`);\n            for (let j = i + 1; j < names.length; j++) {\n                let other = groups[names[j]];\n                if (terms.some(t => other.includes(t)) &&\n                    (terms.length > other.length ? other.some(t => !terms.includes(t)) : terms.some(t => !other.includes(t))))\n                    this.warn(`Groups '${name}' and '${names[j]}' overlap without one being a superset of the other`);\n            }\n        }\n    }\n}\nconst MinSharedActions = 5;\nclass FinishStateContext {\n    constructor(tokenizers, data, stateArray, skipData, skipInfo, states, builder) {\n        this.tokenizers = tokenizers;\n        this.data = data;\n        this.stateArray = stateArray;\n        this.skipData = skipData;\n        this.skipInfo = skipInfo;\n        this.states = states;\n        this.builder = builder;\n        this.sharedActions = [];\n    }\n    findSharedActions(state) {\n        if (state.actions.length < MinSharedActions)\n            return null;\n        let found = null;\n        for (let shared of this.sharedActions) {\n            if ((!found || shared.actions.length > found.actions.length) &&\n                shared.actions.every(a => state.actions.some(b => b.eq(a))))\n                found = shared;\n        }\n        if (found)\n            return found;\n        let max = null, scratch = [];\n        for (let i = state.id + 1; i < this.states.length; i++) {\n            let other = this.states[i], fill = 0;\n            if (other.defaultReduce || other.actions.length < MinSharedActions)\n                continue;\n            for (let a of state.actions)\n                for (let b of other.actions)\n                    if (a.eq(b))\n                        scratch[fill++] = a;\n            if (fill >= MinSharedActions && (!max || max.length < fill)) {\n                max = scratch;\n                scratch = [];\n            }\n        }\n        if (!max)\n            return null;\n        let result = { actions: max, addr: this.storeActions(max, -1, null) };\n        this.sharedActions.push(result);\n        return result;\n    }\n    storeActions(actions, skipReduce, shared) {\n        if (skipReduce < 0 && shared && shared.actions.length == actions.length)\n            return shared.addr;\n        let data = [];\n        for (let action of actions) {\n            if (shared && shared.actions.some(a => a.eq(action)))\n                continue;\n            if (action instanceof Shift) {\n                data.push(action.term.id, action.target.id, 0);\n            }\n            else {\n                let code = reduceAction(action.rule, this.skipInfo);\n                if (code != skipReduce)\n                    data.push(action.term.id, code & 65535 /* Action.ValueMask */, code >> 16);\n            }\n        }\n        data.push(65535 /* Seq.End */);\n        if (skipReduce > -1)\n            data.push(2 /* Seq.Other */, skipReduce & 65535 /* Action.ValueMask */, skipReduce >> 16);\n        else if (shared)\n            data.push(1 /* Seq.Next */, shared.addr & 0xffff, shared.addr >> 16);\n        else\n            data.push(0 /* Seq.Done */);\n        return this.data.storeArray(data);\n    }\n    finish(state, isSkip, forcedReduce) {\n        let b = this.builder;\n        let skipID = b.skipRules.indexOf(state.skip);\n        let skipTable = this.skipData[skipID], skipTerms = this.skipInfo[skipID].startTokens;\n        let defaultReduce = state.defaultReduce ? reduceAction(state.defaultReduce, this.skipInfo) : 0;\n        let flags = isSkip ? 1 /* StateFlag.Skipped */ : 0;\n        let skipReduce = -1, shared = null;\n        if (defaultReduce == 0) {\n            if (isSkip)\n                for (const action of state.actions)\n                    if (action instanceof Reduce && action.term.eof)\n                        skipReduce = reduceAction(action.rule, this.skipInfo);\n            if (skipReduce < 0)\n                shared = this.findSharedActions(state);\n        }\n        if (state.set.some(p => p.rule.name.top && p.pos == p.rule.parts.length))\n            flags |= 2 /* StateFlag.Accepting */;\n        let external = [];\n        for (let i = 0; i < state.actions.length + skipTerms.length; i++) {\n            let term = i < state.actions.length ? state.actions[i].term : skipTerms[i - state.actions.length];\n            for (;;) {\n                let orig = b.tokenOrigins[term.name];\n                if (orig && orig.spec) {\n                    term = orig.spec;\n                    continue;\n                }\n                if (orig && (orig.external instanceof ExternalTokenSet))\n                    addToSet(external, orig.external);\n                break;\n            }\n        }\n        let tokenizerMask = 0;\n        for (let i = 0; i < this.tokenizers.length; i++) {\n            let tok = this.tokenizers[i];\n            if (external.includes(tok) || tok.groupID == state.tokenGroup)\n                tokenizerMask |= (1 << i);\n        }\n        let base = state.id * 6 /* ParseState.Size */;\n        this.stateArray[base + 0 /* ParseState.Flags */] = flags;\n        this.stateArray[base + 1 /* ParseState.Actions */] = this.storeActions(defaultReduce ? none : state.actions, skipReduce, shared);\n        this.stateArray[base + 2 /* ParseState.Skip */] = skipTable;\n        this.stateArray[base + 3 /* ParseState.TokenizerMask */] = tokenizerMask;\n        this.stateArray[base + 4 /* ParseState.DefaultReduce */] = defaultReduce;\n        this.stateArray[base + 5 /* ParseState.ForcedReduce */] = forcedReduce;\n    }\n}\nfunction addToProp(term, prop, value) {\n    let cur = term.props[prop];\n    if (!cur || cur.split(\" \").indexOf(value) < 0)\n        term.props[prop] = cur ? cur + \" \" + value : value;\n}\nfunction buildSpecializeTable(spec) {\n    let table = Object.create(null);\n    for (let { value, term, type } of spec) {\n        let code = type == \"specialize\" ? 0 /* Specialize.Specialize */ : 1 /* Specialize.Extend */;\n        table[value] = (term.id << 1) | code;\n    }\n    return table;\n}\nfunction reduceAction(rule, skipInfo, depth = rule.parts.length) {\n    return rule.name.id | 65536 /* Action.ReduceFlag */ |\n        (rule.isRepeatWrap && depth == rule.parts.length ? 131072 /* Action.RepeatFlag */ : 0) |\n        (skipInfo.some(i => i.rule == rule.name) ? 262144 /* Action.StayFlag */ : 0) |\n        (depth << 19 /* Action.ReduceDepthShift */);\n}\nfunction findArray(data, value) {\n    search: for (let i = 0;;) {\n        let next = data.indexOf(value[0], i);\n        if (next == -1 || next + value.length > data.length)\n            break;\n        for (let j = 1; j < value.length; j++) {\n            if (value[j] != data[next + j]) {\n                i = next + 1;\n                continue search;\n            }\n        }\n        return next;\n    }\n    return -1;\n}\nfunction findSkipStates(table, startRules) {\n    let nonSkip = Object.create(null);\n    let work = [];\n    let add = (state) => {\n        if (!nonSkip[state.id]) {\n            nonSkip[state.id] = true;\n            work.push(state);\n        }\n    };\n    for (let state of table)\n        if (state.startRule && startRules.includes(state.startRule))\n            add(state);\n    for (let i = 0; i < work.length; i++) {\n        for (let a of work[i].actions)\n            if (a instanceof Shift)\n                add(a.target);\n        for (let a of work[i].goto)\n            add(a.target);\n    }\n    return (id) => !nonSkip[id];\n}\nclass DataBuilder {\n    constructor() {\n        this.data = [];\n    }\n    storeArray(data) {\n        let found = findArray(this.data, data);\n        if (found > -1)\n            return found;\n        let pos = this.data.length;\n        for (let num of data)\n            this.data.push(num);\n        return pos;\n    }\n    finish() {\n        return Uint16Array.from(this.data);\n    }\n}\n// The goto table maps a start state + a term to a new state, and is\n// used to determine the new state when reducing. Because this allows\n// more more efficient representation and access, unlike the action\n// tables, the goto table is organized by term, with groups of start\n// states that map to a given end state enumerated for each term.\n// Since many terms only have a single valid goto target, this makes\n// it cheaper to look those up.\n//\n// (Unfortunately, though the standard LR parsing mechanism never\n// looks up invalid goto states, the incremental parsing mechanism\n// needs accurate goto information for a state/term pair, so we do\n// need to store state ids even for terms that have only one target.)\n//\n// - First comes the amount of terms in the table\n//\n// - Then, for each term, the offset of the term's data\n//\n// - At these offsets, there's a record for each target state\n//\n//   - Such a record starts with the amount of start states that go to\n//     this target state, shifted one to the left, with the first bit\n//     only set if this is the last record for this term.\n//\n//   - Then follows the target state id\n//\n//   - And then the start state ids\nfunction computeGotoTable(states) {\n    let goto = {};\n    let maxTerm = 0;\n    for (let state of states) {\n        for (let entry of state.goto) {\n            maxTerm = Math.max(entry.term.id, maxTerm);\n            let set = goto[entry.term.id] || (goto[entry.term.id] = {});\n            (set[entry.target.id] || (set[entry.target.id] = [])).push(state.id);\n        }\n    }\n    let data = new DataBuilder;\n    let index = [];\n    let offset = maxTerm + 2; // Offset of the data, taking index size into account\n    for (let term = 0; term <= maxTerm; term++) {\n        let entries = goto[term];\n        if (!entries) {\n            index.push(1);\n            continue;\n        }\n        let termTable = [];\n        let keys = Object.keys(entries);\n        for (let target of keys) {\n            let list = entries[target];\n            termTable.push((target == keys[keys.length - 1] ? 1 : 0) + (list.length << 1));\n            termTable.push(+target);\n            for (let source of list)\n                termTable.push(source);\n        }\n        index.push(data.storeArray(termTable) + offset);\n    }\n    if (index.some(n => n > 0xffff))\n        throw new GenError(\"Goto table too large\");\n    return Uint16Array.from([maxTerm + 1, ...index, ...data.data]);\n}\nclass TokenGroup {\n    constructor(tokens, groupID) {\n        this.tokens = tokens;\n        this.groupID = groupID;\n    }\n    create() { return this.groupID; }\n    createSource() { return String(this.groupID); }\n}\nfunction addToSet(set, value) {\n    if (!set.includes(value))\n        set.push(value);\n}\nfunction buildTokenMasks(groups) {\n    let masks = Object.create(null);\n    for (let group of groups) {\n        let groupMask = 1 << group.groupID;\n        for (let term of group.tokens) {\n            masks[term.id] = (masks[term.id] || 0) | groupMask;\n        }\n    }\n    return masks;\n}\nclass TokenArg {\n    constructor(name, expr, scope) {\n        this.name = name;\n        this.expr = expr;\n        this.scope = scope;\n    }\n}\nclass BuildingRule {\n    constructor(name, start, to, args) {\n        this.name = name;\n        this.start = start;\n        this.to = to;\n        this.args = args;\n    }\n}\nclass TokenSet {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.startState = new State$1;\n        this.built = [];\n        this.building = []; // Used for recursion check\n        this.byDialect = Object.create(null);\n        this.precedenceRelations = [];\n        this.rules = ast ? ast.rules : none;\n        for (let rule of this.rules)\n            b.unique(rule.id);\n    }\n    getToken(expr) {\n        for (let built of this.built)\n            if (built.matches(expr))\n                return built.term;\n        let name = expr.id.name;\n        let rule = this.rules.find(r => r.id.name == name);\n        if (!rule)\n            return null;\n        let { name: nodeName, props, dialect, exported } = this.b.nodeInfo(rule.props, \"d\", name, expr.args, rule.params.length != expr.args.length ? none : rule.params);\n        let term = this.b.makeTerminal(expr.toString(), nodeName, props);\n        if (dialect != null)\n            (this.byDialect[dialect] || (this.byDialect[dialect] = [])).push(term);\n        if ((term.nodeType || exported) && rule.params.length == 0) {\n            if (!term.nodeType)\n                term.preserve = true;\n            this.b.namedTerms[exported || name] = term;\n        }\n        this.buildRule(rule, expr, this.startState, new State$1([term]));\n        this.built.push(new BuiltRule(name, expr.args, term));\n        return term;\n    }\n    buildRule(rule, expr, from, to, args = none) {\n        let name = expr.id.name;\n        if (rule.params.length != expr.args.length)\n            this.b.raise(`Incorrect number of arguments for token '${name}'`, expr.start);\n        let building = this.building.find(b => b.name == name && exprsEq(expr.args, b.args));\n        if (building) {\n            if (building.to == to) {\n                from.nullEdge(building.start);\n                return;\n            }\n            let lastIndex = this.building.length - 1;\n            while (this.building[lastIndex].name != name)\n                lastIndex--;\n            this.b.raise(`Invalid (non-tail) recursion in token rules: ${this.building.slice(lastIndex).map(b => b.name).join(\" -> \")}`, expr.start);\n        }\n        this.b.used(rule.id.name);\n        let start = new State$1;\n        from.nullEdge(start);\n        this.building.push(new BuildingRule(name, start, to, expr.args));\n        this.build(this.b.substituteArgs(rule.expr, expr.args, rule.params), start, to, expr.args.map((e, i) => new TokenArg(rule.params[i].name, e, args)));\n        this.building.pop();\n    }\n    build(expr, from, to, args) {\n        if (expr instanceof NameExpression) {\n            let name = expr.id.name, arg = args.find(a => a.name == name);\n            if (arg)\n                return this.build(arg.expr, from, to, arg.scope);\n            let rule;\n            for (let i = 0, lt = this.b.localTokens; i <= lt.length; i++) {\n                let set = i == lt.length ? this.b.tokens : lt[i];\n                rule = set.rules.find(r => r.id.name == name);\n                if (rule)\n                    break;\n            }\n            if (!rule)\n                return this.b.raise(`Reference to token rule '${name}', which isn't found`, expr.start);\n            this.buildRule(rule, expr, from, to, args);\n        }\n        else if (expr instanceof CharClass) {\n            for (let [a, b] of CharClasses[expr.type])\n                from.edge(a, b, to);\n        }\n        else if (expr instanceof ChoiceExpression) {\n            for (let choice of expr.exprs)\n                this.build(choice, from, to, args);\n        }\n        else if (isEmpty(expr)) {\n            from.nullEdge(to);\n        }\n        else if (expr instanceof SequenceExpression) {\n            let conflict = expr.markers.find(c => c.length > 0);\n            if (conflict)\n                this.b.raise(\"Conflict marker in token expression\", conflict[0].start);\n            for (let i = 0; i < expr.exprs.length; i++) {\n                let next = i == expr.exprs.length - 1 ? to : new State$1;\n                this.build(expr.exprs[i], from, next, args);\n                from = next;\n            }\n        }\n        else if (expr instanceof RepeatExpression) {\n            if (expr.kind == \"*\") {\n                let loop = new State$1;\n                from.nullEdge(loop);\n                this.build(expr.expr, loop, loop, args);\n                loop.nullEdge(to);\n            }\n            else if (expr.kind == \"+\") {\n                let loop = new State$1;\n                this.build(expr.expr, from, loop, args);\n                this.build(expr.expr, loop, loop, args);\n                loop.nullEdge(to);\n            }\n            else { // expr.kind == \"?\"\n                from.nullEdge(to);\n                this.build(expr.expr, from, to, args);\n            }\n        }\n        else if (expr instanceof SetExpression) {\n            for (let [a, b] of expr.inverted ? invertRanges(expr.ranges) : expr.ranges)\n                rangeEdges(from, to, a, b);\n        }\n        else if (expr instanceof LiteralExpression) {\n            for (let i = 0; i < expr.value.length; i++) {\n                let ch = expr.value.charCodeAt(i);\n                let next = i == expr.value.length - 1 ? to : new State$1;\n                from.edge(ch, ch + 1, next);\n                from = next;\n            }\n        }\n        else if (expr instanceof AnyExpression) {\n            let mid = new State$1;\n            from.edge(0, 0xDC00, to);\n            from.edge(0xDC00, MAX_CHAR + 1, to);\n            from.edge(0xD800, 0xDC00, mid);\n            mid.edge(0xDC00, 0xE000, to);\n        }\n        else {\n            return this.b.raise(`Unrecognized expression type in token`, expr.start);\n        }\n    }\n    takePrecedences() {\n        let rel = this.precedenceRelations = [];\n        if (this.ast)\n            for (let group of this.ast.precedences) {\n                let prev = [];\n                for (let item of group.items) {\n                    let level = [];\n                    if (item instanceof NameExpression) {\n                        for (let built of this.built)\n                            if (item.args.length ? built.matches(item) : built.id == item.id.name)\n                                level.push(built.term);\n                    }\n                    else {\n                        let id = JSON.stringify(item.value), found = this.built.find(b => b.id == id);\n                        if (found)\n                            level.push(found.term);\n                    }\n                    if (!level.length)\n                        this.b.warn(`Precedence specified for unknown token ${item}`, item.start);\n                    for (let term of level)\n                        addRel(rel, term, prev);\n                    prev = prev.concat(level);\n                }\n            }\n    }\n    precededBy(a, b) {\n        let found = this.precedenceRelations.find(r => r.term == a);\n        return found && found.after.includes(b);\n    }\n    buildPrecTable(softConflicts) {\n        let precTable = [], rel = this.precedenceRelations.slice();\n        // Add entries for soft-conflicting tokens that are in the\n        // precedence table, to make sure they'll appear in the right\n        // order and don't mess up the longer-wins default rule.\n        for (let { a, b, soft } of softConflicts)\n            if (soft) {\n                if (!rel.some(r => r.term == a) || !rel.some(r => r.term == b))\n                    continue;\n                if (soft < 0)\n                    [a, b] = [b, a]; // Now a is longer than b (and should thus take precedence)\n                addRel(rel, b, [a]);\n                addRel(rel, a, []);\n            }\n        add: while (rel.length) {\n            for (let i = 0; i < rel.length; i++) {\n                let record = rel[i];\n                if (record.after.every(t => precTable.includes(t.id))) {\n                    precTable.push(record.term.id);\n                    if (rel.length == 1)\n                        break add;\n                    rel[i] = rel.pop();\n                    continue add;\n                }\n            }\n            this.b.raise(`Cyclic token precedence relation between ${rel.map(r => r.term).join(\", \")}`);\n        }\n        return precTable;\n    }\n}\nclass MainTokenSet extends TokenSet {\n    constructor() {\n        super(...arguments);\n        this.explicitConflicts = [];\n    }\n    getLiteral(expr) {\n        let id = JSON.stringify(expr.value);\n        for (let built of this.built)\n            if (built.id == id)\n                return built.term;\n        let name = null, props = {}, dialect = null, exported = null;\n        let decl = this.ast ? this.ast.literals.find(l => l.literal == expr.value) : null;\n        if (decl)\n            ({ name, props, dialect, exported } = this.b.nodeInfo(decl.props, \"da\", expr.value));\n        let term = this.b.makeTerminal(id, name, props);\n        if (dialect != null)\n            (this.byDialect[dialect] || (this.byDialect[dialect] = [])).push(term);\n        if (exported)\n            this.b.namedTerms[exported] = term;\n        this.build(expr, this.startState, new State$1([term]), none);\n        this.built.push(new BuiltRule(id, none, term));\n        return term;\n    }\n    takeConflicts() {\n        var _a;\n        let resolve = (expr) => {\n            if (expr instanceof NameExpression) {\n                for (let built of this.built)\n                    if (built.matches(expr))\n                        return built.term;\n            }\n            else {\n                let id = JSON.stringify(expr.value), found = this.built.find(b => b.id == id);\n                if (found)\n                    return found.term;\n            }\n            this.b.warn(`Precedence specified for unknown token ${expr}`, expr.start);\n            return null;\n        };\n        for (let c of ((_a = this.ast) === null || _a === void 0 ? void 0 : _a.conflicts) || []) {\n            let a = resolve(c.a), b = resolve(c.b);\n            if (a && b) {\n                if (a.id < b.id)\n                    [a, b] = [b, a];\n                this.explicitConflicts.push({ a, b });\n            }\n        }\n    }\n    // Token groups are a mechanism for allowing conflicting (matching\n    // overlapping input, without an explicit precedence being given)\n    // tokens to exist in a grammar _if_ they don't occur in the same\n    // place (aren't used in the same states).\n    //\n    // States that use tokens that conflict will raise an error when any\n    // of the conflicting pairs of tokens both occur in that state.\n    // Otherwise, they are assigned a token group, which includes all\n    // the potentially-conflicting tokens they use. If there's already a\n    // group that doesn't have any conflicts with those tokens, that is\n    // reused, otherwise a new group is created.\n    //\n    // So each state has zero or one token groups, and each conflicting\n    // token may belong to one or more groups. Tokens get assigned a\n    // 16-bit bitmask with the groups they belong to set to 1 (all-1s\n    // for non-conflicting tokens). When tokenizing, that mask is\n    // compared to the current state's group (again using all-1s for\n    // group-less states) to determine whether a token is applicable for\n    // this state.\n    //\n    // Extended/specialized tokens are treated as their parent token for\n    // this purpose.\n    buildTokenGroups(states, skipInfo, startID) {\n        let tokens = this.startState.compile();\n        if (tokens.accepting.length)\n            this.b.raise(`Grammar contains zero-length tokens (in '${tokens.accepting[0].name}')`, this.rules.find(r => r.id.name == tokens.accepting[0].name).start);\n        if (/\\btokens\\b/.test(verbose))\n            console.log(tokens.toString());\n        // If there is a precedence specified for the pair, the conflict is resolved\n        let allConflicts = tokens.findConflicts(checkTogether(states, this.b, skipInfo))\n            .filter(({ a, b }) => !this.precededBy(a, b) && !this.precededBy(b, a));\n        for (let { a, b } of this.explicitConflicts) {\n            if (!allConflicts.some(c => c.a == a && c.b == b))\n                allConflicts.push(new Conflict$1(a, b, 0, \"\", \"\"));\n        }\n        let softConflicts = allConflicts.filter(c => c.soft), conflicts = allConflicts.filter(c => !c.soft);\n        let errors = [];\n        let groups = [];\n        for (let state of states) {\n            if (state.defaultReduce || state.tokenGroup > -1)\n                continue;\n            // Find potentially-conflicting terms (in terms) and the things\n            // they conflict with (in conflicts), and raise an error if\n            // there's a token conflict directly in this state.\n            let terms = [], incompatible = [];\n            let skip = skipInfo[this.b.skipRules.indexOf(state.skip)].startTokens;\n            for (let term of skip)\n                if (state.actions.some(a => a.term == term))\n                    this.b.raise(`Use of token ${term.name} conflicts with skip rule`);\n            let stateTerms = [];\n            for (let i = 0; i < state.actions.length + (skip ? skip.length : 0); i++) {\n                let term = i < state.actions.length ? state.actions[i].term : skip[i - state.actions.length];\n                let orig = this.b.tokenOrigins[term.name];\n                if (orig && orig.spec)\n                    term = orig.spec;\n                else if (orig && orig.external)\n                    continue;\n                addToSet(stateTerms, term);\n            }\n            if (stateTerms.length == 0)\n                continue;\n            for (let term of stateTerms) {\n                for (let conflict of conflicts) {\n                    let conflicting = conflict.a == term ? conflict.b : conflict.b == term ? conflict.a : null;\n                    if (!conflicting)\n                        continue;\n                    if (stateTerms.includes(conflicting) && !errors.some(e => e.conflict == conflict)) {\n                        let example = conflict.exampleA ? ` (example: ${JSON.stringify(conflict.exampleA)}${conflict.exampleB ? ` vs ${JSON.stringify(conflict.exampleB)}` : \"\"})` : \"\";\n                        errors.push({\n                            error: `Overlapping tokens ${term.name} and ${conflicting.name} used in same context${example}\\n` +\n                                `After: ${state.set[0].trail()}`,\n                            conflict\n                        });\n                    }\n                    addToSet(terms, term);\n                    addToSet(incompatible, conflicting);\n                }\n            }\n            let tokenGroup = null;\n            for (let group of groups) {\n                if (incompatible.some(term => group.tokens.includes(term)))\n                    continue;\n                for (let term of terms)\n                    addToSet(group.tokens, term);\n                tokenGroup = group;\n                break;\n            }\n            if (!tokenGroup) {\n                tokenGroup = new TokenGroup(terms, groups.length + startID);\n                groups.push(tokenGroup);\n            }\n            state.tokenGroup = tokenGroup.groupID;\n        }\n        if (errors.length)\n            this.b.raise(errors.map(e => e.error).join(\"\\n\\n\"));\n        if (groups.length + startID > 16)\n            this.b.raise(`Too many different token groups (${groups.length}) to represent them as a 16-bit bitfield`);\n        let precTable = this.buildPrecTable(softConflicts);\n        return {\n            tokenGroups: groups,\n            tokenPrec: precTable,\n            tokenData: tokens.toArray(buildTokenMasks(groups), precTable)\n        };\n    }\n}\nclass LocalTokenSet extends TokenSet {\n    constructor(b, ast) {\n        super(b, ast);\n        this.fallback = null;\n        if (ast.fallback)\n            b.unique(ast.fallback.id);\n    }\n    getToken(expr) {\n        let term = null;\n        if (this.ast.fallback && this.ast.fallback.id.name == expr.id.name) {\n            if (expr.args.length)\n                this.b.raise(`Incorrect number of arguments for ${expr.id.name}`, expr.start);\n            if (!this.fallback) {\n                let { name: nodeName, props, exported } = this.b.nodeInfo(this.ast.fallback.props, \"\", expr.id.name, none, none);\n                let term = this.fallback = this.b.makeTerminal(expr.id.name, nodeName, props);\n                if (term.nodeType || exported) {\n                    if (!term.nodeType)\n                        term.preserve = true;\n                    this.b.namedTerms[exported || expr.id.name] = term;\n                }\n                this.b.used(expr.id.name);\n            }\n            term = this.fallback;\n        }\n        else {\n            term = super.getToken(expr);\n        }\n        if (term && !this.b.tokenOrigins[term.name])\n            this.b.tokenOrigins[term.name] = { group: this };\n        return term;\n    }\n    buildLocalGroup(states, skipInfo, id) {\n        let tokens = this.startState.compile();\n        if (tokens.accepting.length)\n            this.b.raise(`Grammar contains zero-length tokens (in '${tokens.accepting[0].name}')`, this.rules.find(r => r.id.name == tokens.accepting[0].name).start);\n        for (let { a, b, exampleA } of tokens.findConflicts(() => true)) {\n            if (!this.precededBy(a, b) && !this.precededBy(b, a))\n                this.b.raise(`Overlapping tokens ${a.name} and ${b.name} in local token group${exampleA ? ` (example: ${JSON.stringify(exampleA)})` : ''}`);\n        }\n        for (let state of states) {\n            if (state.defaultReduce)\n                continue;\n            // See if this state uses any of the tokens in this group, and\n            // if so, make sure it *only* uses tokens from this group.\n            let usesThis = null;\n            let usesOther = skipInfo[this.b.skipRules.indexOf(state.skip)].startTokens[0];\n            for (let { term } of state.actions) {\n                let orig = this.b.tokenOrigins[term.name];\n                if ((orig === null || orig === void 0 ? void 0 : orig.group) == this)\n                    usesThis = term;\n                else\n                    usesOther = term;\n            }\n            if (usesThis) {\n                if (usesOther)\n                    this.b.raise(`Tokens from a local token group used together with other tokens (${usesThis.name} with ${usesOther.name})`);\n                state.tokenGroup = id;\n            }\n        }\n        let precTable = this.buildPrecTable(none);\n        let tokenData = tokens.toArray({ [id]: 65535 /* Seq.End */ }, precTable);\n        let precOffset = tokenData.length;\n        let fullData = new Uint16Array(tokenData.length + precTable.length + 1);\n        fullData.set(tokenData, 0);\n        fullData.set(precTable, precOffset);\n        fullData[fullData.length - 1] = 65535 /* Seq.End */;\n        return {\n            groupID: id,\n            create: () => new LocalTokenGroup(fullData, precOffset, this.fallback ? this.fallback.id : undefined),\n            createSource: importName => `new ${importName(\"LocalTokenGroup\", \"@lezer/lr\")}(${encodeArray(fullData)}, ${precOffset}${this.fallback ? `, ${this.fallback.id}` : ''})`\n        };\n    }\n}\nfunction checkTogether(states, b, skipInfo) {\n    let cache = Object.create(null);\n    function hasTerm(state, term) {\n        return state.actions.some(a => a.term == term) ||\n            skipInfo[b.skipRules.indexOf(state.skip)].startTokens.includes(term);\n    }\n    return (a, b) => {\n        if (a.id < b.id)\n            [a, b] = [b, a];\n        let key = a.id | (b.id << 16), cached = cache[key];\n        if (cached != null)\n            return cached;\n        return cache[key] = states.some(state => hasTerm(state, a) && hasTerm(state, b));\n    };\n}\nfunction invertRanges(ranges) {\n    let pos = 0, result = [];\n    for (let [a, b] of ranges) {\n        if (a > pos)\n            result.push([pos, a]);\n        pos = b;\n    }\n    if (pos <= MAX_CODE)\n        result.push([pos, MAX_CODE + 1]);\n    return result;\n}\nconst ASTRAL = 0x10000, GAP_START = 0xd800, GAP_END = 0xe000, MAX_CODE = 0x10ffff;\nconst LOW_SURR_B = 0xdc00, HIGH_SURR_B = 0xdfff;\n// Create intermediate states for astral characters in a range, if\n// necessary, since the tokenizer acts on UTF16 characters\nfunction rangeEdges(from, to, low, hi) {\n    if (low < ASTRAL) {\n        if (low < GAP_START)\n            from.edge(low, Math.min(hi, GAP_START), to);\n        if (hi > GAP_END)\n            from.edge(Math.max(low, GAP_END), Math.min(hi, MAX_CHAR + 1), to);\n        low = ASTRAL;\n    }\n    if (hi <= ASTRAL)\n        return;\n    let lowStr = String.fromCodePoint(low), hiStr = String.fromCodePoint(hi - 1);\n    let lowA = lowStr.charCodeAt(0), lowB = lowStr.charCodeAt(1);\n    let hiA = hiStr.charCodeAt(0), hiB = hiStr.charCodeAt(1);\n    if (lowA == hiA) { // Share the first char code\n        let hop = new State$1;\n        from.edge(lowA, lowA + 1, hop);\n        hop.edge(lowB, hiB + 1, to);\n    }\n    else {\n        let midStart = lowA, midEnd = hiA;\n        if (lowB > LOW_SURR_B) {\n            midStart++;\n            let hop = new State$1;\n            from.edge(lowA, lowA + 1, hop);\n            hop.edge(lowB, HIGH_SURR_B + 1, to);\n        }\n        if (hiB < HIGH_SURR_B) {\n            midEnd--;\n            let hop = new State$1;\n            from.edge(hiA, hiA + 1, hop);\n            hop.edge(LOW_SURR_B, hiB + 1, to);\n        }\n        if (midStart <= midEnd) {\n            let hop = new State$1;\n            from.edge(midStart, midEnd + 1, hop);\n            hop.edge(LOW_SURR_B, HIGH_SURR_B + 1, to);\n        }\n    }\n}\nfunction isEmpty(expr) {\n    return expr instanceof SequenceExpression && expr.exprs.length == 0;\n}\nfunction gatherExtTokens(b, tokens) {\n    let result = Object.create(null);\n    for (let token of tokens) {\n        b.unique(token.id);\n        let { name, props, dialect } = b.nodeInfo(token.props, \"d\", token.id.name);\n        let term = b.makeTerminal(token.id.name, name, props);\n        if (dialect != null)\n            (b.tokens.byDialect[dialect] || (b.tokens.byDialect[dialect] = [])).push(term);\n        b.namedTerms[token.id.name] = result[token.id.name] = term;\n    }\n    return result;\n}\nfunction findExtToken(b, tokens, expr) {\n    let found = tokens[expr.id.name];\n    if (!found)\n        return null;\n    if (expr.args.length)\n        b.raise(\"External tokens cannot take arguments\", expr.args[0].start);\n    b.used(expr.id.name);\n    return found;\n}\nfunction addRel(rel, term, after) {\n    let found = rel.findIndex(r => r.term == term);\n    if (found < 0)\n        rel.push({ term, after });\n    else\n        rel[found] = { term, after: rel[found].after.concat(after) };\n}\nclass ExternalTokenSet {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.tokens = gatherExtTokens(b, ast.tokens);\n        for (let name in this.tokens)\n            this.b.tokenOrigins[this.tokens[name].name] = { external: this };\n    }\n    getToken(expr) { return findExtToken(this.b, this.tokens, expr); }\n    create() {\n        return this.b.options.externalTokenizer(this.ast.id.name, this.b.termTable);\n    }\n    createSource(importName) {\n        let { source, id: { name } } = this.ast;\n        return importName(name, source);\n    }\n}\nclass ExternalSpecializer {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.term = null;\n        this.tokens = gatherExtTokens(b, ast.tokens);\n    }\n    finish() {\n        let terms = this.b.normalizeExpr(this.ast.token);\n        if (terms.length != 1 || terms[0].terms.length != 1 || !terms[0].terms[0].terminal)\n            this.b.raise(`The token expression to '@external ${this.ast.type}' must resolve to a token`, this.ast.token.start);\n        this.term = terms[0].terms[0];\n        for (let name in this.tokens)\n            this.b.tokenOrigins[this.tokens[name].name] = { spec: this.term, external: this };\n    }\n    getToken(expr) { return findExtToken(this.b, this.tokens, expr); }\n}\nfunction inlineRules(rules, preserve) {\n    for (let pass = 0;; pass++) {\n        let inlinable = Object.create(null), found;\n        if (pass == 0)\n            for (let rule of rules) {\n                if (rule.name.inline && !inlinable[rule.name.name]) {\n                    let group = rules.filter(r => r.name == rule.name);\n                    if (group.some(r => r.parts.includes(rule.name)))\n                        continue;\n                    found = inlinable[rule.name.name] = group;\n                }\n            }\n        for (let i = 0; i < rules.length; i++) {\n            let rule = rules[i];\n            if (!rule.name.interesting && !rule.parts.includes(rule.name) && rule.parts.length < 3 &&\n                !preserve.includes(rule.name) &&\n                (rule.parts.length == 1 || rules.every(other => other.skip == rule.skip || !other.parts.includes(rule.name))) &&\n                !rule.parts.some(p => !!inlinable[p.name]) &&\n                !rules.some((r, j) => j != i && r.name == rule.name))\n                found = inlinable[rule.name.name] = [rule];\n        }\n        if (!found)\n            return rules;\n        let newRules = [];\n        for (let rule of rules) {\n            if (inlinable[rule.name.name])\n                continue;\n            if (!rule.parts.some(p => !!inlinable[p.name])) {\n                newRules.push(rule);\n                continue;\n            }\n            function expand(at, conflicts, parts) {\n                if (at == rule.parts.length) {\n                    newRules.push(new Rule(rule.name, parts, conflicts, rule.skip));\n                    return;\n                }\n                let next = rule.parts[at], replace = inlinable[next.name];\n                if (!replace) {\n                    expand(at + 1, conflicts.concat(rule.conflicts[at + 1]), parts.concat(next));\n                    return;\n                }\n                for (let r of replace)\n                    expand(at + 1, conflicts.slice(0, conflicts.length - 1)\n                        .concat(conflicts[at].join(r.conflicts[0]))\n                        .concat(r.conflicts.slice(1, r.conflicts.length - 1))\n                        .concat(rule.conflicts[at + 1].join(r.conflicts[r.conflicts.length - 1])), parts.concat(r.parts));\n            }\n            expand(0, [rule.conflicts[0]], []);\n        }\n        rules = newRules;\n    }\n}\nfunction mergeRules(rules) {\n    let merged = Object.create(null), found;\n    for (let i = 0; i < rules.length;) {\n        let groupStart = i;\n        let name = rules[i++].name;\n        while (i < rules.length && rules[i].name == name)\n            i++;\n        let size = i - groupStart;\n        if (name.interesting)\n            continue;\n        for (let j = i; j < rules.length;) {\n            let otherStart = j, otherName = rules[j++].name;\n            while (j < rules.length && rules[j].name == otherName)\n                j++;\n            if (j - otherStart != size || otherName.interesting)\n                continue;\n            let match = true;\n            for (let k = 0; k < size && match; k++) {\n                let a = rules[groupStart + k], b = rules[otherStart + k];\n                if (a.cmpNoName(b) != 0)\n                    match = false;\n            }\n            if (match)\n                found = merged[name.name] = otherName;\n        }\n    }\n    if (!found)\n        return rules;\n    let newRules = [];\n    for (let rule of rules)\n        if (!merged[rule.name.name]) {\n            newRules.push(rule.parts.every(p => !merged[p.name]) ? rule :\n                new Rule(rule.name, rule.parts.map(p => merged[p.name] || p), rule.conflicts, rule.skip));\n        }\n    return newRules;\n}\nfunction simplifyRules(rules, preserve) {\n    return mergeRules(inlineRules(rules, preserve));\n}\n/**\nBuild an in-memory parser instance for a given grammar. This is\nmostly useful for testing. If your grammar uses external\ntokenizers, you'll have to provide the `externalTokenizer` option\nfor the returned parser to be able to parse anything.\n*/\nfunction buildParser(text, options = {}) {\n    let builder = new Builder(text, options), parser = builder.getParser();\n    parser.termTable = builder.termTable;\n    return parser;\n}\nconst KEYWORDS = [\"arguments\", \"await\", \"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\",\n    \"eval\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"while\",\n    \"with\", \"null\", \"true\", \"false\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"new\", \"in\", \"this\",\n    \"const\", \"class\", \"extends\", \"export\", \"import\", \"super\", \"enum\", \"implements\", \"interface\",\n    \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"require\"];\n/**\nBuild the code that represents the parser tables for a given\ngrammar description. The `parser` property in the return value\nholds the main file that exports the `Parser` instance. The\n`terms` property holds a declaration file that defines constants\nfor all of the named terms in grammar, holding their ids as value.\nThis is useful when external code, such as a tokenizer, needs to\nbe able to use these ids. It is recommended to run a tree-shaking\nbundler when importing this file, since you usually only need a\nhandful of the many terms in your code.\n*/\nfunction buildParserFile(text, options = {}) {\n    return new Builder(text, options).getParserFile();\n}\nfunction ignored(name) {\n    let first = name[0];\n    return first == \"_\" || first.toUpperCase() != first;\n}\nfunction isExported(rule) {\n    return rule.props.some(p => p.at && p.name == \"export\");\n}\n\nexport { GenError, buildParser, buildParserFile };\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { defaultHighlightStyle, HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nimport { EditorView } from '@codemirror/view';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { tags as t } from '@lezer/highlight';\nexport const jupyterEditorTheme = EditorView.theme({\n    /**\n     * CodeMirror themes are handling the background/color in this way. This works\n     * fine for CodeMirror editors outside the notebook, but the notebook styles\n     * these things differently.\n     */\n    '&': {\n        background: 'var(--jp-layout-color0)',\n        color: 'var(--jp-content-font-color1)'\n    },\n    /* In the notebook, we want this styling to be handled by its container */\n    '.jp-CodeConsole &, .jp-Notebook &': {\n        background: 'transparent'\n    },\n    '.cm-content': {\n        caretColor: 'var(--jp-editor-cursor-color)'\n    },\n    /* Inherit font family from .cm-editor */\n    '.cm-scroller': {\n        fontFamily: 'inherit'\n    },\n    '.cm-cursor, .cm-dropCursor': {\n        borderLeft: 'var(--jp-code-cursor-width0) solid var(--jp-editor-cursor-color)'\n    },\n    '.cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: 'var(--jp-editor-selected-background)'\n    },\n    '&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground': {\n        backgroundColor: 'var(--jp-editor-selected-focused-background)'\n    },\n    '.cm-gutters': {\n        borderRight: '1px solid var(--jp-border-color2)',\n        backgroundColor: 'var(--jp-layout-color2)'\n    },\n    '.cm-gutter': {\n        backgroundColor: 'var(--jp-layout-color2)'\n    },\n    '.cm-activeLine': {\n        backgroundColor: 'color-mix(in srgb, var(--jp-layout-color3) 25%, transparent)'\n    },\n    '.cm-lineNumbers': {\n        color: 'var(--jp-ui-font-color2)'\n    },\n    '.cm-searchMatch': {\n        backgroundColor: 'var(--jp-search-unselected-match-background-color)',\n        color: 'var(--jp-search-unselected-match-color)'\n    },\n    '.cm-searchMatch.cm-searchMatch-selected': {\n        backgroundColor: 'var(--jp-search-selected-match-background-color) !important',\n        color: 'var(--jp-search-selected-match-color) !important'\n    },\n    '.cm-tooltip': {\n        backgroundColor: 'var(--jp-layout-color1)'\n    },\n    '.cm-builtin': {\n        color: 'var(--jp-mirror-editor-builtin-color)'\n    }\n});\n// The list of available tags for syntax highlighting is available at\n// https://lezer.codemirror.net/docs/ref/#highlight.tags\nexport const jupyterHighlightStyle = HighlightStyle.define([\n    // Order matters - a rule will override the previous ones; important for example for in headings styles.\n    { tag: t.meta, color: 'var(--jp-mirror-editor-meta-color)' },\n    { tag: t.heading, color: 'var(--jp-mirror-editor-header-color)' },\n    {\n        tag: [t.heading1, t.heading2, t.heading3, t.heading4],\n        color: 'var(--jp-mirror-editor-header-color)',\n        fontWeight: 'bold'\n    },\n    {\n        tag: t.keyword,\n        color: 'var(--jp-mirror-editor-keyword-color)',\n        fontWeight: 'bold'\n    },\n    { tag: t.atom, color: 'var(--jp-mirror-editor-atom-color)' },\n    { tag: t.number, color: 'var(--jp-mirror-editor-number-color)' },\n    {\n        tag: [t.definition(t.name), t.function(t.definition(t.variableName))],\n        color: 'var(--jp-mirror-editor-def-color)'\n    },\n    {\n        tag: t.standard(t.variableName),\n        color: 'var(--jp-mirror-editor-builtin-color)'\n    },\n    {\n        tag: [t.special(t.variableName), t.self],\n        color: 'var(--jp-mirror-editor-variable-2-color)'\n    },\n    { tag: t.punctuation, color: 'var(--jp-mirror-editor-punctuation-color)' },\n    { tag: t.propertyName, color: 'var(--jp-mirror-editor-property-color)' },\n    {\n        tag: t.operator,\n        color: 'var(--jp-mirror-editor-operator-color)',\n        fontWeight: 'bold'\n    },\n    {\n        tag: t.comment,\n        color: 'var(--jp-mirror-editor-comment-color)',\n        fontStyle: 'italic'\n    },\n    { tag: t.string, color: 'var(--jp-mirror-editor-string-color)' },\n    {\n        tag: [t.labelName, t.monospace, t.special(t.string)],\n        color: 'var(--jp-mirror-editor-string-2-color)'\n    },\n    { tag: t.bracket, color: 'var(--jp-mirror-editor-bracket-color)' },\n    { tag: t.tagName, color: 'var(--jp-mirror-editor-tag-color)' },\n    { tag: t.attributeName, color: 'var(--jp-mirror-editor-attribute-color)' },\n    { tag: t.quote, color: 'var(--jp-mirror-editor-quote-color)' },\n    {\n        tag: t.link,\n        color: 'var(--jp-mirror-editor-link-color)',\n        textDecoration: 'underline'\n    },\n    { tag: [t.separator, t.derefOperator, t.paren], color: '' },\n    { tag: t.strong, fontWeight: 'bold' },\n    { tag: t.emphasis, fontStyle: 'italic' },\n    { tag: t.strikethrough, textDecoration: 'line-through' },\n    {\n        tag: t.bool,\n        color: 'var(--jp-mirror-editor-keyword-color)',\n        fontWeight: 'bold'\n    }\n]);\n/**\n * JupyterLab CodeMirror 6 theme\n */\nexport const jupyterTheme = [\n    jupyterEditorTheme,\n    syntaxHighlighting(jupyterHighlightStyle)\n];\n/**\n * CodeMirror 6 theme registry\n */\nexport class EditorThemeRegistry {\n    constructor() {\n        /**\n         * CodeMirror 6 themes\n         */\n        this._themeMap = new Map([\n            ['jupyter', Object.freeze({ name: 'jupyter', theme: jupyterTheme })]\n        ]);\n    }\n    /**\n     * Get all themes\n     */\n    get themes() {\n        return Array.from(this._themeMap.values());\n    }\n    /**\n     * Get the default CodeMirror 6 theme for JupyterLab\n     *\n     * @returns Default theme\n     */\n    defaultTheme() {\n        return this._themeMap.get('jupyter').theme;\n    }\n    /**\n     * Register a new theme.\n     *\n     * @param theme Codemirror 6 theme\n     */\n    addTheme(theme) {\n        if (this._themeMap.has(theme.name)) {\n            throw new Error(`A theme named '${theme.name}' is already registered.`);\n        }\n        this._themeMap.set(theme.name, { displayName: theme.name, ...theme });\n    }\n    /**\n     * Get a theme.\n     *\n     * #### Notes\n     * It falls back to the default theme\n     *\n     * @param name Theme name\n     * @returns Theme extension\n     */\n    getTheme(name) {\n        var _a;\n        const ext = (_a = this._themeMap.get(name)) === null || _a === void 0 ? void 0 : _a.theme;\n        return ext !== null && ext !== void 0 ? ext : this.defaultTheme();\n    }\n}\n/**\n * EditorThemeRegistry namespace\n */\n(function (EditorThemeRegistry) {\n    /**\n     * Get the default editor themes.\n     *\n     * @param translator Application translator\n     * @returns Default CodeMirror 6 themes\n     */\n    function getDefaultThemes(translator) {\n        const trans = (translator !== null && translator !== void 0 ? translator : nullTranslator).load('jupyterlab');\n        return [\n            Object.freeze({\n                name: 'codemirror',\n                displayName: trans.__('codemirror'),\n                theme: [\n                    EditorView.baseTheme({}),\n                    syntaxHighlighting(defaultHighlightStyle)\n                ]\n            })\n        ];\n    }\n    EditorThemeRegistry.getDefaultThemes = getDefaultThemes;\n})(EditorThemeRegistry || (EditorThemeRegistry = {}));\n//# sourceMappingURL=theme.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { syntaxTree } from '@codemirror/language';\nimport { RangeSetBuilder } from '@codemirror/state';\nimport { Decoration, ViewPlugin } from '@codemirror/view';\nimport { NodeProp } from '@lezer/common';\nexport class PythonBuiltin {\n    constructor(view, langPython) {\n        this.langPython = langPython;\n        this.tree = syntaxTree(view.state);\n        this.mark = Decoration.mark({ class: 'cm-builtin' });\n        this.decorations = this.buildDeco(view);\n        this.decoratedTo = view.viewport.to;\n    }\n    update(update) {\n        let tree = syntaxTree(update.state);\n        let { viewport } = update.view, decoratedToMapped = update.changes.mapPos(this.decoratedTo, 1);\n        if (tree.length < viewport.to &&\n            tree.type == this.tree.type &&\n            decoratedToMapped >= viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n            this.decoratedTo = decoratedToMapped;\n        }\n        else if (tree != this.tree || update.viewportChanged) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view);\n            this.decoratedTo = viewport.to;\n        }\n    }\n    buildDeco(view) {\n        if (!this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        const enter = (node) => {\n            var _a;\n            const cursor = node.node.cursor();\n            // Handle nested language, e.g. Markdown\n            const mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n            if (mounted && mounted.overlay) {\n                (_a = node.node\n                    .enter(mounted.overlay[0].from + node.from, 1)) === null || _a === void 0 ? void 0 : _a.cursor().iterate(enter);\n            }\n            if (this.langPython.isActiveAt(view.state, node.from + 1) &&\n                node.name === 'VariableName') {\n                const variableName = view.state.sliceDoc(node.from, node.to);\n                if (builtins.includes(variableName)) {\n                    builder.add(node.from, node.to, this.mark);\n                }\n            }\n        };\n        for (let { from, to } of view.visibleRanges) {\n            this.tree.iterate({ enter, from, to });\n        }\n        return builder.finish();\n    }\n}\nexport function pythonBuiltin(langPython) {\n    return ViewPlugin.define(view => new PythonBuiltin(view, langPython), {\n        decorations: v => v.decorations\n    });\n}\nconst builtins = [\n    'abs',\n    'aiter',\n    'all',\n    'any',\n    'anext',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip',\n    '__import__'\n];\n//# sourceMappingURL=pythonBuiltin.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { LanguageDescription, LanguageSupport, LRLanguage, StreamLanguage } from '@codemirror/language';\nimport { IEditorMimeTypeService } from '@jupyterlab/codeeditor';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { buildParser } from '@lezer/generator';\nimport { highlightTree } from '@lezer/highlight';\nimport { jupyterHighlightStyle } from './theme';\nimport { pythonBuiltin } from './pythonBuiltin';\n/**\n * CodeMirror language registry\n */\nexport class EditorLanguageRegistry {\n    constructor() {\n        this._modeList = [];\n        // Add default language text/plain -> No expressions to parse\n        this.addLanguage({\n            name: 'none',\n            mime: 'text/plain',\n            support: new LanguageSupport(\n            // Create a dummy parser that as no expression to parse\n            LRLanguage.define({ parser: buildParser('@top Program { }') }))\n        });\n    }\n    /**\n     * Register a new language for CodeMirror\n     *\n     * @param language Language to register\n     */\n    addLanguage(language) {\n        var _a;\n        const info = (_a = this.findByName(language.name)) !== null && _a !== void 0 ? _a : this.findByMIME(language.mime, true);\n        if (info) {\n            throw new Error(`${language.mime} already registered`);\n        }\n        this._modeList.push(this.makeSpec(language));\n    }\n    /**\n     * Ensure a codemirror mode is available by name or Codemirror spec.\n     *\n     * @param language - The mode to ensure.  If it is a string, uses [findBest]\n     *   to get the appropriate spec.\n     *\n     * @returns A promise that resolves when the mode is available.\n     */\n    async getLanguage(language) {\n        const spec = this.findBest(language);\n        if (spec && !spec.support) {\n            spec.support = await spec.load();\n        }\n        return spec;\n    }\n    /**\n     * Get the raw list of available modes specs.\n     *\n     * @returns The available modes\n     */\n    getLanguages() {\n        return [...this._modeList];\n    }\n    /**\n     * Find a codemirror mode by MIME.\n     *\n     * @param mime Mime type to look for\n     * @param strict Whether xml and json should be assimilated to the generic mimetype\n     * @returns The mode or null\n     */\n    findByMIME(mime, strict = false) {\n        if (Array.isArray(mime)) {\n            for (let i = 0; i < mime.length; i++) {\n                const spec = this.findByMIME(mime[i]);\n                if (spec)\n                    return spec;\n            }\n            return null;\n        }\n        mime = mime.toLowerCase();\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            if (Array.isArray(info.mime)) {\n                for (let j = 0; j < info.mime.length; j++) {\n                    if (info.mime[j] == mime) {\n                        return info;\n                    }\n                }\n            }\n            else if (info.mime == mime) {\n                return info;\n            }\n        }\n        if (!strict) {\n            if (/\\+xml$/.test(mime))\n                return this.findByMIME('application/xml');\n            if (/\\+json$/.test(mime))\n                return this.findByMIME('application/json');\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by name.\n     *\n     * @param name The mode name\n     * @returns The mode or null\n     */\n    findByName(name) {\n        name = name.toLowerCase();\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            if (info.name.toLowerCase() == name)\n                return info;\n            if (info.alias) {\n                for (let j = 0; j < info.alias.length; j++) {\n                    if (info.alias[j].toLowerCase() == name) {\n                        return info;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by extension.\n     *\n     * @param ext The extension name\n     * @returns The mode or null\n     */\n    findByExtension(ext) {\n        if (Array.isArray(ext)) {\n            for (let i = 0; i < ext.length; i++) {\n                const spec = this.findByExtension(ext[i]);\n                if (spec)\n                    return spec;\n            }\n            return null;\n        }\n        ext = ext.toLowerCase();\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            for (let j = 0; j < info.extensions.length; j++) {\n                if (info.extensions[j].toLowerCase() == ext) {\n                    return info;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by filename.\n     *\n     * @param name File name\n     * @returns The mode or null\n     */\n    findByFileName(name) {\n        const basename = PathExt.basename(name);\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            if (info.filename && info.filename.test(basename)) {\n                return info;\n            }\n        }\n        let dot = basename.lastIndexOf('.');\n        let ext = dot > -1 && basename.substring(dot + 1, basename.length);\n        if (ext) {\n            return this.findByExtension(ext);\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by name or CodeMirror spec.\n     *\n     * @param language The CodeMirror mode\n     * @param fallback Whether to fallback to default mimetype spec or not\n     * @returns The mode or null\n     */\n    findBest(language, fallback = true) {\n        var _a, _b, _c, _d;\n        const modename = typeof language === 'string' ? language : language.name;\n        const mimetype = typeof language !== 'string' ? language.mime : modename;\n        const ext = typeof language !== 'string' ? (_a = language.extensions) !== null && _a !== void 0 ? _a : [] : [];\n        return ((_d = (_c = (_b = (modename ? this.findByName(modename) : null)) !== null && _b !== void 0 ? _b : (mimetype ? this.findByMIME(mimetype) : null)) !== null && _c !== void 0 ? _c : this.findByExtension(ext)) !== null && _d !== void 0 ? _d : (fallback\n            ? this.findByMIME(IEditorMimeTypeService.defaultMimeType)\n            : null));\n    }\n    /**\n     * Parse and style a string.\n     *\n     * @param code Code to highlight\n     * @param language Code language\n     * @param el HTML element into which the highlighted code will be inserted\n     */\n    async highlight(code, language, el) {\n        var _a;\n        if (language) {\n            await this.getLanguage(language);\n        }\n        const language_ = (_a = language === null || language === void 0 ? void 0 : language.support) === null || _a === void 0 ? void 0 : _a.language;\n        if (!language_) {\n            el.appendChild(document.createTextNode(code));\n            return;\n        }\n        const tree = language_.parser.parse(code);\n        // position state required because unstyled tokens are not emitted\n        // in highlightTree\n        let pos = 0;\n        highlightTree(tree, jupyterHighlightStyle, (from, to, classes) => {\n            if (from > pos) {\n                // No style applied to the token between pos and from\n                el.appendChild(document.createTextNode(code.slice(pos, from)));\n            }\n            const sp = el.appendChild(document.createElement('span'));\n            sp.className = classes;\n            sp.appendChild(document.createTextNode(code.slice(from, to)));\n            pos = to;\n        });\n        if (pos < tree.length - 1) {\n            // No style applied on the trailing text\n            el.appendChild(document.createTextNode(code.slice(pos, tree.length)));\n        }\n    }\n    // Code mirror uses two similar structures, a plain object with optional fields,\n    // and a class with the same fields but all mandatory. Maybe adopting the same\n    // pattern would be less confusing (although far more verbose)\n    makeSpec(spec) {\n        let res = LanguageDescription.of(spec);\n        // CodeMirror does not store/use mime type of a language\n        res.mime = spec.mime;\n        res.displayName = spec.displayName;\n        return res;\n    }\n}\n/**\n * EditorLanguageRegistry namespace\n */\n(function (EditorLanguageRegistry) {\n    /**\n     * Convert an CodeMirror 5 language parser to CodeMirror 6\n     *\n     * @param parser Legacy parser\n     * @returns Language object\n     */\n    function legacy(parser) {\n        return new LanguageSupport(StreamLanguage.define(parser));\n    }\n    EditorLanguageRegistry.legacy = legacy;\n    /**\n     * Create a dialect of SQL\n     *\n     * @param dialectName SQL dialect\n     * @returns Language object\n     */\n    async function sql(dialectName) {\n        const m = await import('@codemirror/lang-sql');\n        return m.sql({ dialect: m[dialectName] });\n    }\n    /**\n     * Get the default editor languages\n     *\n     * @param translator Application translator\n     * @returns Default CodeMirror 6 languages\n     */\n    function getDefaultLanguages(translator) {\n        const trans = (translator !== null && translator !== void 0 ? translator : nullTranslator).load('jupyterlab');\n        return [\n            {\n                name: 'C',\n                displayName: trans.__('C'),\n                mime: 'text/x-csrc',\n                extensions: ['c', 'h', 'ino'],\n                async load() {\n                    const m = await import('@codemirror/lang-cpp');\n                    return m.cpp();\n                }\n            },\n            {\n                name: 'C++',\n                displayName: trans.__('C++'),\n                mime: 'text/x-c++src',\n                extensions: ['cpp', 'c++', 'cc', 'cxx', 'hpp', 'h++', 'hh', 'hxx'],\n                async load() {\n                    const m = await import('@codemirror/lang-cpp');\n                    return m.cpp();\n                }\n            },\n            {\n                name: 'CQL',\n                displayName: trans.__('CQL'),\n                mime: 'text/x-cassandra',\n                extensions: ['cql'],\n                load() {\n                    return sql('Cassandra');\n                }\n            },\n            {\n                name: 'CSS',\n                displayName: trans.__('CSS'),\n                mime: 'text/css',\n                extensions: ['css'],\n                async load() {\n                    const m = await import('@codemirror/lang-css');\n                    return m.css();\n                }\n            },\n            {\n                name: 'HTML',\n                displayName: trans.__('HTML'),\n                alias: ['xhtml'],\n                mime: 'text/html',\n                extensions: ['html', 'htm', 'handlebars', 'hbs'],\n                async load() {\n                    const m = await import('@codemirror/lang-html');\n                    return m.html();\n                }\n            },\n            {\n                name: 'Java',\n                displayName: trans.__('Java'),\n                mime: 'text/x-java',\n                extensions: ['java'],\n                async load() {\n                    const m = await import('@codemirror/lang-java');\n                    return m.java();\n                }\n            },\n            {\n                name: 'Javascript',\n                displayName: trans.__('Javascript'),\n                alias: ['ecmascript', 'js', 'node'],\n                mime: [\n                    'text/javascript',\n                    'text/ecmascript',\n                    'application/javascript',\n                    'application/x-javascript',\n                    'application/ecmascript'\n                ],\n                extensions: ['js', 'mjs', 'cjs'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript();\n                }\n            },\n            {\n                name: 'JSON',\n                displayName: trans.__('JSON'),\n                alias: ['json5'],\n                mime: ['application/json', 'application/x-json'],\n                extensions: ['json', 'map'],\n                async load() {\n                    const m = await import('@codemirror/lang-json');\n                    return m.json();\n                }\n            },\n            {\n                name: 'JSX',\n                displayName: trans.__('JSX'),\n                mime: 'text/jsx',\n                extensions: ['jsx'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript({ jsx: true });\n                }\n            },\n            {\n                name: 'MariaDB SQL',\n                displayName: trans.__('MariaDB SQL'),\n                mime: 'text/x-mariadb',\n                load() {\n                    return sql('MariaSQL');\n                }\n            },\n            {\n                name: 'Markdown',\n                displayName: trans.__('Markdown'),\n                mime: 'text/x-markdown',\n                extensions: ['md', 'markdown', 'mkd'],\n                async load() {\n                    const m = await import('@codemirror/lang-markdown');\n                    return m.markdown({ codeLanguages: this._modeList });\n                }\n            },\n            {\n                name: 'MS SQL',\n                displayName: trans.__('MS SQL'),\n                mime: 'text/x-mssql',\n                load() {\n                    return sql('MSSQL');\n                }\n            },\n            {\n                name: 'MySQL',\n                displayName: trans.__('MySQL'),\n                mime: 'text/x-mysql',\n                load() {\n                    return sql('MySQL');\n                }\n            },\n            {\n                name: 'PHP',\n                displayName: trans.__('PHP'),\n                mime: [\n                    'text/x-php',\n                    'application/x-httpd-php',\n                    'application/x-httpd-php-open'\n                ],\n                extensions: ['php', 'php3', 'php4', 'php5', 'php7', 'phtml'],\n                async load() {\n                    const m = await import('@codemirror/lang-php');\n                    return m.php();\n                }\n            },\n            {\n                name: 'PLSQL',\n                displayName: trans.__('PLSQL'),\n                mime: 'text/x-plsql',\n                extensions: ['pls'],\n                load() {\n                    return sql('PLSQL');\n                }\n            },\n            {\n                name: 'PostgreSQL',\n                displayName: trans.__('PostgreSQL'),\n                mime: 'text/x-pgsql',\n                load() {\n                    return sql('PostgreSQL');\n                }\n            },\n            {\n                name: 'Python',\n                displayName: trans.__('Python'),\n                mime: 'text/x-python',\n                extensions: ['BUILD', 'bzl', 'py', 'pyw'],\n                filename: /^(BUCK|BUILD)$/,\n                async load() {\n                    const m = await import('@codemirror/lang-python');\n                    return new LanguageSupport(m.pythonLanguage, pythonBuiltin(m.pythonLanguage));\n                }\n            },\n            {\n                name: 'ipython',\n                displayName: trans.__('ipython'),\n                mime: 'text/x-ipython',\n                async load() {\n                    // FIXME Restore '?' operator - using the default python LanguageSupport allows\n                    // to activate feature such as code folding.\n                    // return Promise.resolve(legacy(mkPython({ singleOperators: /\\?/ })));\n                    const m = await import('@codemirror/lang-python');\n                    return new LanguageSupport(m.pythonLanguage, pythonBuiltin(m.pythonLanguage));\n                }\n            },\n            {\n                name: 'Rust',\n                displayName: trans.__('Rust'),\n                mime: 'text/x-rustsrc',\n                extensions: ['rs'],\n                async load() {\n                    const m = await import('@codemirror/lang-rust');\n                    return m.rust();\n                }\n            },\n            {\n                name: 'SQL',\n                displayName: trans.__('SQL'),\n                mime: ['application/sql', 'text/x-sql'],\n                extensions: ['sql'],\n                load() {\n                    return sql('StandardSQL');\n                }\n            },\n            {\n                name: 'SQLite',\n                displayName: trans.__('SQLite'),\n                mime: 'text/x-sqlite',\n                load() {\n                    return sql('SQLite');\n                }\n            },\n            {\n                name: 'TSX',\n                displayName: trans.__('TSX'),\n                alias: ['TypeScript-JSX'],\n                mime: 'text/typescript-jsx',\n                extensions: ['tsx'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript({ jsx: true, typescript: true });\n                }\n            },\n            {\n                name: 'TypeScript',\n                displayName: trans.__('TypeScript'),\n                alias: ['ts'],\n                mime: 'application/typescript',\n                extensions: ['ts'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript({ typescript: true });\n                }\n            },\n            {\n                name: 'WebAssembly',\n                displayName: trans.__('WebAssembly'),\n                mime: 'text/webassembly',\n                extensions: ['wat', 'wast'],\n                async load() {\n                    const m = await import('@codemirror/lang-wast');\n                    return m.wast();\n                }\n            },\n            {\n                name: 'XML',\n                displayName: trans.__('XML'),\n                alias: ['rss', 'wsdl', 'xsd'],\n                mime: ['application/xml', 'text/xml'],\n                extensions: ['xml', 'xsl', 'xsd', 'svg'],\n                async load() {\n                    const m = await import('@codemirror/lang-xml');\n                    return m.xml();\n                }\n            },\n            // Legacy modes ported from CodeMirror 5\n            {\n                name: 'APL',\n                displayName: trans.__('APL'),\n                mime: 'text/apl',\n                extensions: ['dyalog', 'apl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/apl');\n                    return legacy(m.apl);\n                }\n            },\n            {\n                name: 'PGP',\n                displayName: trans.__('PGP'),\n                alias: ['asciiarmor'],\n                mime: [\n                    'application/pgp',\n                    'application/pgp-encrypted',\n                    'application/pgp-keys',\n                    'application/pgp-signature'\n                ],\n                extensions: ['asc', 'pgp', 'sig'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/asciiarmor');\n                    return legacy(m.asciiArmor);\n                }\n            },\n            {\n                name: 'ASN.1',\n                displayName: trans.__('ASN.1'),\n                mime: 'text/x-ttcn-asn',\n                extensions: ['asn', 'asn1'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/asn1');\n                    return legacy(m.asn1({}));\n                }\n            },\n            {\n                name: 'Asterisk',\n                displayName: trans.__('Asterisk'),\n                mime: 'text/x-asterisk',\n                filename: /^extensions\\.conf$/i,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/asterisk');\n                    return legacy(m.asterisk);\n                }\n            },\n            {\n                name: 'Brainfuck',\n                displayName: trans.__('Brainfuck'),\n                mime: 'text/x-brainfuck',\n                extensions: ['b', 'bf'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/brainfuck');\n                    return legacy(m.brainfuck);\n                }\n            },\n            {\n                name: 'Cobol',\n                displayName: trans.__('Cobol'),\n                mime: 'text/x-cobol',\n                extensions: ['cob', 'cpy'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/cobol');\n                    return legacy(m.cobol);\n                }\n            },\n            {\n                name: 'C#',\n                displayName: trans.__('C#'),\n                alias: ['csharp', 'cs'],\n                mime: 'text/x-csharp',\n                extensions: ['cs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.csharp);\n                }\n            },\n            {\n                name: 'Clojure',\n                displayName: trans.__('Clojure'),\n                mime: 'text/x-clojure',\n                extensions: ['clj', 'cljc', 'cljx'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clojure');\n                    return legacy(m.clojure);\n                }\n            },\n            {\n                name: 'ClojureScript',\n                displayName: trans.__('ClojureScript'),\n                mime: 'text/x-clojurescript',\n                extensions: ['cljs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clojure');\n                    return legacy(m.clojure);\n                }\n            },\n            {\n                name: 'Closure Stylesheets (GSS)',\n                displayName: trans.__('Closure Stylesheets (GSS)'),\n                mime: 'text/x-gss',\n                extensions: ['gss'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/css');\n                    return legacy(m.gss);\n                }\n            },\n            {\n                name: 'CMake',\n                displayName: trans.__('CMake'),\n                mime: 'text/x-cmake',\n                extensions: ['cmake', 'cmake.in'],\n                filename: /^CMakeLists\\.txt$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/cmake');\n                    return legacy(m.cmake);\n                }\n            },\n            {\n                name: 'CoffeeScript',\n                displayName: trans.__('CoffeeScript'),\n                alias: ['coffee', 'coffee-script'],\n                mime: [\n                    'application/vnd.coffeescript',\n                    'text/coffeescript',\n                    'text/x-coffeescript'\n                ],\n                extensions: ['coffee'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/coffeescript');\n                    return legacy(m.coffeeScript);\n                }\n            },\n            {\n                name: 'Common Lisp',\n                displayName: trans.__('Common Lisp'),\n                alias: ['lisp'],\n                mime: 'text/x-common-lisp',\n                extensions: ['cl', 'lisp', 'el'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/commonlisp');\n                    return legacy(m.commonLisp);\n                }\n            },\n            {\n                name: 'Cypher',\n                displayName: trans.__('Cypher'),\n                mime: 'application/x-cypher-query',\n                extensions: ['cyp', 'cypher'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/cypher');\n                    return legacy(m.cypher);\n                }\n            },\n            {\n                name: 'Cython',\n                displayName: trans.__('Cython'),\n                mime: 'text/x-cython',\n                extensions: ['pyx', 'pxd', 'pxi'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/python');\n                    return legacy(m.cython);\n                }\n            },\n            {\n                name: 'Crystal',\n                displayName: trans.__('Crystal'),\n                mime: 'text/x-crystal',\n                extensions: ['cr'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/crystal');\n                    return legacy(m.crystal);\n                }\n            },\n            {\n                name: 'D',\n                displayName: trans.__('D'),\n                mime: 'text/x-d',\n                extensions: ['d'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/d');\n                    return legacy(m.d);\n                }\n            },\n            {\n                name: 'Dart',\n                displayName: trans.__('Dart'),\n                mime: ['application/dart', 'text/x-dart'],\n                extensions: ['dart'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.dart);\n                }\n            },\n            {\n                name: 'diff',\n                displayName: trans.__('diff'),\n                mime: 'text/x-diff',\n                extensions: ['diff', 'patch'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/diff');\n                    return legacy(m.diff);\n                }\n            },\n            {\n                name: 'Dockerfile',\n                displayName: trans.__('Dockerfile'),\n                mime: 'text/x-dockerfile',\n                filename: /^Dockerfile$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/dockerfile');\n                    return legacy(m.dockerFile);\n                }\n            },\n            {\n                name: 'DTD',\n                displayName: trans.__('DTD'),\n                mime: 'application/xml-dtd',\n                extensions: ['dtd'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/dtd');\n                    return legacy(m.dtd);\n                }\n            },\n            {\n                name: 'Dylan',\n                displayName: trans.__('Dylan'),\n                mime: 'text/x-dylan',\n                extensions: ['dylan', 'dyl', 'intr'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/dylan');\n                    return legacy(m.dylan);\n                }\n            },\n            {\n                name: 'EBNF',\n                displayName: trans.__('EBNF'),\n                mime: 'text/x-ebnf',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ebnf');\n                    return legacy(m.ebnf);\n                }\n            },\n            {\n                name: 'ECL',\n                displayName: trans.__('ECL'),\n                mime: 'text/x-ecl',\n                extensions: ['ecl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ecl');\n                    return legacy(m.ecl);\n                }\n            },\n            {\n                name: 'edn',\n                displayName: trans.__('edn'),\n                mime: 'application/edn',\n                extensions: ['edn'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clojure');\n                    return legacy(m.clojure);\n                }\n            },\n            {\n                name: 'Eiffel',\n                displayName: trans.__('Eiffel'),\n                mime: 'text/x-eiffel',\n                extensions: ['e'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/eiffel');\n                    return legacy(m.eiffel);\n                }\n            },\n            {\n                name: 'Elm',\n                displayName: trans.__('Elm'),\n                mime: 'text/x-elm',\n                extensions: ['elm'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/elm');\n                    return legacy(m.elm);\n                }\n            },\n            {\n                name: 'Erlang',\n                displayName: trans.__('Erlang'),\n                mime: 'text/x-erlang',\n                extensions: ['erl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/erlang');\n                    return legacy(m.erlang);\n                }\n            },\n            {\n                name: 'Esper',\n                displayName: trans.__('Esper'),\n                mime: 'text/x-esper',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sql');\n                    return legacy(m.esper);\n                }\n            },\n            {\n                name: 'Factor',\n                displayName: trans.__('Factor'),\n                mime: 'text/x-factor',\n                extensions: ['factor'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/factor');\n                    return legacy(m.factor);\n                }\n            },\n            {\n                name: 'FCL',\n                displayName: trans.__('FCL'),\n                mime: 'text/x-fcl',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/fcl');\n                    return legacy(m.fcl);\n                }\n            },\n            {\n                name: 'Forth',\n                displayName: trans.__('Forth'),\n                mime: 'text/x-forth',\n                extensions: ['forth', 'fth', '4th'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/forth');\n                    return legacy(m.forth);\n                }\n            },\n            {\n                name: 'Fortran',\n                displayName: trans.__('Fortran'),\n                mime: 'text/x-fortran',\n                extensions: ['f', 'for', 'f77', 'f90', 'f95'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/fortran');\n                    return legacy(m.fortran);\n                }\n            },\n            {\n                name: 'F#',\n                displayName: trans.__('F#'),\n                alias: ['fsharp'],\n                mime: 'text/x-fsharp',\n                extensions: ['fs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mllike');\n                    return legacy(m.fSharp);\n                }\n            },\n            {\n                name: 'Gas',\n                displayName: trans.__('Gas'),\n                mime: 'text/x-gas',\n                extensions: ['s'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/gas');\n                    return legacy(m.gas);\n                }\n            },\n            {\n                name: 'Gherkin',\n                displayName: trans.__('Gherkin'),\n                mime: 'text/x-feature',\n                extensions: ['feature'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/gherkin');\n                    return legacy(m.gherkin);\n                }\n            },\n            {\n                name: 'Go',\n                displayName: trans.__('Go'),\n                mime: 'text/x-go',\n                extensions: ['go'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/go');\n                    return legacy(m.go);\n                }\n            },\n            {\n                name: 'Groovy',\n                displayName: trans.__('Groovy'),\n                mime: 'text/x-groovy',\n                extensions: ['groovy', 'gradle'],\n                filename: /^Jenkinsfile$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/groovy');\n                    return legacy(m.groovy);\n                }\n            },\n            {\n                name: 'Haskell',\n                displayName: trans.__('Haskell'),\n                mime: 'text/x-haskell',\n                extensions: ['hs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/haskell');\n                    return legacy(m.haskell);\n                }\n            },\n            {\n                name: 'Haxe',\n                displayName: trans.__('Haxe'),\n                mime: 'text/x-haxe',\n                extensions: ['hx'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/haxe');\n                    return legacy(m.haxe);\n                }\n            },\n            {\n                name: 'HXML',\n                displayName: trans.__('HXML'),\n                mime: 'text/x-hxml',\n                extensions: ['hxml'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/haxe');\n                    return legacy(m.hxml);\n                }\n            },\n            {\n                name: 'HTTP',\n                displayName: trans.__('HTTP'),\n                mime: 'message/http',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/http');\n                    return legacy(m.http);\n                }\n            },\n            {\n                name: 'IDL',\n                displayName: trans.__('IDL'),\n                mime: 'text/x-idl',\n                extensions: ['pro'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/idl');\n                    return legacy(m.idl);\n                }\n            },\n            {\n                name: 'JSON-LD',\n                displayName: trans.__('JSON-LD'),\n                alias: ['jsonld'],\n                mime: 'application/ld+json',\n                extensions: ['jsonld'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/javascript');\n                    return legacy(m.jsonld);\n                }\n            },\n            {\n                name: 'Jinja2',\n                displayName: trans.__('Jinja2'),\n                mime: 'text/jinja2',\n                extensions: ['j2', 'jinja', 'jinja2'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/jinja2');\n                    return legacy(m.jinja2);\n                }\n            },\n            {\n                name: 'Julia',\n                displayName: trans.__('Julia'),\n                mime: 'text/x-julia',\n                extensions: ['jl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/julia');\n                    return legacy(m.julia);\n                }\n            },\n            {\n                name: 'Kotlin',\n                displayName: trans.__('Kotlin'),\n                mime: 'text/x-kotlin',\n                extensions: ['kt'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.kotlin);\n                }\n            },\n            {\n                name: 'LESS',\n                displayName: trans.__('LESS'),\n                mime: 'text/x-less',\n                extensions: ['less'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/css');\n                    return legacy(m.less);\n                }\n            },\n            {\n                name: 'LiveScript',\n                displayName: trans.__('LiveScript'),\n                alias: ['ls'],\n                mime: 'text/x-livescript',\n                extensions: ['ls'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/livescript');\n                    return legacy(m.liveScript);\n                }\n            },\n            {\n                name: 'Lua',\n                displayName: trans.__('Lua'),\n                mime: 'text/x-lua',\n                extensions: ['lua'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/lua');\n                    return legacy(m.lua);\n                }\n            },\n            {\n                name: 'mIRC',\n                displayName: trans.__('mIRC'),\n                mime: 'text/mirc',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mirc');\n                    return legacy(m.mirc);\n                }\n            },\n            {\n                name: 'Mathematica',\n                displayName: trans.__('Mathematica'),\n                mime: 'text/x-mathematica',\n                extensions: ['m', 'nb', 'wl', 'wls'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mathematica');\n                    return legacy(m.mathematica);\n                }\n            },\n            {\n                name: 'Modelica',\n                displayName: trans.__('Modelica'),\n                mime: 'text/x-modelica',\n                extensions: ['mo'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/modelica');\n                    return legacy(m.modelica);\n                }\n            },\n            {\n                name: 'MUMPS',\n                displayName: trans.__('MUMPS'),\n                mime: 'text/x-mumps',\n                extensions: ['mps'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mumps');\n                    return legacy(m.mumps);\n                }\n            },\n            {\n                name: 'mbox',\n                displayName: trans.__('mbox'),\n                mime: 'application/mbox',\n                extensions: ['mbox'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mbox');\n                    return legacy(m.mbox);\n                }\n            },\n            {\n                name: 'Nginx',\n                displayName: trans.__('Nginx'),\n                mime: 'text/x-nginx-conf',\n                filename: /nginx.*\\.conf$/i,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/nginx');\n                    return legacy(m.nginx);\n                }\n            },\n            {\n                name: 'NSIS',\n                displayName: trans.__('NSIS'),\n                mime: 'text/x-nsis',\n                extensions: ['nsh', 'nsi'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/nsis');\n                    return legacy(m.nsis);\n                }\n            },\n            {\n                name: 'NTriples',\n                displayName: trans.__('NTriples'),\n                mime: [\n                    'application/n-triples',\n                    'application/n-quads',\n                    'text/n-triples'\n                ],\n                extensions: ['nt', 'nq'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ntriples');\n                    return legacy(m.ntriples);\n                }\n            },\n            {\n                name: 'Objective-C',\n                displayName: trans.__('Objective-C'),\n                alias: ['objective-c', 'objc'],\n                mime: 'text/x-objectivec',\n                extensions: ['m'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.objectiveC);\n                }\n            },\n            {\n                name: 'Objective-C++',\n                displayName: trans.__('Objective-C++'),\n                alias: ['objective-c++', 'objc++'],\n                mime: 'text/x-objectivec++',\n                extensions: ['mm'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.objectiveCpp);\n                }\n            },\n            {\n                name: 'OCaml',\n                displayName: trans.__('OCaml'),\n                mime: 'text/x-ocaml',\n                extensions: ['ml', 'mli', 'mll', 'mly'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mllike');\n                    return legacy(m.oCaml);\n                }\n            },\n            {\n                name: 'Octave',\n                displayName: trans.__('Octave'),\n                mime: 'text/x-octave',\n                extensions: ['m'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/octave');\n                    return legacy(m.octave);\n                }\n            },\n            {\n                name: 'Oz',\n                displayName: trans.__('Oz'),\n                mime: 'text/x-oz',\n                extensions: ['oz'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/oz');\n                    return legacy(m.oz);\n                }\n            },\n            {\n                name: 'Pascal',\n                displayName: trans.__('Pascal'),\n                mime: 'text/x-pascal',\n                extensions: ['p', 'pas'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/pascal');\n                    return legacy(m.pascal);\n                }\n            },\n            {\n                name: 'Perl',\n                displayName: trans.__('Perl'),\n                mime: 'text/x-perl',\n                extensions: ['pl', 'pm'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/perl');\n                    return legacy(m.perl);\n                }\n            },\n            {\n                name: 'Pig',\n                displayName: trans.__('Pig'),\n                mime: 'text/x-pig',\n                extensions: ['pig'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/pig');\n                    return legacy(m.pig);\n                }\n            },\n            {\n                name: 'PowerShell',\n                displayName: trans.__('PowerShell'),\n                mime: 'application/x-powershell',\n                extensions: ['ps1', 'psd1', 'psm1'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/powershell');\n                    return legacy(m.powerShell);\n                }\n            },\n            {\n                name: 'Properties files',\n                displayName: trans.__('Properties files'),\n                alias: ['ini', 'properties'],\n                mime: 'text/x-properties',\n                extensions: ['properties', 'ini', 'in'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/properties');\n                    return legacy(m.properties);\n                }\n            },\n            {\n                name: 'ProtoBuf',\n                displayName: trans.__('ProtoBuf'),\n                mime: 'text/x-protobuf',\n                extensions: ['proto'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/protobuf');\n                    return legacy(m.protobuf);\n                }\n            },\n            {\n                name: 'Pug',\n                displayName: trans.__('Pug'),\n                mime: 'text/x-pug',\n                extensions: ['pug'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/pug');\n                    return legacy(m.pug);\n                }\n            },\n            {\n                name: 'Puppet',\n                displayName: trans.__('Puppet'),\n                mime: 'text/x-puppet',\n                extensions: ['pp'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/puppet');\n                    return legacy(m.puppet);\n                }\n            },\n            {\n                name: 'Q',\n                displayName: trans.__('Q'),\n                mime: 'text/x-q',\n                extensions: ['q'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/q');\n                    return legacy(m.q);\n                }\n            },\n            {\n                name: 'R',\n                displayName: trans.__('R'),\n                alias: ['rscript'],\n                mime: 'text/x-rsrc',\n                extensions: ['r', 'R'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/r');\n                    return legacy(m.r);\n                }\n            },\n            {\n                name: 'RPM Changes',\n                displayName: trans.__('RPM Changes'),\n                mime: 'text/x-rpm-changes',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/rpm');\n                    return legacy(m.rpmChanges);\n                }\n            },\n            {\n                name: 'RPM Spec',\n                displayName: trans.__('RPM Spec'),\n                mime: 'text/x-rpm-spec',\n                extensions: ['spec'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/rpm');\n                    return legacy(m.rpmSpec);\n                }\n            },\n            {\n                name: 'Ruby',\n                displayName: trans.__('Ruby'),\n                alias: ['jruby', 'macruby', 'rake', 'rb', 'rbx'],\n                mime: 'text/x-ruby',\n                extensions: ['rb'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ruby');\n                    return legacy(m.ruby);\n                }\n            },\n            {\n                name: 'SAS',\n                displayName: trans.__('SAS'),\n                mime: 'text/x-sas',\n                extensions: ['sas'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sas');\n                    return legacy(m.sas);\n                }\n            },\n            {\n                name: 'Scala',\n                displayName: trans.__('Scala'),\n                mime: 'text/x-scala',\n                extensions: ['scala'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.scala);\n                }\n            },\n            {\n                name: 'Scheme',\n                displayName: trans.__('Scheme'),\n                mime: 'text/x-scheme',\n                extensions: ['scm', 'ss'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/scheme');\n                    return legacy(m.scheme);\n                }\n            },\n            {\n                name: 'SCSS',\n                displayName: trans.__('SCSS'),\n                mime: 'text/x-scss',\n                extensions: ['scss'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/css');\n                    return legacy(m.sCSS);\n                }\n            },\n            {\n                name: 'Shell',\n                displayName: trans.__('Shell'),\n                alias: ['bash', 'sh', 'zsh'],\n                mime: ['text/x-sh', 'application/x-sh'],\n                extensions: ['sh', 'ksh', 'bash'],\n                filename: /^PKGBUILD$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/shell');\n                    return legacy(m.shell);\n                }\n            },\n            {\n                name: 'Sieve',\n                displayName: trans.__('Sieve'),\n                mime: 'application/sieve',\n                extensions: ['siv', 'sieve'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sieve');\n                    return legacy(m.sieve);\n                }\n            },\n            {\n                name: 'Smalltalk',\n                displayName: trans.__('Smalltalk'),\n                mime: 'text/x-stsrc',\n                extensions: ['st'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/smalltalk');\n                    return legacy(m.smalltalk);\n                }\n            },\n            {\n                name: 'Solr',\n                displayName: trans.__('Solr'),\n                mime: 'text/x-solr',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/solr');\n                    return legacy(m.solr);\n                }\n            },\n            {\n                name: 'SML',\n                displayName: trans.__('SML'),\n                mime: 'text/x-sml',\n                extensions: ['sml', 'sig', 'fun', 'smackspec'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mllike');\n                    return legacy(m.sml);\n                }\n            },\n            {\n                name: 'SPARQL',\n                displayName: trans.__('SPARQL'),\n                alias: ['sparul'],\n                mime: 'application/sparql-query',\n                extensions: ['rq', 'sparql'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sparql');\n                    return legacy(m.sparql);\n                }\n            },\n            {\n                name: 'Spreadsheet',\n                displayName: trans.__('Spreadsheet'),\n                alias: ['excel', 'formula'],\n                mime: 'text/x-spreadsheet',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/spreadsheet');\n                    return legacy(m.spreadsheet);\n                }\n            },\n            {\n                name: 'Squirrel',\n                displayName: trans.__('Squirrel'),\n                mime: 'text/x-squirrel',\n                extensions: ['nut'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.squirrel);\n                }\n            },\n            {\n                name: 'Stylus',\n                displayName: trans.__('Stylus'),\n                mime: 'text/x-styl',\n                extensions: ['styl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/stylus');\n                    return legacy(m.stylus);\n                }\n            },\n            {\n                name: 'Swift',\n                displayName: trans.__('Swift'),\n                mime: 'text/x-swift',\n                extensions: ['swift'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/swift');\n                    return legacy(m.swift);\n                }\n            },\n            {\n                name: 'sTeX',\n                displayName: trans.__('sTeX'),\n                mime: 'text/x-stex',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/stex');\n                    return legacy(m.stex);\n                }\n            },\n            {\n                name: 'LaTeX',\n                displayName: trans.__('LaTeX'),\n                alias: ['tex'],\n                mime: 'text/x-latex',\n                extensions: ['text', 'ltx', 'tex'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/stex');\n                    return legacy(m.stex);\n                }\n            },\n            {\n                name: 'SystemVerilog',\n                displayName: trans.__('SystemVerilog'),\n                mime: 'text/x-systemverilog',\n                extensions: ['v', 'sv', 'svh'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/verilog');\n                    return legacy(m.verilog);\n                }\n            },\n            {\n                name: 'Tcl',\n                displayName: trans.__('Tcl'),\n                mime: 'text/x-tcl',\n                extensions: ['tcl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/tcl');\n                    return legacy(m.tcl);\n                }\n            },\n            {\n                name: 'Textile',\n                displayName: trans.__('Textile'),\n                mime: 'text/x-textile',\n                extensions: ['textile'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/textile');\n                    return legacy(m.textile);\n                }\n            },\n            {\n                name: 'TiddlyWiki',\n                displayName: trans.__('TiddlyWiki'),\n                mime: 'text/x-tiddlywiki',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/tiddlywiki');\n                    return legacy(m.tiddlyWiki);\n                }\n            },\n            {\n                name: 'Tiki wiki',\n                displayName: trans.__('Tiki wiki'),\n                mime: 'text/tiki',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/tiki');\n                    return legacy(m.tiki);\n                }\n            },\n            {\n                name: 'TOML',\n                displayName: trans.__('TOML'),\n                mime: 'text/x-toml',\n                extensions: ['toml'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/toml');\n                    return legacy(m.toml);\n                }\n            },\n            {\n                name: 'troff',\n                displayName: trans.__('troff'),\n                mime: 'text/troff',\n                extensions: ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/troff');\n                    return legacy(m.troff);\n                }\n            },\n            {\n                name: 'TTCN',\n                displayName: trans.__('TTCN'),\n                mime: 'text/x-ttcn',\n                extensions: ['ttcn', 'ttcn3', 'ttcnpp'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ttcn');\n                    return legacy(m.ttcn);\n                }\n            },\n            {\n                name: 'TTCN_CFG',\n                displayName: trans.__('TTCN_CFG'),\n                mime: 'text/x-ttcn-cfg',\n                extensions: ['cfg'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ttcn-cfg');\n                    return legacy(m.ttcnCfg);\n                }\n            },\n            {\n                name: 'Turtle',\n                displayName: trans.__('Turtle'),\n                mime: 'text/turtle',\n                extensions: ['ttl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/turtle');\n                    return legacy(m.turtle);\n                }\n            },\n            {\n                name: 'Web IDL',\n                displayName: trans.__('Web IDL'),\n                mime: 'text/x-webidl',\n                extensions: ['webidl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/webidl');\n                    return legacy(m.webIDL);\n                }\n            },\n            {\n                name: 'VB.NET',\n                displayName: trans.__('VB.NET'),\n                mime: 'text/x-vb',\n                extensions: ['vb'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/vb');\n                    return legacy(m.vb);\n                }\n            },\n            {\n                name: 'VBScript',\n                displayName: trans.__('VBScript'),\n                mime: 'text/vbscript',\n                extensions: ['vbs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/vbscript');\n                    return legacy(m.vbScript);\n                }\n            },\n            {\n                name: 'Velocity',\n                displayName: trans.__('Velocity'),\n                mime: 'text/velocity',\n                extensions: ['vtl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/velocity');\n                    return legacy(m.velocity);\n                }\n            },\n            {\n                name: 'Verilog',\n                displayName: trans.__('Verilog'),\n                mime: 'text/x-verilog',\n                extensions: ['v'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/verilog');\n                    return legacy(m.verilog);\n                }\n            },\n            {\n                name: 'VHDL',\n                displayName: trans.__('VHDL'),\n                mime: 'text/x-vhdl',\n                extensions: ['vhd', 'vhdl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/vhdl');\n                    return legacy(m.vhdl);\n                }\n            },\n            {\n                name: 'XQuery',\n                displayName: trans.__('XQuery'),\n                mime: 'application/xquery',\n                extensions: ['xy', 'xquery'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/xquery');\n                    return legacy(m.xQuery);\n                }\n            },\n            {\n                name: 'Yacas',\n                displayName: trans.__('Yacas'),\n                mime: 'text/x-yacas',\n                extensions: ['ys'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/yacas');\n                    return legacy(m.yacas);\n                }\n            },\n            {\n                name: 'YAML',\n                displayName: trans.__('YAML'),\n                alias: ['yml'],\n                mime: ['text/x-yaml', 'text/yaml'],\n                extensions: ['yaml', 'yml'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/yaml');\n                    return legacy(m.yaml);\n                }\n            },\n            {\n                name: 'Z80',\n                displayName: trans.__('Z80'),\n                mime: 'text/x-z80',\n                extensions: ['z80'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/z80');\n                    return legacy(m.z80);\n                }\n            },\n            {\n                name: 'mscgen',\n                displayName: trans.__('mscgen'),\n                mime: 'text/x-mscgen',\n                extensions: ['mscgen', 'mscin', 'msc'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mscgen');\n                    return legacy(m.mscgen);\n                }\n            },\n            {\n                name: 'xu',\n                displayName: trans.__('xu'),\n                mime: 'text/x-xu',\n                extensions: ['xu'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mscgen');\n                    return legacy(m.xu);\n                }\n            },\n            {\n                name: 'msgenny',\n                displayName: trans.__('msgenny'),\n                mime: 'text/x-msgenny',\n                extensions: ['msgenny'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mscgen');\n                    return legacy(m.msgenny);\n                }\n            }\n        ];\n    }\n    EditorLanguageRegistry.getDefaultLanguages = getDefaultLanguages;\n})(EditorLanguageRegistry || (EditorLanguageRegistry = {}));\n//# sourceMappingURL=language.js.map","/* eslint-disable @typescript-eslint/ban-types */\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { insertNewlineAndIndent } from '@codemirror/commands';\nimport { ensureSyntaxTree } from '@codemirror/language';\nimport { Compartment, EditorSelection, EditorState, Prec } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { UUID } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { ExtensionsHandler } from './extension';\nimport { EditorLanguageRegistry } from './language';\n/**\n * The class name added to CodeMirrorWidget instances.\n */\nconst EDITOR_CLASS = 'jp-CodeMirrorEditor';\n/**\n * The key code for the up arrow key.\n */\nconst UP_ARROW = 38;\n/**\n * The key code for the down arrow key.\n */\nconst DOWN_ARROW = 40;\n/**\n * CodeMirror editor.\n */\nexport class CodeMirrorEditor {\n    /**\n     * Construct a CodeMirror editor.\n     */\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        /**\n         * A signal emitted when either the top or bottom edge is requested.\n         */\n        this.edgeRequested = new Signal(this);\n        this._isDisposed = false;\n        this._language = new Compartment();\n        this._uuid = '';\n        this._languages = (_a = options.languages) !== null && _a !== void 0 ? _a : new EditorLanguageRegistry();\n        this._configurator =\n            (_d = (_b = options.extensionsRegistry) === null || _b === void 0 ? void 0 : _b.createNew({\n                ...options,\n                inline: (_c = options.inline) !== null && _c !== void 0 ? _c : false\n            })) !== null && _d !== void 0 ? _d : new ExtensionsHandler();\n        const host = (this.host = options.host);\n        host.classList.add(EDITOR_CLASS);\n        host.classList.add('jp-Editor');\n        host.addEventListener('focus', this, true);\n        host.addEventListener('blur', this, true);\n        host.addEventListener('scroll', this, true);\n        this._uuid = (_e = options.uuid) !== null && _e !== void 0 ? _e : UUID.uuid4();\n        const model = (this._model = options.model);\n        // Default keydown handler - it will have low priority\n        const onKeyDown = EditorView.domEventHandlers({\n            keydown: (event, view) => {\n                return this.onKeydown(event);\n            }\n        });\n        const updateListener = EditorView.updateListener.of((update) => {\n            this._onDocChanged(update);\n        });\n        this._editor = Private.createEditor(host, this._configurator, [\n            // We need to set the order to high, otherwise the keybinding for ArrowUp/ArrowDown\n            // will process the event shunting our edge detection code.\n            Prec.high(onKeyDown),\n            updateListener,\n            // Initialize with empty extension\n            this._language.of([]),\n            ...((_f = options.extensions) !== null && _f !== void 0 ? _f : [])\n        ], model.sharedModel.source);\n        this._onMimeTypeChanged();\n        this._onCursorActivity();\n        this._configurator.configChanged.connect(this.onConfigChanged, this);\n        model.mimeTypeChanged.connect(this._onMimeTypeChanged, this);\n    }\n    /**\n     * The uuid of this editor;\n     */\n    get uuid() {\n        return this._uuid;\n    }\n    set uuid(value) {\n        this._uuid = value;\n    }\n    /**\n     * Get the codemirror editor wrapped by the editor.\n     */\n    get editor() {\n        return this._editor;\n    }\n    /**\n     * Get the codemirror doc wrapped by the widget.\n     */\n    get doc() {\n        return this._editor.state.doc;\n    }\n    /**\n     * Get the number of lines in the editor.\n     */\n    get lineCount() {\n        return this.doc.lines;\n    }\n    /**\n     * Returns a model for this editor.\n     */\n    get model() {\n        return this._model;\n    }\n    /**\n     * The height of a line in the editor in pixels.\n     */\n    get lineHeight() {\n        return this._editor.defaultLineHeight;\n    }\n    /**\n     * The widget of a character in the editor in pixels.\n     */\n    get charWidth() {\n        return this._editor.defaultCharacterWidth;\n    }\n    /**\n     * Tests whether the editor is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources held by the widget.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this.host.removeEventListener('focus', this, true);\n        this.host.removeEventListener('blur', this, true);\n        this.host.removeEventListener('scroll', this, true);\n        this._configurator.dispose();\n        Signal.clearData(this);\n        this.editor.destroy();\n    }\n    /**\n     * Get a config option for the editor.\n     */\n    getOption(option) {\n        return this._configurator.getOption(option);\n    }\n    /**\n     * Whether the option exists or not.\n     */\n    hasOption(option) {\n        return this._configurator.hasOption(option);\n    }\n    /**\n     * Set a config option for the editor.\n     */\n    setOption(option, value) {\n        this._configurator.setOption(option, value);\n    }\n    /**\n     * Set config options for the editor.\n     *\n     * This method is preferred when setting several options. The\n     * options are set within an operation, which only performs\n     * the costly update at the end, and not after every option\n     * is set.\n     */\n    setOptions(options) {\n        this._configurator.setOptions(options);\n    }\n    /**\n     * Inject an extension into the editor\n     *\n     * @alpha\n     * @experimental\n     * @param ext CodeMirror 6 extension\n     */\n    injectExtension(ext) {\n        this._configurator.injectExtension(this._editor, ext);\n    }\n    /**\n     * Returns the content for the given line number.\n     */\n    getLine(line) {\n        // TODO: CM6 remove +1 when CM6 first line number has propagated\n        line = line + 1;\n        return line <= this.doc.lines ? this.doc.line(line).text : undefined;\n    }\n    /**\n     * Find an offset for the given position.\n     */\n    getOffsetAt(position) {\n        // TODO: CM6 remove +1 when CM6 first line number has propagated\n        return this.doc.line(position.line + 1).from + position.column;\n    }\n    /**\n     * Find a position for the given offset.\n     */\n    getPositionAt(offset) {\n        // TODO: CM6 remove -1 when CM6 first line number has propagated\n        const line = this.doc.lineAt(offset);\n        return { line: line.number - 1, column: offset - line.from };\n    }\n    /**\n     * Undo one edit (if any undo events are stored).\n     */\n    undo() {\n        this.model.sharedModel.undo();\n    }\n    /**\n     * Redo one undone edit.\n     */\n    redo() {\n        this.model.sharedModel.redo();\n    }\n    /**\n     * Clear the undo history.\n     */\n    clearHistory() {\n        this.model.sharedModel.clearUndoHistory();\n    }\n    /**\n     * Brings browser focus to this editor text.\n     */\n    focus() {\n        this._editor.focus();\n    }\n    /**\n     * Test whether the editor has keyboard focus.\n     */\n    hasFocus() {\n        return this._editor.hasFocus;\n    }\n    /**\n     * Explicitly blur the editor.\n     */\n    blur() {\n        this._editor.contentDOM.blur();\n    }\n    get state() {\n        return this._editor.state;\n    }\n    firstLine() {\n        // TODO: return 1 when CM6 first line number has propagated\n        return 0;\n    }\n    lastLine() {\n        return this.doc.lines - 1;\n    }\n    cursorCoords(where, mode) {\n        const selection = this.state.selection.main;\n        const pos = where ? selection.from : selection.to;\n        const rect = this.editor.coordsAtPos(pos);\n        return rect;\n    }\n    getRange(from, to, separator) {\n        const fromOffset = this.getOffsetAt(this._toPosition(from));\n        const toOffset = this.getOffsetAt(this._toPosition(to));\n        return this.state.sliceDoc(fromOffset, toOffset);\n    }\n    /**\n     * Reveal the given position in the editor.\n     */\n    revealPosition(position) {\n        const offset = this.getOffsetAt(position);\n        this._editor.dispatch({\n            effects: EditorView.scrollIntoView(offset)\n        });\n    }\n    /**\n     * Reveal the given selection in the editor.\n     */\n    revealSelection(selection) {\n        const start = this.getOffsetAt(selection.start);\n        const end = this.getOffsetAt(selection.end);\n        this._editor.dispatch({\n            effects: EditorView.scrollIntoView(EditorSelection.range(start, end))\n        });\n    }\n    /**\n     * Get the window coordinates given a cursor position.\n     */\n    getCoordinateForPosition(position) {\n        const offset = this.getOffsetAt(position);\n        const rect = this.editor.coordsAtPos(offset);\n        return rect;\n    }\n    /**\n     * Get the cursor position given window coordinates.\n     *\n     * @param coordinate - The desired coordinate.\n     *\n     * @returns The position of the coordinates, or null if not\n     *   contained in the editor.\n     */\n    getPositionForCoordinate(coordinate) {\n        const offset = this.editor.posAtCoords({\n            x: coordinate.left,\n            y: coordinate.top\n        });\n        return this.getPositionAt(offset) || null;\n    }\n    /**\n     * Returns the primary position of the cursor, never `null`.\n     */\n    getCursorPosition() {\n        const offset = this.state.selection.main.head;\n        return this.getPositionAt(offset);\n    }\n    /**\n     * Set the primary position of the cursor.\n     *\n     * #### Notes\n     * This will remove any secondary cursors.\n     *\n     * @deprecated options bias and origin are not used\n     */\n    setCursorPosition(position, options = {}) {\n        const offset = this.getOffsetAt(position);\n        this.editor.dispatch({\n            selection: { anchor: offset },\n            scrollIntoView: options.scroll === false ? false : true\n        });\n        // If the editor does not have focus, this cursor change\n        // will get screened out in _onCursorsChanged(). Make an\n        // exception for this method.\n        if (!this.editor.hasFocus) {\n            this.model.selections.set(this.uuid, this.getSelections());\n        }\n    }\n    /**\n     * Returns the primary selection, never `null`.\n     */\n    getSelection() {\n        return this.getSelections()[0];\n    }\n    /**\n     * Set the primary selection. This will remove any secondary cursors.\n     */\n    setSelection(selection) {\n        this.setSelections([selection]);\n    }\n    /**\n     * Gets the selections for all the cursors, never `null` or empty.\n     */\n    getSelections() {\n        const selections = this.state.selection.ranges; //= [{anchor: number, head: number}]\n        if (selections.length > 0) {\n            const sel = selections.map(r => ({\n                anchor: this._toCodeMirrorPosition(this.getPositionAt(r.from)),\n                head: this._toCodeMirrorPosition(this.getPositionAt(r.to))\n            }));\n            return sel.map(selection => this._toSelection(selection));\n        }\n        const cursor = this._toCodeMirrorPosition(this.getPositionAt(this.state.selection.main.head));\n        const selection = this._toSelection({ anchor: cursor, head: cursor });\n        return [selection];\n    }\n    /**\n     * Sets the selections for all the cursors, should not be empty.\n     * Cursors will be removed or added, as necessary.\n     * Passing an empty array resets a cursor position to the start of a document.\n     */\n    setSelections(selections) {\n        const sel = selections.length\n            ? selections.map(r => EditorSelection.range(this.getOffsetAt(r.start), this.getOffsetAt(r.end)))\n            : [EditorSelection.range(0, 0)];\n        this.editor.dispatch({ selection: EditorSelection.create(sel) });\n    }\n    /**\n     * Replaces the current selection with the given text.\n     *\n     * Behaviour for multiple selections is undefined.\n     *\n     * @param text The text to be inserted.\n     */\n    replaceSelection(text) {\n        const firstSelection = this.getSelections()[0];\n        this.model.sharedModel.updateSource(this.getOffsetAt(firstSelection.start), this.getOffsetAt(firstSelection.end), text);\n        const newPosition = this.getPositionAt(this.getOffsetAt(firstSelection.start) + text.length);\n        this.setSelection({ start: newPosition, end: newPosition });\n    }\n    /**\n     * Get a list of tokens for the current editor text content.\n     */\n    getTokens() {\n        const tokens = [];\n        const tree = ensureSyntaxTree(this.state, this.doc.length);\n        if (tree) {\n            tree.iterate({\n                enter: (ref) => {\n                    if (ref.node.firstChild === null) {\n                        tokens.push({\n                            value: this.state.sliceDoc(ref.from, ref.to),\n                            offset: ref.from,\n                            type: ref.name\n                        });\n                    }\n                    return true;\n                }\n            });\n        }\n        return tokens;\n    }\n    /**\n     * Get the token at a given editor position.\n     */\n    getTokenAt(offset) {\n        const tree = ensureSyntaxTree(this.state, offset);\n        let token = null;\n        if (tree) {\n            tree.iterate({\n                enter: (ref) => {\n                    // If a token has already been discovered, stop iterating.\n                    if (token) {\n                        return false;\n                    }\n                    // If it is not a leaf, keep iterating.\n                    if (ref.node.firstChild) {\n                        return true;\n                    }\n                    // If the relevant leaf token has been found, stop iterating.\n                    if (offset >= ref.from && offset <= ref.to) {\n                        token = {\n                            value: this.state.sliceDoc(ref.from, ref.to),\n                            offset: ref.from,\n                            type: ref.name\n                        };\n                        return false;\n                    }\n                    return true;\n                }\n            });\n        }\n        return token || { offset, value: '' };\n    }\n    /**\n     * Get the token a the cursor position.\n     */\n    getTokenAtCursor() {\n        return this.getTokenAt(this.state.selection.main.head);\n    }\n    /**\n     * Insert a new indented line at the current cursor position.\n     */\n    newIndentedLine() {\n        insertNewlineAndIndent({\n            state: this.state,\n            dispatch: this.editor.dispatch\n        });\n    }\n    /**\n     * Execute a codemirror command on the editor.\n     *\n     * @param command - The name of the command to execute.\n     */\n    execCommand(command) {\n        command(this.editor);\n    }\n    onConfigChanged(configurator, changes) {\n        configurator.reconfigureExtensions(this._editor, changes);\n        // when customStyles change and the editor is not initialized\n        if (changes['customStyles'] && !changes['fontSize']) {\n            // update the state to change the gutter height\n            this.editor.setState(this.editor.state);\n        }\n    }\n    /**\n     * Handle keydown events from the editor.\n     */\n    onKeydown(event) {\n        const position = this.state.selection.main.head;\n        if (position === 0 && event.keyCode === UP_ARROW) {\n            if (!event.shiftKey) {\n                this.edgeRequested.emit('top');\n            }\n            return false;\n        }\n        const line = this.doc.lineAt(position).number;\n        if (line === 1 && event.keyCode === UP_ARROW) {\n            if (!event.shiftKey) {\n                this.edgeRequested.emit('topLine');\n            }\n            return false;\n        }\n        const length = this.doc.length;\n        if (position === length && event.keyCode === DOWN_ARROW) {\n            if (!event.shiftKey) {\n                this.edgeRequested.emit('bottom');\n            }\n            return false;\n        }\n        return false;\n    }\n    /**\n     * Handles a mime type change.\n     */\n    _onMimeTypeChanged() {\n        // TODO: should we provide a hook for when the mode is done being set?\n        this._languages\n            .getLanguage(this._model.mimeType)\n            .then(language => {\n            var _a;\n            this._editor.dispatch({\n                effects: this._language.reconfigure((_a = language === null || language === void 0 ? void 0 : language.support) !== null && _a !== void 0 ? _a : [])\n            });\n        })\n            .catch(reason => {\n            console.log(`Failed to load language for '${this._model.mimeType}'.`, reason);\n            this._editor.dispatch({\n                effects: this._language.reconfigure([])\n            });\n        });\n    }\n    /**\n     * Handles a cursor activity event.\n     */\n    _onCursorActivity() {\n        // Only add selections if the editor has focus. This avoids unwanted\n        // triggering of cursor activity due to collaborator actions.\n        if (this._editor.hasFocus) {\n            const selections = this.getSelections();\n            this.model.selections.set(this.uuid, selections);\n        }\n    }\n    /**\n     * Converts a code mirror selection to an editor selection.\n     */\n    _toSelection(selection) {\n        return {\n            uuid: this.uuid,\n            start: this._toPosition(selection.anchor),\n            end: this._toPosition(selection.head)\n        };\n    }\n    /**\n     * Convert a code mirror position to an editor position.\n     */\n    _toPosition(position) {\n        return {\n            line: position.line,\n            column: position.ch\n        };\n    }\n    /**\n     * Convert an editor position to a code mirror position.\n     */\n    _toCodeMirrorPosition(position) {\n        return {\n            line: position.line,\n            ch: position.column\n        };\n    }\n    /**\n     * Handles document changes.\n     */\n    _onDocChanged(update) {\n        if (update.transactions.length && update.transactions[0].selection) {\n            this._onCursorActivity();\n        }\n    }\n    /**\n     * Handle the DOM events for the editor.\n     *\n     * @param event - The DOM event sent to the editor.\n     *\n     * #### Notes\n     * This method implements the DOM `EventListener` interface and is\n     * called in response to events on the editor's DOM node. It should\n     * not be called directly by user code.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'focus':\n                this._evtFocus(event);\n                break;\n            case 'blur':\n                this._evtBlur(event);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * Handle `focus` events for the editor.\n     */\n    _evtFocus(event) {\n        this.host.classList.add('jp-mod-focused');\n        // Update the selections on editor gaining focus because\n        // the onCursorActivity function filters usual cursor events\n        // based on the editor's focus.\n        this._onCursorActivity();\n    }\n    /**\n     * Handle `blur` events for the editor.\n     */\n    _evtBlur(event) {\n        this.host.classList.remove('jp-mod-focused');\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    function createEditor(host, editorConfig, additionalExtensions, doc) {\n        const extensions = editorConfig.getInitialExtensions();\n        extensions.push(...additionalExtensions);\n        const view = new EditorView({\n            state: EditorState.create({\n                doc,\n                extensions\n            }),\n            parent: host\n        });\n        return view;\n    }\n    Private.createEditor = createEditor;\n})(Private || (Private = {}));\n//# sourceMappingURL=editor.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { keymap } from '@codemirror/view';\nimport { EditorExtensionRegistry } from './extension';\nimport { CodeMirrorEditor } from './editor';\nimport { EditorLanguageRegistry } from './language';\n/**\n * CodeMirror editor factory.\n */\nexport class CodeMirrorEditorFactory {\n    /**\n     * Construct an IEditorFactoryService for CodeMirrorEditors.\n     */\n    constructor(options = {}) {\n        var _a, _b, _c;\n        /**\n         * Create a new editor for inline code.\n         */\n        this.newInlineEditor = (options) => {\n            options.host.dataset.type = 'inline';\n            return this.newEditor({\n                ...options,\n                config: { ...this.inlineCodeMirrorConfig, ...(options.config || {}) },\n                inline: true\n            });\n        };\n        /**\n         * Create a new editor for a full document.\n         */\n        this.newDocumentEditor = (options) => {\n            var _a, _b;\n            options.host.dataset.type = 'document';\n            return this.newEditor({\n                ...options,\n                config: { ...this.documentCodeMirrorConfig, ...((_a = options.config) !== null && _a !== void 0 ? _a : {}) },\n                inline: false,\n                extensions: [\n                    keymap.of([\n                        {\n                            key: 'Shift-Enter',\n                            run: (target) => {\n                                return true;\n                            }\n                        }\n                    ])\n                ].concat((_b = options.extensions) !== null && _b !== void 0 ? _b : [])\n            });\n        };\n        this.languages = (_a = options.languages) !== null && _a !== void 0 ? _a : new EditorLanguageRegistry();\n        this.extensions = (_b = options.extensions) !== null && _b !== void 0 ? _b : new EditorExtensionRegistry();\n        this.translator = (_c = options.translator) !== null && _c !== void 0 ? _c : nullTranslator;\n        this.inlineCodeMirrorConfig = {\n            searchWithCM: true\n        };\n        this.documentCodeMirrorConfig = {\n            lineNumbers: true,\n            scrollPastEnd: true\n        };\n    }\n    /**\n     * Create a new editor\n     *\n     * @param options Editor options\n     * @returns The editor\n     */\n    newEditor(options) {\n        const editor = new CodeMirrorEditor({\n            extensionsRegistry: this.extensions,\n            languages: this.languages,\n            translator: this.translator,\n            ...options\n        });\n        return editor;\n    }\n}\n//# sourceMappingURL=factory.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { IEditorMimeTypeService } from '@jupyterlab/codeeditor';\nimport { PathExt } from '@jupyterlab/coreutils';\n/**\n * The mime type service for CodeMirror.\n */\nexport class CodeMirrorMimeTypeService {\n    constructor(languages) {\n        this.languages = languages;\n    }\n    /**\n     * Returns a mime type for the given language info.\n     *\n     * #### Notes\n     * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n     * There may be more than one mime type, but only the first one will be returned.\n     * To access all mime types, use `IEditorLanguageRegistry` instead.\n     */\n    getMimeTypeByLanguage(info) {\n        var _a;\n        const ext = info.file_extension || '';\n        const mode = this.languages.findBest(info.codemirror_mode || {\n            mimetype: info.mimetype,\n            name: info.name,\n            ext: [ext.split('.').slice(-1)[0]]\n        });\n        return mode\n            ? Array.isArray(mode.mime)\n                ? (_a = mode.mime[0]) !== null && _a !== void 0 ? _a : IEditorMimeTypeService.defaultMimeType\n                : mode.mime\n            : IEditorMimeTypeService.defaultMimeType;\n    }\n    /**\n     * Returns a mime type for the given file path.\n     *\n     * #### Notes\n     * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n     * There may be more than one mime type, but only the first one will be returned.\n     * To access all mime types, use `IEditorLanguageRegistry` instead.\n     */\n    getMimeTypeByFilePath(path) {\n        var _a;\n        const ext = PathExt.extname(path);\n        if (ext === '.ipy') {\n            return 'text/x-python';\n        }\n        else if (ext === '.md') {\n            return 'text/x-ipythongfm';\n        }\n        const mode = this.languages.findByFileName(path);\n        return mode\n            ? Array.isArray(mode.mime)\n                ? (_a = mode.mime[0]) !== null && _a !== void 0 ? _a : IEditorMimeTypeService.defaultMimeType\n                : mode.mime\n            : IEditorMimeTypeService.defaultMimeType;\n    }\n}\n//# sourceMappingURL=mimetype.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { EditorSelection, StateEffect, StateField } from '@codemirror/state';\nimport { Decoration, EditorView } from '@codemirror/view';\nimport { GenericSearchProvider, TextSearchEngine } from '@jupyterlab/documentsearch';\nimport { Signal } from '@lumino/signaling';\n/**\n * Search provider for editors.\n */\nexport class EditorSearchProvider {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /**\n         * Current match index\n         */\n        this.currentIndex = null;\n        /**\n         * Current search query\n         */\n        this.query = null;\n        this._isActive = true;\n        this._inSelection = null;\n        this._isDisposed = false;\n        this._cmHandler = null;\n        this.currentIndex = null;\n        this._stateChanged = new Signal(this);\n    }\n    /**\n     * CodeMirror search highlighter\n     */\n    get cmHandler() {\n        if (!this._cmHandler) {\n            this._cmHandler = new CodeMirrorSearchHighlighter(this.editor);\n        }\n        return this._cmHandler;\n    }\n    /**\n     * Changed signal to be emitted when search matches change.\n     */\n    get stateChanged() {\n        return this._stateChanged;\n    }\n    /**\n     * Current match index\n     */\n    get currentMatchIndex() {\n        return this.isActive ? this.currentIndex : null;\n    }\n    /**\n     * Whether the cell search is active.\n     *\n     * This is used when applying search only on selected cells.\n     */\n    get isActive() {\n        return this._isActive;\n    }\n    /**\n     * Whether the search provider is disposed or not.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Number of matches in the cell.\n     */\n    get matchesCount() {\n        return this.isActive ? this.cmHandler.matches.length : 0;\n    }\n    /**\n     * Clear currently highlighted match\n     */\n    clearHighlight() {\n        this.currentIndex = null;\n        this.cmHandler.clearHighlight();\n        return Promise.resolve();\n    }\n    /**\n     * Dispose the search provider\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        Signal.clearData(this);\n        if (this.isActive) {\n            this.endQuery().catch(reason => {\n                console.error(`Failed to end search query on cells.`, reason);\n            });\n        }\n    }\n    /**\n     * Set `isActive` status.\n     *\n     * #### Notes\n     * It will start or end the search\n     *\n     * @param v New value\n     */\n    async setIsActive(v) {\n        if (this._isActive === v) {\n            return;\n        }\n        this._isActive = v;\n        if (this._isActive) {\n            if (this.query !== null) {\n                await this.startQuery(this.query, this.filters);\n            }\n        }\n        else {\n            await this.endQuery();\n        }\n    }\n    /**\n     * Set whether search should be limited to specified text selection.\n     */\n    async setSearchSelection(selection) {\n        if (this._inSelection === selection) {\n            return;\n        }\n        this._inSelection = selection;\n        await this.updateCodeMirror(this.model.sharedModel.getSource());\n        this._stateChanged.emit();\n    }\n    /**\n     * Set whether user selection should be protected from modifications.\n     *\n     * If disabled, the selection will be updated on search and on editor focus\n     * to cover the current match. We need to protect selection from modifications\n     * for both: search in text and search in cells; since `setSearchSelection`\n     * is only telling us about search in text, we need to have an additional\n     * way to signal that either search in text or in cells is active, or for\n     * any other reason selection range should be protected.\n     */\n    setProtectSelection(v) {\n        this.cmHandler.protectSelection = v;\n    }\n    /**\n     * Initialize the search using the provided options. Should update the UI\n     * to highlight all matches and \"select\" the first match.\n     *\n     * @param query A RegExp to be use to perform the search\n     * @param filters Filter parameters to pass to provider\n     */\n    async startQuery(query, filters) {\n        this.query = query;\n        this.filters = filters;\n        // Search input\n        const content = this.model.sharedModel.getSource();\n        await this.updateCodeMirror(content);\n        this.model.sharedModel.changed.connect(this.onSharedModelChanged, this);\n    }\n    /**\n     * Stop the search and clean any UI elements.\n     */\n    async endQuery() {\n        await this.clearHighlight();\n        await this.cmHandler.endQuery();\n        this.currentIndex = null;\n    }\n    /**\n     * Highlight the next match.\n     *\n     * @returns The next match if there is one.\n     */\n    async highlightNext(loop = true, options) {\n        if (this.matchesCount === 0 || !this.isActive) {\n            this.currentIndex = null;\n        }\n        else {\n            let match = await this.cmHandler.highlightNext(options);\n            if (match) {\n                this.currentIndex = this.cmHandler.currentIndex;\n            }\n            else {\n                // Note: the loop logic is only used in single-editor (e.g. file editor)\n                // provider sub-classes, notebook has its own loop logic and ignores\n                // `currentIndex` as set here.\n                this.currentIndex = loop ? 0 : null;\n            }\n            return match;\n        }\n        return Promise.resolve(this.getCurrentMatch());\n    }\n    /**\n     * Highlight the previous match.\n     *\n     * @returns The previous match if there is one.\n     */\n    async highlightPrevious(loop = true, options) {\n        if (this.matchesCount === 0 || !this.isActive) {\n            this.currentIndex = null;\n        }\n        else {\n            let match = await this.cmHandler.highlightPrevious(options);\n            if (match) {\n                this.currentIndex = this.cmHandler.currentIndex;\n            }\n            else {\n                this.currentIndex = loop ? this.matchesCount - 1 : null;\n            }\n            return match;\n        }\n        return Promise.resolve(this.getCurrentMatch());\n    }\n    /**\n     * Replace the currently selected match with the provided text.\n     *\n     * If no match is selected, it won't do anything.\n     *\n     * The caller of this method is expected to call `highlightNext` if after\n     * calling `replaceCurrentMatch()` attribute `this.currentIndex` is null.\n     * It is necessary to let the caller handle highlighting because this\n     * method is used in composition pattern (search engine of notebook cells)\n     * and highlighting on the composer (notebook) level needs to switch to next\n     * engine (cell) with matches.\n     *\n     * @param newText The replacement text.\n     * @returns Whether a replace occurred.\n     */\n    replaceCurrentMatch(newText, loop, options) {\n        if (!this.isActive) {\n            return Promise.resolve(false);\n        }\n        if (this.currentIndex !== null &&\n            this.currentIndex < this.cmHandler.matches.length) {\n            const match = this.getCurrentMatch();\n            if (!match) {\n                this.currentIndex = null;\n            }\n            else {\n                const substitutedText = (options === null || options === void 0 ? void 0 : options.regularExpression)\n                    ? match.text.replace(this.query, newText)\n                    : newText;\n                const insertText = (options === null || options === void 0 ? void 0 : options.preserveCase)\n                    ? GenericSearchProvider.preserveCase(match.text, substitutedText)\n                    : substitutedText;\n                this.model.sharedModel.updateSource(match.position, match.position + match.text.length, insertText);\n                // Regenerate the match list, then iterate through it.\n                return new Promise((resolve, reject) => {\n                    this.updateCodeMirror(this.model.sharedModel.getSource())\n                        .then(() => {\n                        const allMatches = this.cmHandler.matches;\n                        const positionAfterReplacement = match.position + insertText.length;\n                        let nextMatchFound = false;\n                        for (let matchIdx = this.currentIndex || 0; matchIdx < allMatches.length; matchIdx++) {\n                            if (allMatches[matchIdx].position >= positionAfterReplacement) {\n                                this.currentIndex = matchIdx;\n                                nextMatchFound = true;\n                                break;\n                            }\n                            // Move the highlight forward from the previous match, not looping.\n                            void this.highlightNext(false, { from: 'previous-match' });\n                        }\n                        if (!nextMatchFound) {\n                            this.currentIndex = null; // No more matches in this string\n                        }\n                        resolve(true);\n                    })\n                        .catch(err => {\n                        const errorMessage = `Failed to regenerate match list: ${err}`;\n                        console.error(errorMessage);\n                        reject(errorMessage);\n                    });\n                });\n            }\n        }\n        return Promise.resolve(false);\n    }\n    /**\n     * Replace all matches in the cell source with the provided text\n     *\n     * @param newText The replacement text.\n     * @returns Whether a replace occurred.\n     */\n    replaceAllMatches(newText, options) {\n        if (!this.isActive) {\n            return Promise.resolve(false);\n        }\n        let occurred = this.cmHandler.matches.length > 0;\n        let src = this.model.sharedModel.getSource();\n        let lastEnd = 0;\n        const finalSrc = this.cmHandler.matches.reduce((agg, match) => {\n            const start = match.position;\n            const end = start + match.text.length;\n            const substitutedText = (options === null || options === void 0 ? void 0 : options.regularExpression)\n                ? match.text.replace(this.query, newText)\n                : newText;\n            const insertText = (options === null || options === void 0 ? void 0 : options.preserveCase)\n                ? GenericSearchProvider.preserveCase(match.text, substitutedText)\n                : substitutedText;\n            const newStep = `${agg}${src.slice(lastEnd, start)}${insertText}`;\n            lastEnd = end;\n            return newStep;\n        }, '');\n        if (occurred) {\n            this.cmHandler.matches = [];\n            this.currentIndex = null;\n            this.model.sharedModel.setSource(`${finalSrc}${src.slice(lastEnd)}`);\n        }\n        return Promise.resolve(occurred);\n    }\n    /**\n     * Get the current match if it exists.\n     *\n     * @returns The current match\n     */\n    getCurrentMatch() {\n        if (this.currentIndex === null) {\n            return undefined;\n        }\n        else {\n            let match = undefined;\n            if (this.currentIndex < this.cmHandler.matches.length) {\n                match = this.cmHandler.matches[this.currentIndex];\n            }\n            return match;\n        }\n    }\n    /**\n     * Callback on source change\n     *\n     * @param emitter Source of the change\n     * @param changes Source change\n     */\n    async onSharedModelChanged(emitter, changes) {\n        if (changes.sourceChange) {\n            await this.updateCodeMirror(emitter.getSource());\n            this._stateChanged.emit();\n        }\n    }\n    /**\n     * Update matches\n     */\n    async updateCodeMirror(content) {\n        if (this.query !== null && this.isActive) {\n            const allMatches = await TextSearchEngine.search(this.query, content);\n            if (this._inSelection) {\n                const editor = this.editor;\n                const start = editor.getOffsetAt(this._inSelection.start);\n                const end = editor.getOffsetAt(this._inSelection.end);\n                this.cmHandler.matches = allMatches.filter(match => match.position >= start && match.position <= end);\n                // A special case to always have a current match when in line selection mode.\n                if (this.cmHandler.currentIndex === null &&\n                    this.cmHandler.matches.length > 0) {\n                    await this.cmHandler.highlightNext({\n                        from: 'selection',\n                        select: false,\n                        scroll: false\n                    });\n                }\n                this.currentIndex = this.cmHandler.currentIndex;\n            }\n            else {\n                this.cmHandler.matches = allMatches;\n            }\n        }\n        else {\n            this.cmHandler.matches = [];\n        }\n    }\n}\n/**\n * Helper class to highlight texts in a code mirror editor.\n *\n * Highlighted texts (aka `matches`) must be provided through\n * the `matches` attributes.\n *\n * **NOTES:**\n * - to retain the selection visibility `drawSelection` extension is needed.\n * - highlighting starts from the cursor (if editor is focused and `from` is set\n *   to `'auto'`, cursor moved, or `from` argument is set to `'selection'` or\n *   `'selection-start'`), or from last \"current\" match otherwise.\n * - `currentIndex` is the (readonly) source of truth for the current match.\n */\nexport class CodeMirrorSearchHighlighter {\n    /**\n     * Constructor\n     *\n     * @param editor The CodeMirror editor\n     */\n    constructor(editor) {\n        this._current = null;\n        this._cm = editor;\n        this._matches = new Array();\n        this._currentIndex = null;\n        this._highlightEffect = StateEffect.define({\n            map: (value, mapping) => {\n                const transform = (v) => ({\n                    text: v.text,\n                    position: mapping.mapPos(v.position)\n                });\n                return {\n                    matches: value.matches.map(transform),\n                    currentMatch: value.currentMatch\n                        ? transform(value.currentMatch)\n                        : null\n                };\n            }\n        });\n        this._highlightMark = Decoration.mark({ class: 'cm-searching' });\n        this._currentMark = Decoration.mark({ class: 'jp-current-match' });\n        this._highlightField = StateField.define({\n            create: () => {\n                return Decoration.none;\n            },\n            update: (highlights, transaction) => {\n                highlights = highlights.map(transaction.changes);\n                for (let ef of transaction.effects) {\n                    if (ef.is(this._highlightEffect)) {\n                        const e = ef;\n                        if (e.value.matches.length) {\n                            // Note: nesting will vary; sometimes `.cm-searching` will be\n                            // inside `.jp-current-match`, sometime the other way round.\n                            highlights = highlights.update({\n                                add: e.value.matches.map(m => this._highlightMark.range(m.position, m.position + m.text.length)),\n                                // filter out old marks\n                                filter: () => false\n                            });\n                            highlights = highlights.update({\n                                add: e.value.currentMatch\n                                    ? [\n                                        this._currentMark.range(e.value.currentMatch.position, e.value.currentMatch.position +\n                                            e.value.currentMatch.text.length)\n                                    ]\n                                    : []\n                            });\n                        }\n                        else {\n                            highlights = Decoration.none;\n                        }\n                    }\n                }\n                return highlights;\n            },\n            provide: f => EditorView.decorations.from(f)\n        });\n        this._domEventHandlers = EditorView.domEventHandlers({\n            focus: () => {\n                // Set cursor on active match when editor gets focused.\n                this._selectCurrentMatch();\n            }\n        });\n    }\n    /**\n     * The current index of the selected match.\n     */\n    get currentIndex() {\n        return this._currentIndex;\n    }\n    /**\n     * The list of matches\n     */\n    get matches() {\n        return this._matches;\n    }\n    set matches(v) {\n        this._matches = v;\n        if (this._currentIndex !== null &&\n            this._currentIndex > this._matches.length) {\n            this._currentIndex = this._matches.length > 0 ? 0 : null;\n        }\n        this._highlightCurrentMatch({ select: false });\n    }\n    /**\n     * Whether the cursor/selection should not be modified.\n     */\n    get protectSelection() {\n        return this._protectSelection;\n    }\n    set protectSelection(v) {\n        this._protectSelection = v;\n    }\n    /**\n     * Clear all highlighted matches\n     */\n    clearHighlight() {\n        this._currentIndex = null;\n        this._highlightCurrentMatch();\n    }\n    /**\n     * Clear the highlighted matches.\n     */\n    endQuery() {\n        this._currentIndex = null;\n        this._matches = [];\n        if (this._cm) {\n            this._cm.editor.dispatch({\n                effects: this._highlightEffect.of({ matches: [], currentMatch: null })\n            });\n        }\n        return Promise.resolve();\n    }\n    /**\n     * Highlight the next match\n     *\n     * @returns The next match if available\n     */\n    highlightNext(options) {\n        var _a;\n        this._currentIndex = this._findNext(false, (_a = options === null || options === void 0 ? void 0 : options.from) !== null && _a !== void 0 ? _a : 'auto');\n        this._highlightCurrentMatch(options);\n        return Promise.resolve(this._currentIndex !== null\n            ? this._matches[this._currentIndex]\n            : undefined);\n    }\n    /**\n     * Highlight the previous match\n     *\n     * @returns The previous match if available\n     */\n    highlightPrevious(options) {\n        var _a;\n        this._currentIndex = this._findNext(true, (_a = options === null || options === void 0 ? void 0 : options.from) !== null && _a !== void 0 ? _a : 'auto');\n        this._highlightCurrentMatch(options);\n        return Promise.resolve(this._currentIndex !== null\n            ? this._matches[this._currentIndex]\n            : undefined);\n    }\n    /**\n     * Set the editor\n     *\n     * @param editor Editor\n     */\n    setEditor(editor) {\n        if (this._cm) {\n            throw new Error('CodeMirrorEditor already set.');\n        }\n        else {\n            this._cm = editor;\n            if (this._currentIndex !== null) {\n                this._highlightCurrentMatch();\n            }\n            this._cm.editor.dispatch({\n                effects: StateEffect.appendConfig.of(this._domEventHandlers)\n            });\n            this._refresh();\n        }\n    }\n    _selectCurrentMatch(scroll = true) {\n        // This method has two responsibilities:\n        // 1) Scroll the current match into the view - useful for long lines,\n        //    and file editors with more lines that fit on the screen\n        // 2) When user has focus on the editor (not search box) and presses\n        //    ctrl + g/ctrl + shift + g to jump to next match they want their\n        //    cursor to jump too.\n        // We execute (1) and (2) together as CodeMirror has a special code path\n        // to handle both in a single dispatch.\n        // The (2) case is inapplicable to search in selection mode, as it would\n        // invalidate the query selection, so in that case we only execute (1).\n        const match = this._current;\n        if (!match) {\n            return;\n        }\n        if (!this._cm) {\n            return;\n        }\n        const cursor = {\n            anchor: match.position,\n            head: match.position + match.text.length\n        };\n        const selection = this._cm.editor.state.selection.main;\n        if ((selection.from === match.position &&\n            selection.to === match.position + match.text.length) ||\n            this._protectSelection) {\n            // Correct selection is already set or search is restricted to selection:\n            // scroll without changing the selection.\n            if (scroll) {\n                this._cm.editor.dispatch({\n                    effects: EditorView.scrollIntoView(EditorSelection.range(cursor.anchor, cursor.head))\n                });\n                return;\n            }\n        }\n        else {\n            this._cm.editor.dispatch({\n                selection: cursor,\n                scrollIntoView: scroll\n            });\n        }\n    }\n    _highlightCurrentMatch(options) {\n        var _a, _b, _c;\n        if (!this._cm) {\n            // no-op\n            return;\n        }\n        // Highlight the current index\n        if (this._currentIndex !== null) {\n            const match = this.matches[this._currentIndex];\n            this._current = match;\n            // We do not change selection nor scroll if:\n            // - user is selecting text,\n            // - document was modified\n            if ((_a = options === null || options === void 0 ? void 0 : options.select) !== null && _a !== void 0 ? _a : true) {\n                if (this._cm.hasFocus()) {\n                    // If editor is focused we actually set the cursor on the match.\n                    this._selectCurrentMatch((_b = options === null || options === void 0 ? void 0 : options.scroll) !== null && _b !== void 0 ? _b : true);\n                }\n                else if ((_c = options === null || options === void 0 ? void 0 : options.scroll) !== null && _c !== void 0 ? _c : true) {\n                    // otherwise we just scroll to preserve the selection.\n                    this._cm.editor.dispatch({\n                        effects: EditorView.scrollIntoView(match.position)\n                    });\n                }\n            }\n        }\n        else {\n            this._current = null;\n        }\n        this._refresh();\n    }\n    _refresh() {\n        if (!this._cm) {\n            // no-op\n            return;\n        }\n        let effects = [\n            this._highlightEffect.of({\n                matches: this.matches,\n                currentMatch: this._current\n            })\n        ];\n        if (!this._cm.state.field(this._highlightField, false)) {\n            effects.push(StateEffect.appendConfig.of([this._highlightField]));\n        }\n        this._cm.editor.dispatch({ effects });\n    }\n    _findNext(reverse, from = 'auto') {\n        var _a, _b, _c, _d;\n        if (this._matches.length === 0) {\n            // No-op\n            return null;\n        }\n        // If the editor has not be instantiated yet (e.g. a cell that has not yet be seen in the viewport),\n        // force the behavior\n        if (!this._cm && !['previous-match', 'start'].includes(from)) {\n            from = 'previous-match';\n        }\n        let lastPosition = 0;\n        if ((from === 'auto' && ((_b = (_a = this._cm) === null || _a === void 0 ? void 0 : _a.hasFocus()) !== null && _b !== void 0 ? _b : false)) ||\n            from === 'selection') {\n            const cursor = this._cm.state.selection.main;\n            lastPosition = reverse ? cursor.anchor : cursor.head;\n        }\n        else if (from === 'selection-start') {\n            const cursor = this._cm.state.selection.main;\n            lastPosition = Math.min(cursor.anchor, cursor.head);\n        }\n        else if (from === 'start') {\n            lastPosition = 0;\n        }\n        else if (this._current) {\n            lastPosition = reverse\n                ? this._current.position\n                : this._current.position + this._current.text.length;\n        }\n        if (lastPosition === 0 && reverse && this.currentIndex === null) {\n            // The default position is (0, 0) but we want to start from the end in that case\n            // Fallback to the end of the latest match if the editor is not instantiated\n            lastPosition =\n                (_d = (_c = this._cm) === null || _c === void 0 ? void 0 : _c.doc.length) !== null && _d !== void 0 ? _d : endLastMatch(this._matches[this._matches.length - 1]);\n        }\n        const position = lastPosition;\n        let found = Utils.findNext(this._matches, position, 0, this._matches.length - 1);\n        if (found === null) {\n            // Don't loop\n            return reverse ? this._matches.length - 1 : null;\n        }\n        if (reverse) {\n            found -= 1;\n            if (found < 0) {\n                // Don't loop\n                return null;\n            }\n        }\n        return found;\n        function endLastMatch(lastMatch) {\n            return lastMatch ? lastMatch.position + lastMatch.text.length : 0;\n        }\n    }\n}\n/**\n * Helpers namespace\n */\nvar Utils;\n(function (Utils) {\n    /**\n     * Find the closest match at `position` just after it.\n     *\n     * #### Notes\n     * Search is done using a binary search algorithm\n     *\n     * @param matches List of matches\n     * @param position Searched position\n     * @param lowerBound Lower range index\n     * @param higherBound High range index\n     * @returns The next match or null if none exists\n     */\n    function findNext(matches, position, lowerBound = 0, higherBound = Infinity) {\n        higherBound = Math.min(matches.length - 1, higherBound);\n        while (lowerBound <= higherBound) {\n            let middle = Math.floor(0.5 * (lowerBound + higherBound));\n            const currentPosition = matches[middle].position;\n            if (currentPosition < position) {\n                lowerBound = middle + 1;\n                if (lowerBound < matches.length &&\n                    matches[lowerBound].position > position) {\n                    return lowerBound;\n                }\n            }\n            else if (currentPosition > position) {\n                higherBound = middle - 1;\n                if (higherBound > 0 && matches[higherBound].position < position) {\n                    return middle;\n                }\n            }\n            else {\n                return middle;\n            }\n        }\n        // Next could be the first item\n        const first = lowerBound > 0 ? lowerBound - 1 : 0;\n        const match = matches[first];\n        return match.position >= position ? first : null;\n    }\n    Utils.findNext = findNext;\n})(Utils || (Utils = {}));\n//# sourceMappingURL=searchprovider.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { Token } from '@lumino/coreutils';\n/**\n * Editor language token.\n */\nexport const IEditorExtensionRegistry = new Token('@jupyterlab/codemirror:IEditorExtensionRegistry', `A registry for CodeMirror extension factories.`);\n/**\n * Editor language token.\n */\nexport const IEditorLanguageRegistry = new Token('@jupyterlab/codemirror:IEditorLanguageRegistry', 'A registry for CodeMirror languages.');\n/**\n * Editor theme token.\n */\nexport const IEditorThemeRegistry = new Token('@jupyterlab/codemirror:IEditorThemeRegistry', 'A registry for CodeMirror theme.');\n//# sourceMappingURL=token.js.map"],"names":["CODE_RUNNER_SELECTOR","StateCommands","indentMoreOrInsertTab","target","_a","classList","dom","parentElement","completerEnabled","contains","COMPLETER_ENABLED_CLASS","lineBeggining","COMPLETER_LINE_BEGINNING_CLASS","arg","state","dispatch","from","selection","main","to","indentMore","line","doc","lineAt","before","slice","toString","test","insertTab","completerOrInsertNewLine","COMPLETER_ACTIVE_CLASS","closest","insertNewlineAndIndent","preventNewLineOnRun","insertBlankLineOnRun","insertBlankLine","simplifySelectionAndMaybeSwitchToCommandMode","preventDefault","simplifySelection","dedentIfNotLaunchingTooltip","indentLess","customThemeConfig","Facet","define","combine","configs","combineConfig","fontFamily","fontSize","lineHeight","a","b","setEditorStyle","view","facet","style","customTheme","config","of","EditorView","editorAttributes","INLINE_MATH_DOLLAR","INLINE_MATH_BRACKET","BLOCK_MATH_DOLLAR","BLOCK_MATH_BRACKET","DELIMITER_LENGTH","DELIMITERS","Object","keys","reduce","agg","name","mark","resolve","parseMathIPython","latexParser","defineNodes","Array","forEach","push","tags","emphasis","processingInstruction","parseInline","parse","cx","next","pos","char","addDelimiter","includes","wrap","parseMixed","node","input","delimiterLength","type","parser","overlay","undefined","RULERS_CLASSNAME","baseTheme","borderRight","opacity","rulerConfig","value","arr","concat","filter","v","idx","lastIndexOf","ViewPlugin","fromClass","constructor","_b","this","rulersContainer","appendChild","document","createElement","cssText","defaultCharacterWidth","widths","guttersWidths","scrollDOM","querySelector","clientWidth","rulers","map","width","ruler","add","update","viewportChanged","geometryChanged","JSONExt","deepEqual","startState","guttersWidth","rulerIdx","left","destroy","remove","YRange","yanchor","yhead","toJSON","relativePositionToJSON","fromJSON","json","createRelativePositionFromJSON","YSyncConfig","ytext","toYPos","assoc","createRelativePositionFromTypeIndex","fromYPos","rpos","createAbsolutePositionFromRelativePosition","Error","index","toYRange","range","anchor","head","fromYRange","yrange","EditorSelection","cursor","ySyncFacet","inputs","length","ySyncAnnotation","Annotation","ySync","conf","_observer","event","tr","origin","delta","changes","i","d","insert","delete","retain","annotations","_ytext","observe","docChanged","transactions","annotation","transact","adj","iterChanges","fromA","toA","fromB","toB","insertText","sliceString","unobserve","ybinding","undoManager","ySyncConfig","addTrackedOrigin","removeTrackedOrigin","ExtensionsHandler","baseConfiguration","defaultExtensions","_configChanged","Signal","_disposed","_isDisposed","_immutables","Set","_baseConfig","_config","_configurableBuilderMap","Map","configurables","key","configChanged","disposed","isDisposed","dispose","emit","clearData","getOption","option","hasOption","setOption","setBaseOptions","options","changed","_getChangedOptions","customizedKeys","notOverridden","k","setOptions","reconfigureExtension","effect","getEffect","effects","reconfigureExtensions","configuration","has","injectExtension","extension","StateEffect","appendConfig","getInitialExtensions","extensions","get","instance","ext","builder","reconfigure","newConfig","oldConfig","newKeys","entries","EditorExtensionRegistry","configurationBuilder","configurationSchema","defaultOptions","handlers","immutableExtensions","_baseConfiguration","handler","defaultConfiguration","freeze","settingsSchema","deepCopy","addExtension","factory","set","default","schema","createNew","connect","ConfigurableExtension","_compartment","Compartment","_builder","ImmutableExtension","_extension","createConfigurableExtension","createConditionalExtension","truthy","falsy","createImmutableExtension","getDefaultExtensions","themes","translator","trans","nullTranslator","load","title","__","foldGutter","drawSelection","cursorBlinkRate","description","highlightActiveLine","highlightSpecialChars","highlightTrailingWhitespace","highlightWhitespace","indentUnit","repeat","parseInt","enum","run","defaultKeymap","binding","shift","keymap","lineNumbers","lineWrapping","bracketMatching","Prec","high","rectangularSelection","crosshairCursor","EditorState","readOnly","class","items","minimum","selectSelectionMatches","openSearchPanel","scope","findNext","findPrevious","closeSearchPanel","inline","scrollPastEnd","indentOnInput","contentAttributes","tabIndex","tabSize","tooltips","position","parent","body","allowMultipleSelections","properties","maximum","additionalProperties","getTheme","unfold","go","Find","Replace","previous","all","replace","close","Completions","Diagnostics","phrases","Node","start","GrammarDeclaration","rules","topRules","tokens","localTokens","context","externalTokens","externalSpecializers","externalPropSources","precedences","mainSkip","scopedSkip","dialects","externalProps","autoDelim","super","values","join","RuleDeclaration","id","props","params","expr","PrecDeclaration","TokenPrecDeclaration","TokenConflictDeclaration","TokenDeclaration","conflicts","literals","LocalTokenDeclaration","fallback","LiteralDeclaration","literal","ContextDeclaration","source","ExternalTokenDeclaration","ExternalSpecializeDeclaration","token","ExternalPropSourceDeclaration","ExternalPropDeclaration","externalID","Identifier","Expression","walk","f","eq","_other","prototype","prec","NameExpression","args","other","exprsEq","walkExprs","SpecializeExpression","content","Prop","eqProps","exprEq","InlineRuleExpression","rule","oRule","ChoiceExpression","exprs","e","maybeParens","SequenceExpression","markers","empty","every","m","om","x","ConflictMarker","RepeatExpression","kind","LiteralExpression","JSON","stringify","SetExpression","ranges","inverted","String","fromCodePoint","y","AnyExpression","result","CharClasses","asciiLetter","asciiLowercase","asciiUppercase","digit","whitespace","eof","CharClass","at","p","PropPart","GenError","hasProps","_p","termHash","Term","flags","nodeName","hash","nodeType","top","repeated","terminal","error","interesting","preserve","cmp","TermSet","terms","names","create","tops","term","makeTop","makeTerminal","makeNonTerminal","makeRepeat","uniqueName","cur","finish","t","some","r","parts","nodeTypes","nextID","minRepeatTerm","maxTerm","cmpSet","diff","none$3","Conflicts","precedence","ambigGroups","cut","none","Math","max","union","sort","ruleID","Rule","skip","cmpNoName","s","isRepeatWrap","sameReduce","Edge","charFor","n","fromCharCode","isEquivalent","partition","edges","eA","eB","applyMinimization","states","edge","stateID","State$1","State","accepting","nullEdge","compile","labeled","localID","explore","newState","ids","out","transitions","separate","found","closure","MergedEdge","mergeEdges","merged","targets","byAccepting","group","split","newPartition","groups","minimize","seen","sameSet$1","findConflicts","occurTogether","cycleTerms","soft","aEdges","bEdges","find","c","Conflict$1","exampleFromEdges","reachable","j","es","hasCycle","orig","work","table","haveCycle","entry","pop","toArray","groupMasks","offsets","data","acceptEnd","stateMask","indexOf","pow","Uint16Array","mask","exampleA","exampleB","str","elts","elt","word","_","none$2","Input","string","fileName","end","lineInfo","ch","message","msg","posInfo","info","raise","match","re","exec","readString","lastIndex","eat","unexpected","expect","val","external","specialized","propSources","sawTop","parseRule","parseIdent","parseTokens","parseLocalTokens","parseExternalTokens","parseExternalProp","parseExternalSpecialize","parseExternalPropSource","first","parsePrecedence","parseBracedExpr","parseGrammar","named","parseProps","parseProp","parseExprChoice","SET_MARKER","parseExprInner","invert","unescaped","code","codePointAt","addRange","charCodeAt","hasOwnProperty","cls","parseArgs","parseExprSuffix","endOfSequence","parseExprSequence","markerType","localStart","ms","tokenRules","parseTokenPrecedence","parseTokenConflict","parseExternalTokenSet","point","u1","u2","u3","single","unknown","hashString","h","verbose","process","env","LOG","timing","time","label","t0","Date","now","console","log","toFixed","_label","Pos","ahead","ambigAhead","skipAhead","via","advance","cmpStr","eqSimple","splice","sameSet","trail","maxLen","reverse","addOrigins","conflictsAt","compareRepeatPrec","posB","termsAhead","after","cont","addTo","eqSet","Shift","Reduce","matches","mapping","mapped","hashPositions","ConflictContext","startRule","actions","actionPositions","goto","tokenGroup","defaultReduce","_actionsByTerm","g","addActionInner","positions","check","action","fullPos","actionFullPos","actionConflicts","addAction","conflict","conflictPos","termAfter","path","hasMatch","inner","findConflictShiftSource","root","hist","unshift","p2","findConflictOrigin","Conflict","getGoto","hasSet","actionsByTerm","dThis","dOther","array","Core","applyCut","canMerge","byTerm","setB","setA","a1","a2","mergeStates","newStates","newID","Group","member","members","samePosSet","none$1","digitToChar","encode","low","rest","encodeArray","Parts","ensureConflicts","otherConflicts","withConflicts","BuiltRule","matchesRepeat","Builder","text","tokenOrigins","built","ruleNames","namespaces","namedTerms","termTable","knownProps","dynamicRulePrecedences","definedGroups","astRules","currentSkip","ast","NP","NodeProp","prop","perNode","externalProp","MainTokenSet","LocalTokenSet","ExternalTokenSet","decl","ExternalSpecializer","noSkip","newName","defineRule","scoped","findIndex","sc","isEmpty","unique","skipRules","normalizeExpr","used","nodeInfo","isExported","buildRule","warn","takePrecedences","takeConflicts","lt","defineGroup","checkGroups","base","prepareParser","groupStart","size","otherStart","otherName","newRules","mergeRules","pass","inlinable","expand","inlineRules","simplifyRules","termNames","startTerms","change","nt","startLen","part","computeFirstSets","skipInfo","startTokens","fullTable","statesBySetHash","cores","getState","core","coreHash","byHash","known","added","redo","addFor","existing","origIndex","forHash","startTerm","startSkip","filled","byTermPos","atEnd","replaced","count","buildFullAutomaton","grp","buildLocalGroup","tokenGroups","tokenPrec","tokenData","buildTokenGroups","didMerge","mergeIdentical","assignGroups","spill","groupIndex","idA","idB","collapseAutomaton","skipState","startRules","nonSkip","findSkipStates","buildSpecializeTable","tokStart","tokenizer","tokenizers","DataBuilder","skipData","storeArray","Uint32Array","forceReductions","computeForceReductions","finishCx","FinishStateContext","byDialect","dynamicPrecedences","precTable","nodeProps","skippedTypes","gatherNodeProps","stateData","computeGotoTable","nodeNames","repeatNodeCount","getParser","rawNodeProps","rawSpecialized","externalSpecializer","stack","extend","deserialize","version","externalPropSource","skippedNodes","tok","contextTracker","getParserFile","rawTokenizers","rawDialects","mod","moduleStyle","gen","imports","imported","defined","KEYWORDS","exportName","getName","prefix","importName","spec","src","varName","lrParser","createSource","serializePropValue","specHead","ts","typeScript","tableName","parserStr","includeNames","gatherNonSkippedNodes","notSkipped","rec","tag","reductions","candidates","gotoEdges","o","parents","length1Reductions","createsCycle","parentIntersection","reduceAction","setSize","done","substituteArgs","substituteArgsInProps","substituteInValue","conflictsFor","here","marker","precs","item","choices","choice","getToken","normalizeRepeat","normalizeSequence","complete","endConflicts","full","getLiteral","resolveSpecialization","dynamicPrec","explicitInline","exported","registerDynamicPrec","allow","defaultName","defaultProps","toUpperCase","ignored","dialect","finishProp","dialectID","builtin","delim","findDelimiters","addToProp","param","sp","findToken","lastToken","bracket","firstToken","recur","getNamed","stateArray","sharedActions","findSharedActions","shared","scratch","fill","addr","storeActions","skipReduce","isSkip","forcedReduce","skipID","skipTable","skipTerms","addToSet","tokenizerMask","groupID","depth","search","findArray","num","offset","list","TokenGroup","buildTokenMasks","masks","groupMask","TokenArg","BuildingRule","TokenSet","building","precedenceRelations","build","loop","MAX_CODE","invertRanges","rangeEdges","mid","MAX_CHAR","rel","prev","level","addRel","precededBy","buildPrecTable","softConflicts","record","arguments","explicitConflicts","l","startID","allConflicts","cache","hasTerm","cached","checkTogether","errors","incompatible","stateTerms","conflicting","example","usesThis","usesOther","precOffset","fullData","ASTRAL","GAP_START","GAP_END","LOW_SURR_B","HIGH_SURR_B","hi","min","lowStr","hiStr","lowA","lowB","hiA","hiB","hop","midStart","midEnd","gatherExtTokens","findExtToken","externalTokenizer","buildParser","jupyterEditorTheme","theme","background","color","caretColor","borderLeft","backgroundColor","jupyterHighlightStyle","HighlightStyle","meta","heading","heading1","heading2","heading3","heading4","fontWeight","keyword","atom","number","definition","function","variableName","standard","special","self","punctuation","propertyName","operator","comment","fontStyle","labelName","monospace","tagName","attributeName","quote","link","textDecoration","separator","derefOperator","paren","strong","strikethrough","bool","jupyterTheme","syntaxHighlighting","EditorThemeRegistry","_themeMap","defaultTheme","addTheme","displayName","getDefaultThemes","defaultHighlightStyle","PythonBuiltin","langPython","tree","syntaxTree","Decoration","decorations","buildDeco","decoratedTo","viewport","decoratedToMapped","mapPos","RangeSetBuilder","enter","mounted","iterate","isActiveAt","sliceDoc","builtins","visibleRanges","pythonBuiltin","EditorLanguageRegistry","_modeList","addLanguage","mime","support","LanguageSupport","LRLanguage","language","findByName","findByMIME","makeSpec","getLanguage","findBest","getLanguages","strict","isArray","toLowerCase","alias","findByExtension","findByFileName","basename","PathExt","filename","dot","substring","_c","_d","modename","mimetype","IEditorMimeTypeService","defaultMimeType","highlight","el","language_","createTextNode","highlightTree","classes","className","res","LanguageDescription","legacy","StreamLanguage","async","sql","dialectName","getDefaultLanguages","cpp","css","html","java","javascript","jsx","markdown","codeLanguages","php","pythonLanguage","rust","typescript","wast","xml","apl","asciiArmor","asn1","asterisk","brainfuck","cobol","csharp","clojure","gss","cmake","coffeeScript","commonLisp","cypher","cython","crystal","dart","dockerFile","dtd","dylan","ebnf","ecl","eiffel","elm","erlang","esper","factor","fcl","forth","fortran","fSharp","gas","gherkin","groovy","haskell","haxe","hxml","http","idl","jsonld","jinja2","julia","kotlin","less","liveScript","lua","mirc","mathematica","modelica","mumps","mbox","nginx","nsis","ntriples","objectiveC","objectiveCpp","oCaml","octave","oz","pascal","perl","pig","powerShell","protobuf","pug","puppet","q","rpmChanges","rpmSpec","ruby","sas","scala","scheme","sCSS","shell","sieve","smalltalk","solr","sml","sparql","spreadsheet","squirrel","stylus","swift","stex","verilog","tcl","textile","tiddlyWiki","tiki","toml","troff","ttcn","ttcnCfg","turtle","webIDL","vb","vbScript","velocity","vhdl","xQuery","yacas","yaml","z80","mscgen","xu","msgenny","CodeMirrorEditor","_e","_f","edgeRequested","_language","_uuid","_languages","languages","_configurator","extensionsRegistry","host","addEventListener","uuid","UUID","uuid4","model","_model","onKeyDown","domEventHandlers","keydown","onKeydown","updateListener","_onDocChanged","_editor","Private","createEditor","sharedModel","_onMimeTypeChanged","_onCursorActivity","onConfigChanged","mimeTypeChanged","editor","lineCount","lines","defaultLineHeight","charWidth","removeEventListener","getLine","getOffsetAt","column","getPositionAt","undo","clearHistory","clearUndoHistory","focus","hasFocus","blur","contentDOM","firstLine","lastLine","cursorCoords","where","mode","coordsAtPos","getRange","fromOffset","_toPosition","toOffset","revealPosition","scrollIntoView","revealSelection","getCoordinateForPosition","getPositionForCoordinate","coordinate","posAtCoords","getCursorPosition","setCursorPosition","scroll","selections","getSelections","getSelection","setSelection","setSelections","_toCodeMirrorPosition","_toSelection","sel","replaceSelection","firstSelection","updateSource","newPosition","getTokens","ensureSyntaxTree","ref","firstChild","getTokenAt","getTokenAtCursor","newIndentedLine","execCommand","command","configurator","setState","keyCode","shiftKey","mimeType","then","catch","reason","handleEvent","_evtFocus","_evtBlur","editorConfig","additionalExtensions","CodeMirrorEditorFactory","newInlineEditor","dataset","newEditor","inlineCodeMirrorConfig","newDocumentEditor","documentCodeMirrorConfig","searchWithCM","CodeMirrorMimeTypeService","getMimeTypeByLanguage","file_extension","codemirror_mode","getMimeTypeByFilePath","extname","Utils","EditorSearchProvider","currentIndex","query","_isActive","_inSelection","_cmHandler","_stateChanged","cmHandler","CodeMirrorSearchHighlighter","stateChanged","currentMatchIndex","isActive","matchesCount","clearHighlight","Promise","endQuery","setIsActive","startQuery","filters","setSearchSelection","updateCodeMirror","getSource","setProtectSelection","protectSelection","onSharedModelChanged","highlightNext","getCurrentMatch","highlightPrevious","replaceCurrentMatch","newText","substitutedText","regularExpression","preserveCase","GenericSearchProvider","reject","allMatches","positionAfterReplacement","nextMatchFound","matchIdx","err","errorMessage","replaceAllMatches","occurred","lastEnd","finalSrc","newStep","setSource","emitter","sourceChange","TextSearchEngine","select","_current","_cm","_matches","_currentIndex","_highlightEffect","transform","currentMatch","_highlightMark","_currentMark","_highlightField","StateField","highlights","transaction","ef","is","provide","_domEventHandlers","_selectCurrentMatch","_highlightCurrentMatch","_protectSelection","_findNext","setEditor","_refresh","field","lastPosition","lastMatch","lowerBound","higherBound","Infinity","middle","floor","currentPosition","IEditorExtensionRegistry","Token","IEditorLanguageRegistry","IEditorThemeRegistry"],"sourceRoot":""}