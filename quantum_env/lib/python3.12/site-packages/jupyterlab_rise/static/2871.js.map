{"version":3,"file":"2871.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/adapters/editorAdapter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/adapters/adapter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/adapters/tracker.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/ws-connection/server-capability-registration.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/socket/reader.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/connection_manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/positioning.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/socket/writer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/logger.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/ws-connection/ws-connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/socket/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/extractors/manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/extractors/text_extractor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/feature.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/virtual/document.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash.mergewith/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/browser/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/browser/ril.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/api.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/disposable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/events.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/is.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/linkedMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messageBuffer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messageReader.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messageWriter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messages.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/semaphore.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\n/**\n * The CodeEditor.IEditor adapter.\n */\nexport class EditorAdapter {\n    /**\n     * Instantiate a new EditorAdapter.\n     *\n     * @param options The instantiation options for a EditorAdapter.\n     */\n    constructor(options) {\n        this._widgetAdapter = options.widgetAdapter;\n        this._extensions = options.extensions;\n        void options.editor.ready().then(editor => {\n            this._injectExtensions(options.editor);\n        });\n    }\n    /**\n     * Dispose the handler.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.isDisposed = true;\n        Signal.clearData(this);\n    }\n    /**\n     * Setup the editor.\n     */\n    _injectExtensions(editor) {\n        const codeEditor = editor.getEditor();\n        if (!codeEditor || codeEditor.isDisposed) {\n            return;\n        }\n        this._extensions.forEach(factory => {\n            const ext = factory.factory({\n                path: this._widgetAdapter.widget.context.path,\n                editor: editor,\n                widgetAdapter: this._widgetAdapter,\n                model: codeEditor.model,\n                inline: true\n            });\n            if (!ext) {\n                return;\n            }\n            codeEditor.injectExtension(ext.instance(codeEditor));\n        });\n    }\n}\n//# sourceMappingURL=editorAdapter.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport mergeWith from 'lodash.mergewith';\nimport { Dialog, showDialog } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { Signal } from '@lumino/signaling';\nimport { EditorAdapter } from './editorAdapter';\nconst createButton = Dialog.createButton;\n/**\n * The values should follow the https://microsoft.github.io/language-server-protocol/specification guidelines\n */\nconst MIME_TYPE_LANGUAGE_MAP = {\n    'text/x-rsrc': 'r',\n    'text/x-r-source': 'r',\n    // currently there are no LSP servers for IPython we are aware of\n    'text/x-ipython': 'python'\n};\n/**\n * Foreign code: low level adapter is not aware of the presence of foreign languages;\n * it operates on the virtual document and must not attempt to infer the language dependencies\n * as this would make the logic of inspections caching impossible to maintain, thus the WidgetAdapter\n * has to handle that, keeping multiple connections and multiple virtual documents.\n */\nexport class WidgetLSPAdapter {\n    // note: it could be using namespace/IOptions pattern,\n    // but I do not know how to make it work with the generic type T\n    // (other than using 'any' in the IOptions interface)\n    constructor(widget, options) {\n        this.widget = widget;\n        this.options = options;\n        /**\n         * Signal emitted when the adapter is connected.\n         */\n        this._adapterConnected = new Signal(this);\n        /**\n         * Signal emitted when the active editor have changed.\n         */\n        this._activeEditorChanged = new Signal(this);\n        /**\n         * Signal emitted when an editor is changed.\n         */\n        this._editorAdded = new Signal(this);\n        /**\n         * Signal emitted when an editor is removed.\n         */\n        this._editorRemoved = new Signal(this);\n        /**\n         * Signal emitted when the adapter is disposed.\n         */\n        this._disposed = new Signal(this);\n        this._isDisposed = false;\n        this._virtualDocument = null;\n        this._connectionManager = options.connectionManager;\n        this._isConnected = false;\n        this._trans = (options.translator || nullTranslator).load('jupyterlab');\n        // set up signal connections\n        this.widget.context.saveState.connect(this.onSaveState, this);\n        this.connectionManager.closed.connect(this.onConnectionClosed, this);\n        this.widget.disposed.connect(this.dispose, this);\n        this._editorToAdapter = new WeakMap();\n        this.editorAdded.connect(this._onEditorAdded, this);\n        this.editorRemoved.connect(this._onEditorRemoved, this);\n        this._connectionManager.languageServerManager.sessionsChanged.connect(this._onLspSessionOrFeatureChanged, this);\n        this.options.featureManager.featureRegistered.connect(this._onLspSessionOrFeatureChanged, this);\n    }\n    /**\n     * Check if the adapter is disposed\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Check if the document contains multiple editors\n     */\n    get hasMultipleEditors() {\n        return this.editors.length > 1;\n    }\n    /**\n     * Get the ID of the internal widget.\n     */\n    get widgetId() {\n        return this.widget.id;\n    }\n    /**\n     * Get the language identifier of the document\n     */\n    get language() {\n        // the values should follow https://microsoft.github.io/language-server-protocol/specification guidelines,\n        // see the table in https://microsoft.github.io/language-server-protocol/specification#textDocumentItem\n        if (MIME_TYPE_LANGUAGE_MAP.hasOwnProperty(this.mimeType)) {\n            return MIME_TYPE_LANGUAGE_MAP[this.mimeType];\n        }\n        else {\n            let withoutParameters = this.mimeType.split(';')[0];\n            let [type, subtype] = withoutParameters.split('/');\n            if (type === 'application' || type === 'text') {\n                if (subtype.startsWith('x-')) {\n                    return subtype.substring(2);\n                }\n                else {\n                    return subtype;\n                }\n            }\n            else {\n                return this.mimeType;\n            }\n        }\n    }\n    /**\n     * Signal emitted when the adapter is connected.\n     */\n    get adapterConnected() {\n        return this._adapterConnected;\n    }\n    /**\n     * Signal emitted when the active editor have changed.\n     */\n    get activeEditorChanged() {\n        return this._activeEditorChanged;\n    }\n    /**\n     * Signal emitted when the adapter is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Signal emitted when the an editor is changed.\n     */\n    get editorAdded() {\n        return this._editorAdded;\n    }\n    /**\n     * Signal emitted when the an editor is removed.\n     */\n    get editorRemoved() {\n        return this._editorRemoved;\n    }\n    /**\n     * The virtual document is connected or not\n     */\n    get isConnected() {\n        return this._isConnected;\n    }\n    /**\n     * The LSP document and connection manager instance.\n     */\n    get connectionManager() {\n        return this._connectionManager;\n    }\n    /**\n     * The translator provider.\n     */\n    get trans() {\n        return this._trans;\n    }\n    /**\n     * Promise that resolves once the document is updated\n     */\n    get updateFinished() {\n        return this._updateFinished;\n    }\n    /**\n     * Internal virtual document of the adapter.\n     */\n    get virtualDocument() {\n        return this._virtualDocument;\n    }\n    /**\n     * Callback on connection closed event.\n     */\n    onConnectionClosed(_, { virtualDocument }) {\n        if (virtualDocument === this.virtualDocument) {\n            this.dispose();\n        }\n    }\n    /**\n     * Dispose the adapter.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this.editorAdded.disconnect(this._onEditorAdded, this);\n        this.editorRemoved.disconnect(this._onEditorRemoved, this);\n        this._connectionManager.languageServerManager.sessionsChanged.disconnect(this._onLspSessionOrFeatureChanged, this);\n        this.options.featureManager.featureRegistered.disconnect(this._onLspSessionOrFeatureChanged, this);\n        this._isDisposed = true;\n        this.disconnect();\n        this._virtualDocument = null;\n        this._disposed.emit();\n        Signal.clearData(this);\n    }\n    /**\n     * Disconnect virtual document from the language server.\n     */\n    disconnect() {\n        var _a, _b;\n        const uri = (_a = this.virtualDocument) === null || _a === void 0 ? void 0 : _a.uri;\n        const { model } = this.widget.context;\n        if (uri) {\n            this.connectionManager.unregisterDocument(uri);\n        }\n        model.contentChanged.disconnect(this._onContentChanged, this);\n        // pretend that all editors were removed to trigger the disconnection of even handlers\n        // they will be connected again on new connection\n        for (let { ceEditor: editor } of this.editors) {\n            this._editorRemoved.emit({\n                editor: editor\n            });\n        }\n        (_b = this.virtualDocument) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n    /**\n     * Update the virtual document.\n     */\n    updateDocuments() {\n        if (this._isDisposed) {\n            console.warn('Cannot update documents: adapter disposed');\n            return Promise.reject('Cannot update documents: adapter disposed');\n        }\n        return this.virtualDocument.updateManager.updateDocuments(this.editors);\n    }\n    /**\n     * Callback called on the document changed event.\n     */\n    documentChanged(virtualDocument, document, isInit = false) {\n        if (this._isDisposed) {\n            console.warn('Cannot swap document: adapter disposed');\n            return;\n        }\n        // TODO only send the difference, using connection.sendSelectiveChange()\n        let connection = this.connectionManager.connections.get(virtualDocument.uri);\n        if (!(connection === null || connection === void 0 ? void 0 : connection.isReady)) {\n            console.log('Skipping document update signal: connection not ready');\n            return;\n        }\n        connection.sendFullTextChange(virtualDocument.value, virtualDocument.documentInfo);\n    }\n    // equivalent to triggering didClose and didOpen, as per syncing specification,\n    // but also reloads the connection; used during file rename (or when it was moved)\n    reloadConnection() {\n        // ignore premature calls (before the editor was initialized)\n        if (this.virtualDocument === null) {\n            return;\n        }\n        // disconnect all existing connections (and dispose adapters)\n        this.disconnect();\n        // recreate virtual document using current path and language\n        // as virtual editor assumes it gets the virtual document at init,\n        // just dispose virtual editor (which disposes virtual document too)\n        // and re-initialize both virtual editor and document\n        this.initVirtual();\n        // reconnect\n        this.connectDocument(this.virtualDocument, true).catch(console.warn);\n    }\n    /**\n     * Callback on document saved event.\n     */\n    onSaveState(context, state) {\n        // ignore premature calls (before the editor was initialized)\n        if (this.virtualDocument === null) {\n            return;\n        }\n        if (state === 'completed') {\n            // note: must only be send to the appropriate connections as\n            // some servers (Julia) break if they receive save notification\n            // for a document that was not opened before, see:\n            // https://github.com/jupyter-lsp/jupyterlab-lsp/issues/490\n            const documentsToSave = [this.virtualDocument];\n            for (let virtualDocument of documentsToSave) {\n                let connection = this.connectionManager.connections.get(virtualDocument.uri);\n                if (!connection) {\n                    continue;\n                }\n                connection.sendSaved(virtualDocument.documentInfo);\n                for (let foreign of virtualDocument.foreignDocuments.values()) {\n                    documentsToSave.push(foreign);\n                }\n            }\n        }\n    }\n    /**\n     * Connect the virtual document with the language server.\n     */\n    async onConnected(data) {\n        let { virtualDocument } = data;\n        this._adapterConnected.emit(data);\n        this._isConnected = true;\n        try {\n            await this.updateDocuments();\n        }\n        catch (reason) {\n            console.warn('Could not update documents', reason);\n            return;\n        }\n        // refresh the document on the LSP server\n        this.documentChanged(virtualDocument, virtualDocument, true);\n        data.connection.serverNotifications['$/logTrace'].connect((connection, message) => {\n            console.log(data.connection.serverIdentifier, 'trace', virtualDocument.uri, message);\n        });\n        data.connection.serverNotifications['window/logMessage'].connect((connection, message) => {\n            console.log(connection.serverIdentifier + ': ' + message.message);\n        });\n        data.connection.serverNotifications['window/showMessage'].connect((connection, message) => {\n            void showDialog({\n                title: this.trans.__('Message from ') + connection.serverIdentifier,\n                body: message.message\n            });\n        });\n        data.connection.serverRequests['window/showMessageRequest'].setHandler(async (params) => {\n            const actionItems = params.actions;\n            const buttons = actionItems\n                ? actionItems.map(action => {\n                    return createButton({\n                        label: action.title\n                    });\n                })\n                : [createButton({ label: this.trans.__('Dismiss') })];\n            const result = await showDialog({\n                title: this.trans.__('Message from ') + data.connection.serverIdentifier,\n                body: params.message,\n                buttons: buttons\n            });\n            const choice = buttons.indexOf(result.button);\n            if (choice === -1) {\n                return null;\n            }\n            if (actionItems) {\n                return actionItems[choice];\n            }\n            return null;\n        });\n    }\n    /**\n     * Opens a connection for the document. The connection may or may\n     * not be initialized, yet, and depending on when this is called, the client\n     * may not be fully connected.\n     *\n     * @param virtualDocument a VirtualDocument\n     * @param sendOpen whether to open the document immediately\n     */\n    async connectDocument(virtualDocument, sendOpen = false) {\n        virtualDocument.foreignDocumentOpened.connect(this.onForeignDocumentOpened, this);\n        const connectionContext = await this._connect(virtualDocument).catch(console.error);\n        if (connectionContext && connectionContext.connection) {\n            virtualDocument.changed.connect(this.documentChanged, this);\n            if (sendOpen) {\n                connectionContext.connection.sendOpenWhenReady(virtualDocument.documentInfo);\n            }\n        }\n    }\n    /**\n     * Create the virtual document using current path and language.\n     */\n    initVirtual() {\n        var _a;\n        (_a = this._virtualDocument) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._virtualDocument = this.createVirtualDocument();\n        this._onLspSessionOrFeatureChanged();\n    }\n    /**\n     * Handler for opening a document contained in a parent document. The assumption\n     * is that the editor already exists for this, and as such the document\n     * should be queued for immediate opening.\n     *\n     * @param host the VirtualDocument that contains the VirtualDocument in another language\n     * @param context information about the foreign VirtualDocument\n     */\n    async onForeignDocumentOpened(host, context) {\n        const { foreignDocument } = context;\n        await this.connectDocument(foreignDocument, true);\n        foreignDocument.foreignDocumentClosed.connect(this._onForeignDocumentClosed, this);\n    }\n    _onEditorAdded(sender, change) {\n        const { editor } = change;\n        const editorAdapter = new EditorAdapter({\n            editor: editor,\n            widgetAdapter: this,\n            extensions: this.options.featureManager.extensionFactories()\n        });\n        this._editorToAdapter.set(editor, editorAdapter);\n    }\n    _onEditorRemoved(sender, change) {\n        const { editor } = change;\n        const adapter = this._editorToAdapter.get(editor);\n        adapter === null || adapter === void 0 ? void 0 : adapter.dispose();\n        this._editorToAdapter.delete(editor);\n    }\n    /**\n     * Callback called when a foreign document is closed,\n     * the associated signals with this virtual document\n     * are disconnected.\n     */\n    _onForeignDocumentClosed(_, context) {\n        const { foreignDocument } = context;\n        foreignDocument.foreignDocumentClosed.disconnect(this._onForeignDocumentClosed, this);\n        foreignDocument.foreignDocumentOpened.disconnect(this.onForeignDocumentOpened, this);\n        foreignDocument.changed.disconnect(this.documentChanged, this);\n    }\n    /**\n     * Detect the capabilities for the document type then\n     * open the websocket connection with the language server.\n     */\n    async _connect(virtualDocument) {\n        let language = virtualDocument.language;\n        let capabilities = {\n            textDocument: {\n                synchronization: {\n                    dynamicRegistration: true,\n                    willSave: false,\n                    didSave: true,\n                    willSaveWaitUntil: false\n                }\n            },\n            workspace: {\n                didChangeConfiguration: {\n                    dynamicRegistration: true\n                }\n            }\n        };\n        capabilities = mergeWith(capabilities, this.options.featureManager.clientCapabilities());\n        let options = {\n            capabilities,\n            virtualDocument,\n            language,\n            hasLspSupportedFile: virtualDocument.hasLspSupportedFile\n        };\n        let connection = await this.connectionManager.connect(options);\n        if (connection) {\n            await this.onConnected({ virtualDocument, connection });\n            return {\n                connection,\n                virtualDocument\n            };\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Handle content changes and update all virtual documents after a change.\n     *\n     * #### Notes\n     * Update to the state of a notebook may be done without a notice on the\n     * CodeMirror level, e.g. when a cell is deleted. Therefore a\n     * JupyterLab-specific signal is watched instead.\n     *\n     * While by not using the change event of CodeMirror editors we lose an easy\n     * way to send selective (range) updates this can be still implemented by\n     * comparison of before/after states of the virtual documents, which is\n     * more resilient and editor-independent.\n     */\n    async _onContentChanged(_) {\n        // Update the virtual documents.\n        // Sending the updates to LSP is out of scope here.\n        const promise = this.updateDocuments();\n        if (!promise) {\n            console.warn('Could not update documents');\n            return;\n        }\n        this._updateFinished = promise.catch(console.warn);\n        await this.updateFinished;\n    }\n    /**\n     * Check if the virtual document should be updated on content\n     * changed signal. Returns `true` if two following conditions are\n     * are satisfied:\n     *  - The LSP feature is enabled.\n     *  - The LSP features list is not empty.\n     */\n    _shouldUpdateVirtualDocument() {\n        const { languageServerManager } = this.connectionManager;\n        return (languageServerManager.isEnabled &&\n            this.options.featureManager.features.length > 0);\n    }\n    /**\n     * Connect the virtual document update handler with the content\n     * updated signal.This method is invoked at startup and when\n     * the LSP server status changed or when a LSP feature is registered.\n     */\n    _onLspSessionOrFeatureChanged() {\n        if (!this._virtualDocument) {\n            return;\n        }\n        const { model } = this.widget.context;\n        if (this._shouldUpdateVirtualDocument()) {\n            model.contentChanged.connect(this._onContentChanged, this);\n        }\n        else {\n            model.contentChanged.disconnect(this._onContentChanged, this);\n        }\n    }\n}\n//# sourceMappingURL=adapter.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { DocumentWidget } from '@jupyterlab/docregistry';\nimport { Signal } from '@lumino/signaling';\n/**\n * A class that keeps track of widget adapter instances.\n *\n * @typeparam T - The type of widget being tracked. Defaults to `WidgetLSPAdapter`.\n */\nexport class WidgetLSPAdapterTracker {\n    /**\n     * Create a new widget tracker.\n     *\n     * @param options - The instantiation options for a widget tracker.\n     */\n    constructor(options) {\n        this._isDisposed = false;\n        this._current = null;\n        this._adapters = new Set();\n        this._adapterAdded = new Signal(this);\n        this._adapterUpdated = new Signal(this);\n        this._currentChanged = new Signal(this);\n        const shell = (this._shell = options.shell);\n        shell.currentChanged.connect((_, args) => {\n            let newValue = args.newValue;\n            if (!newValue || !(newValue instanceof DocumentWidget)) {\n                return;\n            }\n            const adapter = this.find(value => value.widget === newValue);\n            if (!adapter) {\n                return;\n            }\n            this._current = adapter;\n            this._currentChanged.emit(adapter);\n        });\n    }\n    /**\n     * A signal emitted when the current adapter changes.\n     */\n    get currentChanged() {\n        return this._currentChanged;\n    }\n    /**\n     * The current adapter is the most recently focused or added adapter.\n     *\n     * #### Notes\n     * It is the most recently focused adapter, or the most recently added\n     * adapter if no adapter has taken focus.\n     */\n    get currentAdapter() {\n        return this._current;\n    }\n    /**\n     * The number of adapter held by the tracker.\n     */\n    get size() {\n        return this._adapters.size;\n    }\n    /**\n     * A signal emitted when an adapter is added.\n     */\n    get adapterAdded() {\n        return this._adapterAdded;\n    }\n    /**\n     * A signal emitted when an adapter is updated.\n     */\n    get adapterUpdated() {\n        return this._adapterUpdated;\n    }\n    /**\n     * Add a new adapter to the tracker.\n     *\n     * @param adapter - The adapter being added.\n     *\n     * #### Notes.\n     * The newly added adapter becomes the current adapter unless the shell\n     * already had a DocumentWidget as the activeWidget.\n     */\n    add(adapter) {\n        if (adapter.isDisposed) {\n            const warning = 'A disposed object cannot be added.';\n            console.warn(warning, adapter);\n            throw new Error(warning);\n        }\n        if (this._adapters.has(adapter)) {\n            const warning = 'This object already exists in the pool.';\n            console.warn(warning, adapter);\n            throw new Error(warning);\n        }\n        this._adapters.add(adapter);\n        this._adapterAdded.emit(adapter);\n        adapter.disposed.connect(() => {\n            this._adapters.delete(adapter);\n            if (adapter === this._current) {\n                this._current = null;\n                this._currentChanged.emit(this._current);\n            }\n        }, this);\n        // Only update the current adapter, when there is no shell.activeWidget\n        // or the active widget is not a DocumentWidget\n        // We will be able to use other panels while keeping the current adapter.\n        const active = this._shell.activeWidget;\n        if (!active || !(active instanceof DocumentWidget)) {\n            this._current = adapter;\n            this._currentChanged.emit(adapter);\n        }\n    }\n    /**\n     * Test whether the tracker is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources held by the tracker.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._adapters.clear();\n        Signal.clearData(this);\n    }\n    /**\n     * Find the first adapter in the tracker that satisfies a filter function.\n     *\n     * @param fn The filter function to call on each adapter.\n     *\n     * #### Notes\n     * If no adapter is found, the value returned is `undefined`.\n     */\n    find(fn) {\n        const values = this._adapters.values();\n        for (const value of values) {\n            if (fn(value)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Iterate through each adapter in the tracker.\n     *\n     * @param fn - The function to call on each adapter.\n     */\n    forEach(fn) {\n        this._adapters.forEach(fn);\n    }\n    /**\n     * Filter the adapter in the tracker based on a predicate.\n     *\n     * @param fn - The function by which to filter.\n     */\n    filter(fn) {\n        const filtered = [];\n        this.forEach(value => {\n            if (fn(value)) {\n                filtered.push(value);\n            }\n        });\n        return filtered;\n    }\n    /**\n     * Check if this tracker has the specified adapter.\n     *\n     * @param adapter - The adapter whose existence is being checked.\n     */\n    has(adapter) {\n        return this._adapters.has(adapter);\n    }\n}\n//# sourceMappingURL=tracker.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\nexport var ILanguageServerManager;\n(function (ILanguageServerManager) {\n    /**\n     * LSP endpoint prefix.\n     */\n    ILanguageServerManager.URL_NS = 'lsp';\n})(ILanguageServerManager || (ILanguageServerManager = {}));\n/**\n * @alpha\n *\n * The virtual documents and language server connections manager\n * Require this token in your extension to access the associated virtual\n * document and LS connection of opened documents.\n *\n */\nexport const ILSPDocumentConnectionManager = new Token('@jupyterlab/lsp:ILSPDocumentConnectionManager', 'Provides the virtual documents and language server connections service.');\n/**\n * @alpha\n *\n * The language server feature manager. Require this token in your extension\n * to register the client capabilities implemented by your extension.\n *\n */\nexport const ILSPFeatureManager = new Token('@jupyterlab/lsp:ILSPFeatureManager', 'Provides the language server feature manager. This token is required to register new client capabilities.');\n/**\n * @alpha\n *\n * The code extractor manager. Require this token in your extension to\n * register new code extractors. Code extractor allows creating multiple\n * virtual documents from an opened document.\n *\n */\nexport const ILSPCodeExtractorsManager = new Token('@jupyterlab/lsp:ILSPCodeExtractorsManager', 'Provides the code extractor manager. This token is required in your extension to register code extractor allowing the creation of multiple virtual document from an opened document.');\n/**\n * @alpha\n *\n * The WidgetLSPAdapter tracker. Require this token in your extension to\n * track WidgetLSPAdapters.\n *\n */\nexport const IWidgetLSPAdapterTracker = new Token('@jupyterlab/lsp:IWidgetLSPAdapterTracker', 'Provides the WidgetLSPAdapter tracker. This token is required in your extension to track WidgetLSPAdapters.');\n/**\n * Method strings are reproduced here because a non-typing import of\n * `vscode-languageserver-protocol` is ridiculously expensive.\n */\nexport var Method;\n(function (Method) {\n    /** Server notifications */\n    let ServerNotification;\n    (function (ServerNotification) {\n        ServerNotification[\"PUBLISH_DIAGNOSTICS\"] = \"textDocument/publishDiagnostics\";\n        ServerNotification[\"SHOW_MESSAGE\"] = \"window/showMessage\";\n        ServerNotification[\"LOG_TRACE\"] = \"$/logTrace\";\n        ServerNotification[\"LOG_MESSAGE\"] = \"window/logMessage\";\n    })(ServerNotification = Method.ServerNotification || (Method.ServerNotification = {}));\n    /** Client notifications */\n    let ClientNotification;\n    (function (ClientNotification) {\n        ClientNotification[\"DID_CHANGE\"] = \"textDocument/didChange\";\n        ClientNotification[\"DID_CHANGE_CONFIGURATION\"] = \"workspace/didChangeConfiguration\";\n        ClientNotification[\"DID_OPEN\"] = \"textDocument/didOpen\";\n        ClientNotification[\"DID_SAVE\"] = \"textDocument/didSave\";\n        ClientNotification[\"INITIALIZED\"] = \"initialized\";\n        ClientNotification[\"SET_TRACE\"] = \"$/setTrace\";\n    })(ClientNotification = Method.ClientNotification || (Method.ClientNotification = {}));\n    /** Server requests */\n    let ServerRequest;\n    (function (ServerRequest) {\n        ServerRequest[\"REGISTER_CAPABILITY\"] = \"client/registerCapability\";\n        ServerRequest[\"SHOW_MESSAGE_REQUEST\"] = \"window/showMessageRequest\";\n        ServerRequest[\"UNREGISTER_CAPABILITY\"] = \"client/unregisterCapability\";\n        ServerRequest[\"WORKSPACE_CONFIGURATION\"] = \"workspace/configuration\";\n    })(ServerRequest = Method.ServerRequest || (Method.ServerRequest = {}));\n    /** Client requests */\n    let ClientRequest;\n    (function (ClientRequest) {\n        ClientRequest[\"CODE_ACTION\"] = \"textDocument/codeAction\";\n        ClientRequest[\"COMPLETION\"] = \"textDocument/completion\";\n        ClientRequest[\"COMPLETION_ITEM_RESOLVE\"] = \"completionItem/resolve\";\n        ClientRequest[\"DEFINITION\"] = \"textDocument/definition\";\n        ClientRequest[\"DOCUMENT_COLOR\"] = \"textDocument/documentColor\";\n        ClientRequest[\"DOCUMENT_HIGHLIGHT\"] = \"textDocument/documentHighlight\";\n        ClientRequest[\"DOCUMENT_SYMBOL\"] = \"textDocument/documentSymbol\";\n        ClientRequest[\"HOVER\"] = \"textDocument/hover\";\n        ClientRequest[\"IMPLEMENTATION\"] = \"textDocument/implementation\";\n        ClientRequest[\"INITIALIZE\"] = \"initialize\";\n        ClientRequest[\"REFERENCES\"] = \"textDocument/references\";\n        ClientRequest[\"RENAME\"] = \"textDocument/rename\";\n        ClientRequest[\"SIGNATURE_HELP\"] = \"textDocument/signatureHelp\";\n        ClientRequest[\"TYPE_DEFINITION\"] = \"textDocument/typeDefinition\";\n        ClientRequest[\"LINKED_EDITING_RANGE\"] = \"textDocument/linkedEditingRange\";\n        ClientRequest[\"INLINE_VALUE\"] = \"textDocument/inlineValue\";\n        ClientRequest[\"INLAY_HINT\"] = \"textDocument/inlayHint\";\n        ClientRequest[\"WORKSPACE_SYMBOL\"] = \"workspace/symbol\";\n        ClientRequest[\"WORKSPACE_SYMBOL_RESOLVE\"] = \"workspaceSymbol/resolve\";\n        ClientRequest[\"FORMATTING\"] = \"textDocument/formatting\";\n        ClientRequest[\"RANGE_FORMATTING\"] = \"textDocument/rangeFormatting\";\n    })(ClientRequest = Method.ClientRequest || (Method.ClientRequest = {}));\n})(Method || (Method = {}));\n//# sourceMappingURL=tokens.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport mergeWith from 'lodash.mergewith';\n/**\n * Helper to wait for timeout.\n *\n * @param  timeout - time out in ms\n */\nexport async function sleep(timeout) {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve();\n        }, timeout);\n    });\n}\n/**\n * Wait for an event by pooling the `isReady` function.\n */\nexport function untilReady(isReady, maxRetrials = 35, interval = 50, intervalModifier = (i) => i) {\n    return (async () => {\n        let i = 0;\n        while (isReady() !== true) {\n            i += 1;\n            if (maxRetrials !== -1 && i > maxRetrials) {\n                throw Error('Too many retrials');\n            }\n            interval = intervalModifier(interval);\n            await sleep(interval);\n        }\n        return isReady;\n    })();\n}\n/**\n * Convert dotted path into dictionary.\n */\nexport function expandDottedPaths(obj) {\n    const settings = [];\n    for (let key in obj) {\n        const parsed = expandPath(key.split('.'), obj[key]);\n        settings.push(parsed);\n    }\n    return mergeWith({}, ...settings);\n}\n/**\n * The docs for many language servers show settings in the\n * VSCode format, e.g.: \"pyls.plugins.pyflakes.enabled\"\n *\n * VSCode converts that dot notation to JSON behind the scenes,\n * as the language servers themselves don't accept that syntax.\n */\nexport const expandPath = (path, value) => {\n    const obj = Object.create(null);\n    let curr = obj;\n    path.forEach((prop, i) => {\n        curr[prop] = Object.create(null);\n        if (i === path.length - 1) {\n            curr[prop] = value;\n        }\n        else {\n            curr = curr[prop];\n        }\n    });\n    return obj;\n};\n/**\n * An extended map which will create value for key on the fly.\n */\nexport class DefaultMap extends Map {\n    constructor(defaultFactory, entries) {\n        super(entries);\n        this.defaultFactory = defaultFactory;\n    }\n    get(k) {\n        return this.getOrCreate(k);\n    }\n    getOrCreate(k, ...args) {\n        if (this.has(k)) {\n            return super.get(k);\n        }\n        else {\n            let v = this.defaultFactory(k, ...args);\n            this.set(k, v);\n            return v;\n        }\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n/**\n * Register the capabilities with the server capabilities provider\n *\n * @param serverCapabilities - server capabilities provider.\n * @param registration -  capabilities to be registered.\n * @return - the new server capabilities provider\n */\nfunction registerServerCapability(serverCapabilities, registration) {\n    const serverCapabilitiesCopy = JSON.parse(JSON.stringify(serverCapabilities));\n    const { method, registerOptions } = registration;\n    const providerName = method.substring(13) + 'Provider';\n    if (providerName) {\n        if (!registerOptions) {\n            serverCapabilitiesCopy[providerName] = true;\n        }\n        else {\n            serverCapabilitiesCopy[providerName] = JSON.parse(JSON.stringify(registerOptions));\n        }\n    }\n    else {\n        console.warn('Could not register server capability.', registration);\n        return null;\n    }\n    return serverCapabilitiesCopy;\n}\n/**\n * Unregister the capabilities with the server capabilities provider\n *\n * @param serverCapabilities - server capabilities provider.\n * @param registration -  capabilities to be unregistered.\n * @return - the new server capabilities provider\n */\nfunction unregisterServerCapability(serverCapabilities, unregistration) {\n    const serverCapabilitiesCopy = JSON.parse(JSON.stringify(serverCapabilities));\n    const { method } = unregistration;\n    const providerName = method.substring(13) + 'Provider';\n    delete serverCapabilitiesCopy[providerName];\n    return serverCapabilitiesCopy;\n}\nexport { registerServerCapability, unregisterServerCapability };\n//# sourceMappingURL=server-capability-registration.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { AbstractMessageReader } from 'vscode-jsonrpc/lib/common/messageReader';\r\nexport class WebSocketMessageReader extends AbstractMessageReader {\r\n    constructor(socket) {\r\n        super();\r\n        this.socket = socket;\r\n        this.state = 'initial';\r\n        this.events = [];\r\n        this.socket.onMessage(message => this.readMessage(message));\r\n        this.socket.onError(error => this.fireError(error));\r\n        this.socket.onClose((code, reason) => {\r\n            if (code !== 1000) {\r\n                const error = {\r\n                    name: '' + code,\r\n                    message: `Error during socket reconnect: code = ${code}, reason = ${reason}`\r\n                };\r\n                this.fireError(error);\r\n            }\r\n            this.fireClose();\r\n        });\r\n    }\r\n    listen(callback) {\r\n        if (this.state === 'initial') {\r\n            this.state = 'listening';\r\n            this.callback = callback;\r\n            while (this.events.length !== 0) {\r\n                const event = this.events.pop();\r\n                if (event.message) {\r\n                    this.readMessage(event.message);\r\n                }\r\n                else if (event.error) {\r\n                    this.fireError(event.error);\r\n                }\r\n                else {\r\n                    this.fireClose();\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            dispose: () => {\r\n                if (this.callback === callback) {\r\n                    this.callback = undefined;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    readMessage(message) {\r\n        if (this.state === 'initial') {\r\n            this.events.splice(0, 0, { message });\r\n        }\r\n        else if (this.state === 'listening') {\r\n            const data = JSON.parse(message);\r\n            this.callback(data);\r\n        }\r\n    }\r\n    fireError(error) {\r\n        if (this.state === 'initial') {\r\n            this.events.splice(0, 0, { error });\r\n        }\r\n        else if (this.state === 'listening') {\r\n            super.fireError(error);\r\n        }\r\n    }\r\n    fireClose() {\r\n        if (this.state === 'initial') {\r\n            this.events.splice(0, 0, {});\r\n        }\r\n        else if (this.state === 'listening') {\r\n            super.fireClose();\r\n        }\r\n        this.state = 'closed';\r\n    }\r\n}\r\n//# sourceMappingURL=reader.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\nimport { Method } from './tokens';\nimport { untilReady } from './utils';\nimport { registerServerCapability, unregisterServerCapability } from './ws-connection/server-capability-registration';\nimport { LspWsConnection } from './ws-connection/ws-connection';\n/**\n * Helper class to handle client request\n */\nclass ClientRequestHandler {\n    constructor(connection, method, emitter) {\n        this.connection = connection;\n        this.method = method;\n        this.emitter = emitter;\n    }\n    request(params) {\n        // TODO check if is ready?\n        this.emitter.log(MessageKind.clientRequested, {\n            method: this.method,\n            message: params\n        });\n        return this.connection\n            .sendRequest(this.method, params)\n            .then((result) => {\n            this.emitter.log(MessageKind.resultForClient, {\n                method: this.method,\n                message: params\n            });\n            return result;\n        });\n    }\n}\n/**\n * Helper class to handle server responses\n */\nclass ServerRequestHandler {\n    constructor(connection, method, emitter) {\n        this.connection = connection;\n        this.method = method;\n        this.emitter = emitter;\n        // on request accepts \"thenable\"\n        this.connection.onRequest(method, this._handle.bind(this));\n        this._handler = null;\n    }\n    setHandler(handler) {\n        this._handler = handler;\n    }\n    clearHandler() {\n        this._handler = null;\n    }\n    _handle(request) {\n        this.emitter.log(MessageKind.serverRequested, {\n            method: this.method,\n            message: request\n        });\n        if (!this._handler) {\n            return new Promise(() => undefined);\n        }\n        return this._handler(request, this.emitter).then(result => {\n            this.emitter.log(MessageKind.responseForServer, {\n                method: this.method,\n                message: result\n            });\n            return result;\n        });\n    }\n}\nexport const Provider = {\n    TEXT_DOCUMENT_SYNC: 'textDocumentSync',\n    COMPLETION: 'completionProvider',\n    HOVER: 'hoverProvider',\n    SIGNATURE_HELP: 'signatureHelpProvider',\n    DECLARATION: 'declarationProvider',\n    DEFINITION: 'definitionProvider',\n    TYPE_DEFINITION: 'typeDefinitionProvider',\n    IMPLEMENTATION: 'implementationProvider',\n    REFERENCES: 'referencesProvider',\n    DOCUMENT_HIGHLIGHT: 'documentHighlightProvider',\n    DOCUMENT_SYMBOL: 'documentSymbolProvider',\n    CODE_ACTION: 'codeActionProvider',\n    CODE_LENS: 'codeLensProvider',\n    DOCUMENT_LINK: 'documentLinkProvider',\n    COLOR: 'colorProvider',\n    DOCUMENT_FORMATTING: 'documentFormattingProvider',\n    DOCUMENT_RANGE_FORMATTING: 'documentRangeFormattingProvider',\n    DOCUMENT_ON_TYPE_FORMATTING: 'documentOnTypeFormattingProvider',\n    RENAME: 'renameProvider',\n    FOLDING_RANGE: 'foldingRangeProvider',\n    EXECUTE_COMMAND: 'executeCommandProvider',\n    SELECTION_RANGE: 'selectionRangeProvider',\n    WORKSPACE_SYMBOL: 'workspaceSymbolProvider',\n    WORKSPACE: 'workspace'\n};\n/**\n * Create a map between the request method and its handler\n */\nfunction createMethodMap(methods, handlerFactory) {\n    const result = {};\n    for (let method of Object.values(methods)) {\n        result[method] = handlerFactory(method);\n    }\n    return result;\n}\nvar MessageKind;\n(function (MessageKind) {\n    MessageKind[MessageKind[\"clientNotifiedServer\"] = 0] = \"clientNotifiedServer\";\n    MessageKind[MessageKind[\"serverNotifiedClient\"] = 1] = \"serverNotifiedClient\";\n    MessageKind[MessageKind[\"serverRequested\"] = 2] = \"serverRequested\";\n    MessageKind[MessageKind[\"clientRequested\"] = 3] = \"clientRequested\";\n    MessageKind[MessageKind[\"resultForClient\"] = 4] = \"resultForClient\";\n    MessageKind[MessageKind[\"responseForServer\"] = 5] = \"responseForServer\";\n})(MessageKind || (MessageKind = {}));\nexport class LSPConnection extends LspWsConnection {\n    constructor(options) {\n        super(options);\n        /**\n         * Is the connection is closed manually?\n         */\n        this._closingManually = false;\n        this._closeSignal = new Signal(this);\n        this._errorSignal = new Signal(this);\n        this._serverInitialized = new Signal(this);\n        this._options = options;\n        this.logAllCommunication = false;\n        this.serverIdentifier = options.serverIdentifier;\n        this.serverLanguage = options.languageId;\n        this.documentsToOpen = [];\n        this.clientNotifications =\n            this.constructNotificationHandlers(Method.ClientNotification);\n        this.serverNotifications =\n            this.constructNotificationHandlers(Method.ServerNotification);\n    }\n    /**\n     * Signal emitted when the connection is closed.\n     */\n    get closeSignal() {\n        return this._closeSignal;\n    }\n    /**\n     * Signal emitted when the connection receives an error\n     * message.\n     */\n    get errorSignal() {\n        return this._errorSignal;\n    }\n    /**\n     * Signal emitted when the connection is initialized.\n     */\n    get serverInitialized() {\n        return this._serverInitialized;\n    }\n    /**\n     * Dispose the connection.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        if (this.serverRequests) {\n            // `serverRequests` may be undefined if dispose is called during initialization sequence\n            Object.values(this.serverRequests).forEach(request => request.clearHandler());\n        }\n        this.close();\n        super.dispose();\n    }\n    /**\n     * Helper to print the logs to logger, for now we are using\n     * directly the browser's console.\n     */\n    log(kind, message) {\n        if (this.logAllCommunication) {\n            console.log(kind, message);\n        }\n    }\n    /**\n     * Send the open request to the backend when the server is\n     * ready.\n     */\n    sendOpenWhenReady(documentInfo) {\n        if (this.isReady) {\n            this.sendOpen(documentInfo);\n        }\n        else {\n            this.documentsToOpen.push(documentInfo);\n        }\n    }\n    /**\n     * Send the document changes to the server.\n     */\n    sendSelectiveChange(changeEvent, documentInfo) {\n        this._sendChange([changeEvent], documentInfo);\n    }\n    /**\n     * Send all changes to the server.\n     */\n    sendFullTextChange(text, documentInfo) {\n        this._sendChange([{ text }], documentInfo);\n    }\n    /**\n     * Check if a capability is available in the server capabilities.\n     */\n    provides(capability) {\n        return !!(this.serverCapabilities && this.serverCapabilities[capability]);\n    }\n    /**\n     * Close the connection to the server.\n     */\n    close() {\n        try {\n            this._closingManually = true;\n            super.close();\n        }\n        catch (e) {\n            this._closingManually = false;\n        }\n    }\n    /**\n     * Initialize a connection over a web socket that speaks the LSP.\n     */\n    connect(socket) {\n        super.connect(socket);\n        untilReady(() => {\n            return this.isConnected;\n        }, -1)\n            .then(() => {\n            const disposable = this.connection.onClose(() => {\n                this._isConnected = false;\n                this._closeSignal.emit(this._closingManually);\n            });\n            this._disposables.push(disposable);\n        })\n            .catch(() => {\n            console.error('Could not connect onClose signal');\n        });\n    }\n    /**\n     * Get send request to the server to get completion results\n     * from a completion item\n     */\n    async getCompletionResolve(completionItem) {\n        if (!this.isReady) {\n            return;\n        }\n        return this.connection.sendRequest('completionItem/resolve', completionItem);\n    }\n    /**\n     * Generate the notification handlers\n     */\n    constructNotificationHandlers(methods) {\n        const factory = () => new Signal(this);\n        return createMethodMap(methods, factory);\n    }\n    /**\n     * Generate the client request handler\n     */\n    constructClientRequestHandler(methods) {\n        return createMethodMap(methods, method => new ClientRequestHandler(this.connection, method, this));\n    }\n    /**\n     * Generate the server response handler\n     */\n    constructServerRequestHandler(methods) {\n        return createMethodMap(methods, method => new ServerRequestHandler(this.connection, method, this));\n    }\n    /**\n     * Initialization parameters to be sent to the language server.\n     * Subclasses can overload this when adding more features.\n     */\n    initializeParams() {\n        return {\n            ...super.initializeParams(),\n            capabilities: this._options.capabilities,\n            initializationOptions: null,\n            processId: null,\n            workspaceFolders: null\n        };\n    }\n    /**\n     * Callback called when the server is initialized.\n     */\n    onServerInitialized(params) {\n        this.afterInitialized();\n        super.onServerInitialized(params);\n        while (this.documentsToOpen.length) {\n            this.sendOpen(this.documentsToOpen.pop());\n        }\n        this._serverInitialized.emit(this.serverCapabilities);\n    }\n    /**\n     * Once the server is initialized, this method generates the\n     * client and server handlers\n     */\n    afterInitialized() {\n        const disposable = this.connection.onError(e => this._errorSignal.emit(e));\n        this._disposables.push(disposable);\n        for (const method of Object.values(Method.ServerNotification)) {\n            const signal = this.serverNotifications[method];\n            const disposable = this.connection.onNotification(method, params => {\n                this.log(MessageKind.serverNotifiedClient, {\n                    method,\n                    message: params\n                });\n                signal.emit(params);\n            });\n            this._disposables.push(disposable);\n        }\n        for (const method of Object.values(Method.ClientNotification)) {\n            const signal = this.clientNotifications[method];\n            signal.connect((emitter, params) => {\n                this.log(MessageKind.clientNotifiedServer, {\n                    method,\n                    message: params\n                });\n                this.connection.sendNotification(method, params).catch(console.error);\n            });\n        }\n        this.clientRequests = this.constructClientRequestHandler(Method.ClientRequest);\n        this.serverRequests = this.constructServerRequestHandler(Method.ServerRequest);\n        this.serverRequests['client/registerCapability'].setHandler(async (params) => {\n            params.registrations.forEach((capabilityRegistration) => {\n                try {\n                    const updatedCapabilities = registerServerCapability(this.serverCapabilities, capabilityRegistration);\n                    if (updatedCapabilities === null) {\n                        console.error(`Failed to register server capability: ${capabilityRegistration}`);\n                        return;\n                    }\n                    this.serverCapabilities = updatedCapabilities;\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            });\n        });\n        this.serverRequests['client/unregisterCapability'].setHandler(async (params) => {\n            params.unregisterations.forEach((capabilityUnregistration) => {\n                this.serverCapabilities = unregisterServerCapability(this.serverCapabilities, capabilityUnregistration);\n            });\n        });\n        this.serverRequests['workspace/configuration'].setHandler(async (params) => {\n            return params.items.map(item => {\n                // LSP: \"If the client can’t provide a configuration setting for a given scope\n                // then `null` needs to be present in the returned array.\"\n                // for now we do not support configuration, but yaml server does not respect\n                // client capability so we have a handler just for that\n                return null;\n            });\n        });\n    }\n    /**\n     * Send the document changed data to the server.\n     */\n    _sendChange(changeEvents, documentInfo) {\n        if (!this.isReady) {\n            return;\n        }\n        if (documentInfo.uri.length === 0) {\n            return;\n        }\n        if (!this.openedUris.get(documentInfo.uri)) {\n            this.sendOpen(documentInfo);\n        }\n        const textDocumentChange = {\n            textDocument: {\n                uri: documentInfo.uri,\n                version: documentInfo.version\n            },\n            contentChanges: changeEvents\n        };\n        this.connection\n            .sendNotification('textDocument/didChange', textDocumentChange)\n            .catch(console.error);\n        documentInfo.version++;\n    }\n}\n//# sourceMappingURL=connection.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { LSPConnection } from './connection';\nimport { expandDottedPaths, sleep, untilReady } from './utils';\n/**\n * Each Widget with a document (whether file or a notebook) has the same DocumentConnectionManager\n * (see JupyterLabWidgetAdapter). Using id_path instead of uri led to documents being overwritten\n * as two identical id_paths could be created for two different notebooks.\n */\nexport class DocumentConnectionManager {\n    constructor(options) {\n        /**\n         * Fired the first time a connection is opened. These _should_ be the only\n         * invocation of `.on` (once remaining LSPFeature.connection_handlers are made\n         * singletons).\n         */\n        this.onNewConnection = (connection) => {\n            const errorSignalSlot = (_, e) => {\n                console.error(e);\n                let error = e.length && e.length >= 1 ? e[0] : new Error();\n                if (error.message.indexOf('code = 1005') !== -1) {\n                    console.error(`Connection failed for ${connection}`);\n                    this._forEachDocumentOfConnection(connection, virtualDocument => {\n                        console.error('disconnecting ' + virtualDocument.uri);\n                        this._closed.emit({ connection, virtualDocument });\n                        this._ignoredLanguages.add(virtualDocument.language);\n                        console.error(`Cancelling further attempts to connect ${virtualDocument.uri} and other documents for this language (no support from the server)`);\n                    });\n                }\n                else if (error.message.indexOf('code = 1006') !== -1) {\n                    console.error('Connection closed by the server');\n                }\n                else {\n                    console.error('Connection error:', e);\n                }\n            };\n            connection.errorSignal.connect(errorSignalSlot);\n            const serverInitializedSlot = () => {\n                // Initialize using settings stored in the SettingRegistry\n                this._forEachDocumentOfConnection(connection, virtualDocument => {\n                    // TODO: is this still necessary, e.g. for status bar to update responsively?\n                    this._initialized.emit({ connection, virtualDocument });\n                });\n                this.updateServerConfigurations(this.initialConfigurations);\n            };\n            connection.serverInitialized.connect(serverInitializedSlot);\n            const closeSignalSlot = (_, closedManually) => {\n                if (!closedManually) {\n                    console.error('Connection unexpectedly disconnected');\n                }\n                else {\n                    console.log('Connection closed');\n                    this._forEachDocumentOfConnection(connection, virtualDocument => {\n                        this._closed.emit({ connection, virtualDocument });\n                    });\n                }\n            };\n            connection.closeSignal.connect(closeSignalSlot);\n        };\n        this._initialized = new Signal(this);\n        this._connected = new Signal(this);\n        this._disconnected = new Signal(this);\n        this._closed = new Signal(this);\n        this._documentsChanged = new Signal(this);\n        this.connections = new Map();\n        this.documents = new Map();\n        this.adapters = new Map();\n        this._ignoredLanguages = new Set();\n        this.languageServerManager = options.languageServerManager;\n        Private.setLanguageServerManager(options.languageServerManager);\n        options.adapterTracker.adapterAdded.connect((_, adapter) => {\n            const path = adapter.widget.context.path;\n            this.registerAdapter(path, adapter);\n        });\n    }\n    /**\n     * Signal emitted when the manager is initialized.\n     */\n    get initialized() {\n        return this._initialized;\n    }\n    /**\n     * Signal emitted when the manager is connected to the server\n     */\n    get connected() {\n        return this._connected;\n    }\n    /**\n     * Connection temporarily lost or could not be fully established; a re-connection will be attempted;\n     */\n    get disconnected() {\n        return this._disconnected;\n    }\n    /**\n     * Connection was closed permanently and no-reconnection will be attempted, e.g.:\n     *  - there was a serious server error\n     *  - user closed the connection,\n     *  - re-connection attempts exceeded,\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Signal emitted when the document is changed.\n     */\n    get documentsChanged() {\n        return this._documentsChanged;\n    }\n    /**\n     * Promise resolved when the language server manager is ready.\n     */\n    get ready() {\n        return Private.getLanguageServerManager().ready;\n    }\n    /**\n     * Helper to connect various virtual document signal with callbacks of\n     * this class.\n     *\n     * @param  virtualDocument - virtual document to be connected.\n     */\n    connectDocumentSignals(virtualDocument) {\n        virtualDocument.foreignDocumentOpened.connect(this.onForeignDocumentOpened, this);\n        virtualDocument.foreignDocumentClosed.connect(this.onForeignDocumentClosed, this);\n        this.documents.set(virtualDocument.uri, virtualDocument);\n        this._documentsChanged.emit(this.documents);\n    }\n    /**\n     * Helper to disconnect various virtual document signal with callbacks of\n     * this class.\n     *\n     * @param  virtualDocument - virtual document to be disconnected.\n     */\n    disconnectDocumentSignals(virtualDocument, emit = true) {\n        virtualDocument.foreignDocumentOpened.disconnect(this.onForeignDocumentOpened, this);\n        virtualDocument.foreignDocumentClosed.disconnect(this.onForeignDocumentClosed, this);\n        this.documents.delete(virtualDocument.uri);\n        for (const foreign of virtualDocument.foreignDocuments.values()) {\n            this.disconnectDocumentSignals(foreign, false);\n        }\n        if (emit) {\n            this._documentsChanged.emit(this.documents);\n        }\n    }\n    /**\n     * Handle foreign document opened event.\n     */\n    onForeignDocumentOpened(_host, context) {\n        /** no-op */\n    }\n    /**\n     * Handle foreign document closed event.\n     */\n    onForeignDocumentClosed(_host, context) {\n        const { foreignDocument } = context;\n        this.unregisterDocument(foreignDocument.uri, false);\n        this.disconnectDocumentSignals(foreignDocument);\n    }\n    /**\n     * @deprecated\n     *\n     * Register a widget adapter with this manager\n     *\n     * @param  path - path to the inner document of the adapter\n     * @param  adapter - the adapter to be registered\n     */\n    registerAdapter(path, adapter) {\n        this.adapters.set(path, adapter);\n        adapter.widget.context.pathChanged.connect((context, newPath) => {\n            this.adapters.delete(path);\n            this.adapters.set(newPath, adapter);\n        });\n        adapter.disposed.connect(() => {\n            if (adapter.virtualDocument) {\n                this.documents.delete(adapter.virtualDocument.uri);\n            }\n            this.adapters.delete(path);\n        });\n    }\n    /**\n     * Handles the settings that do not require an existing connection\n     * with a language server (or can influence to which server the\n     * connection will be created, e.g. `rank`).\n     *\n     * This function should be called **before** initialization of servers.\n     */\n    updateConfiguration(allServerSettings) {\n        this.languageServerManager.setConfiguration(allServerSettings);\n    }\n    /**\n     * Handles the settings that the language servers accept using\n     * `onDidChangeConfiguration` messages, which should be passed under\n     * the \"serverSettings\" keyword in the setting registry.\n     * Other configuration options are handled by `updateConfiguration` instead.\n     *\n     * This function should be called **after** initialization of servers.\n     */\n    updateServerConfigurations(allServerSettings) {\n        let languageServerId;\n        for (languageServerId in allServerSettings) {\n            if (!allServerSettings.hasOwnProperty(languageServerId)) {\n                continue;\n            }\n            const rawSettings = allServerSettings[languageServerId];\n            const parsedSettings = expandDottedPaths(rawSettings.configuration || {});\n            const serverSettings = {\n                settings: parsedSettings\n            };\n            Private.updateServerConfiguration(languageServerId, serverSettings);\n        }\n    }\n    /**\n     * Retry to connect to the server each `reconnectDelay` seconds\n     * and for `retrialsLeft` times.\n     * TODO: presently no longer referenced. A failing connection would close\n     * the socket, triggering the language server on the other end to exit.\n     */\n    async retryToConnect(options, reconnectDelay, retrialsLeft = -1) {\n        let { virtualDocument } = options;\n        if (this._ignoredLanguages.has(virtualDocument.language)) {\n            return;\n        }\n        let interval = reconnectDelay * 1000;\n        let success = false;\n        while (retrialsLeft !== 0 && !success) {\n            await this.connect(options)\n                .then(() => {\n                success = true;\n            })\n                .catch(e => {\n                console.warn(e);\n            });\n            console.log('will attempt to re-connect in ' + interval / 1000 + ' seconds');\n            await sleep(interval);\n            // gradually increase the time delay, up to 5 sec\n            interval = interval < 5 * 1000 ? interval + 500 : interval;\n        }\n    }\n    /**\n     * Disconnect the connection to the language server of the requested\n     * language.\n     */\n    disconnect(languageId) {\n        Private.disconnect(languageId);\n    }\n    /**\n     * Create a new connection to the language server\n     * @return A promise of the LSP connection\n     */\n    async connect(options, firstTimeoutSeconds = 30, secondTimeoutMinutes = 5) {\n        let connection = await this._connectSocket(options);\n        let { virtualDocument } = options;\n        if (!connection) {\n            return;\n        }\n        if (!connection.isReady) {\n            try {\n                // user feedback hinted that 40 seconds was too short and some users are willing to wait more;\n                // to make the best of both worlds we first check frequently (6.6 times a second) for the first\n                // 30 seconds, and show the warning early in case if something is wrong; we then continue retrying\n                // for another 5 minutes, but only once per second.\n                await untilReady(() => connection.isReady, Math.round((firstTimeoutSeconds * 1000) / 150), 150);\n            }\n            catch (_a) {\n                console.log(`Connection to ${virtualDocument.uri} timed out after ${firstTimeoutSeconds} seconds, will continue retrying for another ${secondTimeoutMinutes} minutes`);\n                try {\n                    await untilReady(() => connection.isReady, 60 * secondTimeoutMinutes, 1000);\n                }\n                catch (_b) {\n                    console.log(`Connection to ${virtualDocument.uri} timed out again after ${secondTimeoutMinutes} minutes, giving up`);\n                    return;\n                }\n            }\n        }\n        this._connected.emit({ connection, virtualDocument });\n        return connection;\n    }\n    /**\n     * Disconnect the signals of requested virtual document URI.\n     */\n    unregisterDocument(uri, emit = true) {\n        const connection = this.connections.get(uri);\n        if (connection) {\n            this.connections.delete(uri);\n            const allConnection = new Set(this.connections.values());\n            if (!allConnection.has(connection)) {\n                this.disconnect(connection.serverIdentifier);\n                connection.dispose();\n            }\n            if (emit) {\n                this._documentsChanged.emit(this.documents);\n            }\n        }\n    }\n    /**\n     * Enable or disable the logging of language server communication.\n     */\n    updateLogging(logAllCommunication, setTrace) {\n        for (const connection of this.connections.values()) {\n            connection.logAllCommunication = logAllCommunication;\n            if (setTrace !== null) {\n                connection.clientNotifications['$/setTrace'].emit({ value: setTrace });\n            }\n        }\n    }\n    /**\n     * Create the LSP connection for requested virtual document.\n     *\n     * @return  Return the promise of the LSP connection.\n     */\n    async _connectSocket(options) {\n        let { language, capabilities, virtualDocument } = options;\n        this.connectDocumentSignals(virtualDocument);\n        const uris = DocumentConnectionManager.solveUris(virtualDocument, language);\n        const matchingServers = this.languageServerManager.getMatchingServers({\n            language\n        });\n        // for now use only the server with the highest rank.\n        const languageServerId = matchingServers.length === 0 ? null : matchingServers[0];\n        // lazily load 1) the underlying library (1.5mb) and/or 2) a live WebSocket-\n        // like connection: either already connected or potentially in the process\n        // of connecting.\n        if (!uris) {\n            return;\n        }\n        const connection = await Private.connection(language, languageServerId, uris, this.onNewConnection, capabilities);\n        // if connecting for the first time, all documents subsequent documents will\n        // be re-opened and synced\n        this.connections.set(virtualDocument.uri, connection);\n        return connection;\n    }\n    /**\n     * Helper to apply callback on all documents of a connection.\n     */\n    _forEachDocumentOfConnection(connection, callback) {\n        for (const [virtualDocumentUri, currentConnection] of this.connections.entries()) {\n            if (connection !== currentConnection) {\n                continue;\n            }\n            callback(this.documents.get(virtualDocumentUri));\n        }\n    }\n}\n(function (DocumentConnectionManager) {\n    /**\n     * Generate the URI of a virtual document from input\n     *\n     * @param  virtualDocument - the virtual document\n     * @param  language - language of the document\n     */\n    function solveUris(virtualDocument, language) {\n        var _a;\n        const serverManager = Private.getLanguageServerManager();\n        const wsBase = serverManager.settings.wsUrl;\n        const rootUri = PageConfig.getOption('rootUri');\n        const virtualDocumentsUri = PageConfig.getOption('virtualDocumentsUri');\n        // for now take the best match only\n        const serverOptions = {\n            language\n        };\n        const matchingServers = serverManager.getMatchingServers(serverOptions);\n        const languageServerId = matchingServers.length === 0 ? null : matchingServers[0];\n        if (languageServerId === null) {\n            return;\n        }\n        const specs = serverManager.getMatchingSpecs(serverOptions);\n        const spec = specs.get(languageServerId);\n        if (!spec) {\n            console.warn(`Specification not available for server ${languageServerId}`);\n        }\n        const requiresOnDiskFiles = (_a = spec === null || spec === void 0 ? void 0 : spec.requires_documents_on_disk) !== null && _a !== void 0 ? _a : true;\n        const supportsInMemoryFiles = !requiresOnDiskFiles;\n        const baseUri = virtualDocument.hasLspSupportedFile || supportsInMemoryFiles\n            ? rootUri\n            : virtualDocumentsUri;\n        // workaround url-parse bug(s) (see https://github.com/jupyter-lsp/jupyterlab-lsp/issues/595)\n        let documentUri = URLExt.join(baseUri, virtualDocument.uri);\n        if (!documentUri.startsWith('file:///') &&\n            documentUri.startsWith('file://')) {\n            documentUri = documentUri.replace('file://', 'file:///');\n            if (documentUri.startsWith('file:///users/') &&\n                baseUri.startsWith('file:///Users/')) {\n                documentUri = documentUri.replace('file:///users/', 'file:///Users/');\n            }\n        }\n        return {\n            base: baseUri,\n            document: documentUri,\n            server: URLExt.join('ws://jupyter-lsp', language),\n            socket: URLExt.join(wsBase, 'lsp', 'ws', languageServerId)\n        };\n    }\n    DocumentConnectionManager.solveUris = solveUris;\n})(DocumentConnectionManager || (DocumentConnectionManager = {}));\n/**\n * Namespace primarily for language-keyed cache of LSPConnections\n */\nvar Private;\n(function (Private) {\n    const _connections = new Map();\n    let _languageServerManager;\n    function getLanguageServerManager() {\n        return _languageServerManager;\n    }\n    Private.getLanguageServerManager = getLanguageServerManager;\n    function setLanguageServerManager(languageServerManager) {\n        _languageServerManager = languageServerManager;\n    }\n    Private.setLanguageServerManager = setLanguageServerManager;\n    function disconnect(languageServerId) {\n        const connection = _connections.get(languageServerId);\n        if (connection) {\n            connection.close();\n            _connections.delete(languageServerId);\n        }\n    }\n    Private.disconnect = disconnect;\n    /**\n     * Return (or create and initialize) the WebSocket associated with the language\n     */\n    async function connection(language, languageServerId, uris, onCreate, capabilities) {\n        let connection = _connections.get(languageServerId);\n        if (!connection) {\n            const { settings } = Private.getLanguageServerManager();\n            const socket = new settings.WebSocket(uris.socket);\n            const connection = new LSPConnection({\n                languageId: language,\n                serverUri: uris.server,\n                rootUri: uris.base,\n                serverIdentifier: languageServerId,\n                capabilities: capabilities\n            });\n            _connections.set(languageServerId, connection);\n            connection.connect(socket);\n            onCreate(connection);\n        }\n        connection = _connections.get(languageServerId);\n        return connection;\n    }\n    Private.connection = connection;\n    function updateServerConfiguration(languageServerId, settings) {\n        const connection = _connections.get(languageServerId);\n        if (connection) {\n            connection.sendConfigurationChange(settings);\n        }\n    }\n    Private.updateServerConfiguration = updateServerConfiguration;\n})(Private || (Private = {}));\n//# sourceMappingURL=connection_manager.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Compare two `IPosition` variable.\n *\n */\nexport function isEqual(self, other) {\n    return other && self.line === other.line && self.ch === other.ch;\n}\n/**\n * Given a list of line and an offset from the start, compute the corresponding\n * position in form of line and column number\n *\n * @param offset - number of spaces counted from the start of first line\n * @param  lines - list of lines to compute the position\n * @return  - the position of cursor\n */\nexport function positionAtOffset(offset, lines) {\n    let line = 0;\n    let column = 0;\n    for (let textLine of lines) {\n        // each line has a new line symbol which is accounted for in offset!\n        if (textLine.length + 1 <= offset) {\n            offset -= textLine.length + 1;\n            line += 1;\n        }\n        else {\n            column = offset;\n            break;\n        }\n    }\n    return { line, column };\n}\n/**\n * Given a list of line and position in form of line and column number,\n * compute the offset from the start of first line.\n * @param position - position of cursor\n * @param  lines - list of lines to compute the position\n * @param linesIncludeBreaks - should count the line break as space?\n * return - offset number\n */\nexport function offsetAtPosition(position, lines, linesIncludeBreaks = false) {\n    let breakIncrement = linesIncludeBreaks ? 0 : 1;\n    let offset = 0;\n    for (let i = 0; i < lines.length; i++) {\n        let textLine = lines[i];\n        if (position.line > i) {\n            offset += textLine.length + breakIncrement;\n        }\n        else {\n            offset += position.column;\n            break;\n        }\n    }\n    return offset;\n}\nexport var ProtocolCoordinates;\n(function (ProtocolCoordinates) {\n    /**\n     * Check if the position is in the input range\n     *\n     * @param position - position in form of line and character number.\n     * @param  range - range in from of start and end position.\n     */\n    function isWithinRange(position, range) {\n        const { line, character } = position;\n        return (line >= range.start.line &&\n            line <= range.end.line &&\n            // need to be non-overlapping see https://github.com/jupyter-lsp/jupyterlab-lsp/issues/628\n            (line != range.start.line || character > range.start.character) &&\n            (line != range.end.line || character <= range.end.character));\n    }\n    ProtocolCoordinates.isWithinRange = isWithinRange;\n})(ProtocolCoordinates || (ProtocolCoordinates = {}));\n//# sourceMappingURL=positioning.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { AbstractMessageWriter } from 'vscode-jsonrpc/lib/common/messageWriter';\r\nexport class WebSocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket) {\r\n        super();\r\n        this.socket = socket;\r\n        this.errorCount = 0;\r\n    }\r\n    end() {\r\n    }\r\n    async write(msg) {\r\n        try {\r\n            const content = JSON.stringify(msg);\r\n            this.socket.send(content);\r\n        }\r\n        catch (e) {\r\n            this.errorCount++;\r\n            this.fireError(e, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=writer.js.map","export class ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n    debug(message) {\r\n        console.debug(message);\r\n    }\r\n}\r\n//# sourceMappingURL=logger.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n// Disclaimer/acknowledgement: Fragments are based on https://github.com/wylieconlon/lsp-editor-adapter,\n// which is copyright of wylieconlon and contributors and ISC licenced.\n// ISC licence is, quote, \"functionally equivalent to the simplified BSD and MIT licenses,\n// but without language deemed unnecessary following the Berne Convention.\" (Wikipedia).\n// Introduced modifications are BSD licenced, copyright JupyterLab development team.\nimport { ConsoleLogger, listen } from 'vscode-ws-jsonrpc';\nimport { Signal } from '@lumino/signaling';\nimport { registerServerCapability, unregisterServerCapability } from './server-capability-registration';\nexport class LspWsConnection {\n    constructor(options) {\n        /**\n         * Map to track opened virtual documents..\n         */\n        this.openedUris = new Map();\n        /**\n         * The connection is connected?\n         */\n        this._isConnected = false;\n        /**\n         * The connection is initialized?\n         */\n        this._isInitialized = false;\n        /**\n         * Array of LSP callback disposables, it is used to\n         * clear the callbacks when the connection is disposed.\n         */\n        this._disposables = [];\n        this._disposed = new Signal(this);\n        this._isDisposed = false;\n        this._rootUri = options.rootUri;\n    }\n    /**\n     * Is the language server is connected?\n     */\n    get isConnected() {\n        return this._isConnected;\n    }\n    /**\n     * Is the language server is initialized?\n     */\n    get isInitialized() {\n        return this._isInitialized;\n    }\n    /**\n     * Is the language server is connected and initialized?\n     */\n    get isReady() {\n        return this._isConnected && this._isInitialized;\n    }\n    /**\n     * A signal emitted when the connection is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Check if the connection is disposed\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Initialize a connection over a web socket that speaks the LSP protocol\n     */\n    connect(socket) {\n        this.socket = socket;\n        listen({\n            webSocket: this.socket,\n            logger: new ConsoleLogger(),\n            onConnection: (connection) => {\n                connection.listen();\n                this._isConnected = true;\n                this.connection = connection;\n                this.sendInitialize();\n                const registerCapabilityDisposable = this.connection.onRequest('client/registerCapability', (params) => {\n                    params.registrations.forEach((capabilityRegistration) => {\n                        try {\n                            this.serverCapabilities = registerServerCapability(this.serverCapabilities, capabilityRegistration);\n                        }\n                        catch (err) {\n                            console.error(err);\n                        }\n                    });\n                });\n                this._disposables.push(registerCapabilityDisposable);\n                const unregisterCapabilityDisposable = this.connection.onRequest('client/unregisterCapability', (params) => {\n                    params.unregisterations.forEach((capabilityUnregistration) => {\n                        this.serverCapabilities = unregisterServerCapability(this.serverCapabilities, capabilityUnregistration);\n                    });\n                });\n                this._disposables.push(unregisterCapabilityDisposable);\n                const disposable = this.connection.onClose(() => {\n                    this._isConnected = false;\n                });\n                this._disposables.push(disposable);\n            }\n        });\n    }\n    /**\n     * Close the connection\n     */\n    close() {\n        if (this.connection) {\n            this.connection.dispose();\n        }\n        this.openedUris.clear();\n        this.socket.close();\n    }\n    /**\n     * The initialize request telling the server which options the client supports\n     */\n    sendInitialize() {\n        if (!this._isConnected) {\n            return;\n        }\n        this.openedUris.clear();\n        const message = this.initializeParams();\n        this.connection\n            .sendRequest('initialize', message)\n            .then(params => {\n            this.onServerInitialized(params);\n        }, e => {\n            console.warn('LSP websocket connection initialization failure', e);\n        });\n    }\n    /**\n     * Inform the server that the document was opened\n     */\n    sendOpen(documentInfo) {\n        const textDocumentMessage = {\n            textDocument: {\n                uri: documentInfo.uri,\n                languageId: documentInfo.languageId,\n                text: documentInfo.text,\n                version: documentInfo.version\n            }\n        };\n        this.connection\n            .sendNotification('textDocument/didOpen', textDocumentMessage)\n            .catch(console.error);\n        this.openedUris.set(documentInfo.uri, true);\n        this.sendChange(documentInfo);\n    }\n    /**\n     * Sends the full text of the document to the server\n     */\n    sendChange(documentInfo) {\n        if (!this.isReady) {\n            return;\n        }\n        if (!this.openedUris.get(documentInfo.uri)) {\n            this.sendOpen(documentInfo);\n            return;\n        }\n        const textDocumentChange = {\n            textDocument: {\n                uri: documentInfo.uri,\n                version: documentInfo.version\n            },\n            contentChanges: [{ text: documentInfo.text }]\n        };\n        this.connection\n            .sendNotification('textDocument/didChange', textDocumentChange)\n            .catch(console.error);\n        documentInfo.version++;\n    }\n    /**\n     * Send save notification to the server.\n     */\n    sendSaved(documentInfo) {\n        if (!this.isReady) {\n            return;\n        }\n        const textDocumentChange = {\n            textDocument: {\n                uri: documentInfo.uri,\n                version: documentInfo.version\n            },\n            text: documentInfo.text\n        };\n        this.connection\n            .sendNotification('textDocument/didSave', textDocumentChange)\n            .catch(console.error);\n    }\n    /**\n     * Send configuration change to the server.\n     */\n    sendConfigurationChange(settings) {\n        if (!this.isReady) {\n            return;\n        }\n        this.connection\n            .sendNotification('workspace/didChangeConfiguration', settings)\n            .catch(console.error);\n    }\n    /**\n     * Dispose the connection.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach(disposable => {\n            disposable.dispose();\n        });\n        this._disposed.emit();\n        Signal.clearData(this);\n    }\n    /**\n     * Callback called when the server is initialized.\n     */\n    onServerInitialized(params) {\n        this._isInitialized = true;\n        this.serverCapabilities = params.capabilities;\n        this.connection.sendNotification('initialized', {}).catch(console.error);\n        this.connection\n            .sendNotification('workspace/didChangeConfiguration', {\n            settings: {}\n        })\n            .catch(console.error);\n    }\n    /**\n     * Initialization parameters to be sent to the language server.\n     * Subclasses should override this when adding more features.\n     */\n    initializeParams() {\n        return {\n            capabilities: {},\n            processId: null,\n            rootUri: this._rootUri,\n            workspaceFolders: null\n        };\n    }\n}\n//# sourceMappingURL=ws-connection.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { createWebSocketConnection } from './socket';\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { ConsoleLogger } from './logger';\r\nexport function listen(options) {\r\n    const { webSocket, onConnection } = options;\r\n    const logger = options.logger || new ConsoleLogger();\r\n    webSocket.onopen = () => {\r\n        const socket = toSocket(webSocket);\r\n        const connection = createWebSocketConnection(socket, logger);\r\n        onConnection(connection);\r\n    };\r\n}\r\nexport function toSocket(webSocket) {\r\n    return {\r\n        send: content => webSocket.send(content),\r\n        onMessage: cb => {\r\n            webSocket.onmessage = event => cb(event.data);\r\n        },\r\n        onError: cb => {\r\n            webSocket.onerror = event => {\r\n                if ('message' in event) {\r\n                    cb(event.message);\r\n                }\r\n            };\r\n        },\r\n        onClose: cb => {\r\n            webSocket.onclose = event => cb(event.code, event.reason);\r\n        },\r\n        dispose: () => webSocket.close()\r\n    };\r\n}\r\n//# sourceMappingURL=connection.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { createMessageConnection } from 'vscode-jsonrpc';\r\nimport { WebSocketMessageReader } from './reader';\r\nimport { WebSocketMessageWriter } from './writer';\r\nexport function createWebSocketConnection(socket, logger) {\r\n    const messageReader = new WebSocketMessageReader(socket);\r\n    const messageWriter = new WebSocketMessageWriter(socket);\r\n    const connection = createMessageConnection(messageReader, messageWriter, logger);\r\n    connection.onClose(() => connection.dispose());\r\n    return connection;\r\n}\r\n//# sourceMappingURL=connection.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Manager for the code extractors\n */\nexport class CodeExtractorsManager {\n    constructor() {\n        this._extractorMap = new Map();\n        this._extractorMapAnyLanguage = new Map();\n    }\n    /**\n     * Get the extractors for the input cell type and the main language of\n     * the document\n     *\n     * @param  cellType - type of cell\n     * @param  hostLanguage - main language of the document\n     */\n    getExtractors(cellType, hostLanguage) {\n        var _a, _b;\n        if (hostLanguage) {\n            const currentMap = this._extractorMap.get(cellType);\n            if (!currentMap) {\n                return [];\n            }\n            return (_a = currentMap.get(hostLanguage)) !== null && _a !== void 0 ? _a : [];\n        }\n        else {\n            return (_b = this._extractorMapAnyLanguage.get(cellType)) !== null && _b !== void 0 ? _b : [];\n        }\n    }\n    /**\n     * Register an extractor to extract foreign code from host documents of specified language.\n     */\n    register(extractor, hostLanguage) {\n        const cellType = extractor.cellType;\n        if (hostLanguage) {\n            cellType.forEach(type => {\n                if (!this._extractorMap.has(type)) {\n                    this._extractorMap.set(type, new Map());\n                }\n                const currentMap = this._extractorMap.get(type);\n                const extractorList = currentMap.get(hostLanguage);\n                if (!extractorList) {\n                    currentMap.set(hostLanguage, [extractor]);\n                }\n                else {\n                    extractorList.push(extractor);\n                }\n            });\n        }\n        else {\n            cellType.forEach(type => {\n                if (!this._extractorMapAnyLanguage.has(type)) {\n                    this._extractorMapAnyLanguage.set(type, []);\n                }\n                this._extractorMapAnyLanguage.get(type).push(extractor);\n            });\n        }\n    }\n}\n//# sourceMappingURL=manager.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { positionAtOffset } from '../positioning';\n/**\n * The code extractor for the raw and markdown text.\n */\nexport class TextForeignCodeExtractor {\n    constructor(options) {\n        this.language = options.language;\n        this.standalone = options.isStandalone;\n        this.fileExtension = options.file_extension;\n        this.cellType = options.cellType;\n    }\n    /**\n     * Test if there is any foreign code in provided code snippet.\n     */\n    hasForeignCode(code, cellType) {\n        return this.cellType.includes(cellType);\n    }\n    /**\n     * Split the code into the host and foreign code (if any foreign code was detected)\n     */\n    extractForeignCode(code) {\n        let lines = code.split('\\n');\n        let extracts = new Array();\n        let foreignCodeFragment = code;\n        let start = positionAtOffset(0, lines);\n        let end = positionAtOffset(foreignCodeFragment.length, lines);\n        extracts.push({\n            hostCode: '',\n            foreignCode: foreignCodeFragment,\n            range: { start, end },\n            virtualShift: null\n        });\n        return extracts;\n    }\n}\n//# sourceMappingURL=text_extractor.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\nimport mergeWith from 'lodash.mergewith';\n/**\n * Class to manager the registered features of the language servers.\n */\nexport class FeatureManager {\n    constructor() {\n        /**\n         * List of registered features\n         */\n        this.features = [];\n        this._featureRegistered = new Signal(this);\n    }\n    /**\n     * Signal emitted when a new feature is registered.\n     */\n    get featureRegistered() {\n        return this._featureRegistered;\n    }\n    /**\n     * Register a new feature, skip if it is already registered.\n     */\n    register(feature) {\n        if (this.features.some(ft => ft.id === feature.id)) {\n            console.warn(`Feature with id ${feature.id} is already registered, skipping.`);\n        }\n        else {\n            this.features.push(feature);\n            this._featureRegistered.emit(feature);\n        }\n    }\n    /**\n     * Get the capabilities of all clients.\n     */\n    clientCapabilities() {\n        let capabilities = {};\n        for (const feature of this.features) {\n            if (!feature.capabilities) {\n                continue;\n            }\n            capabilities = mergeWith(capabilities, feature.capabilities);\n        }\n        return capabilities;\n    }\n    /**\n     * Get the extension factories of all clients.\n     */\n    extensionFactories() {\n        const factories = [];\n        for (const feature of this.features) {\n            if (!feature.extensionFactory) {\n                continue;\n            }\n            factories.push(feature.extensionFactory);\n        }\n        return factories;\n    }\n}\n//# sourceMappingURL=feature.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { Signal } from '@lumino/signaling';\nimport { ILanguageServerManager } from './tokens';\nimport { PromiseDelegate } from '@lumino/coreutils';\nexport class LanguageServerManager {\n    constructor(options) {\n        /**\n         * map of language server sessions.\n         */\n        this._sessions = new Map();\n        /**\n         * Map of language server specs.\n         */\n        this._specs = new Map();\n        /**\n         * Set of emitted warning message, message in this set will not be warned again.\n         */\n        this._warningsEmitted = new Set();\n        /**\n         * A promise resolved when this server manager is ready.\n         */\n        this._ready = new PromiseDelegate();\n        /**\n         * Signal emitted when a  language server session is changed\n         */\n        this._sessionsChanged = new Signal(this);\n        this._isDisposed = false;\n        /**\n         * Check if the manager is enabled or disabled\n         */\n        this._enabled = true;\n        this._settings = options.settings || ServerConnection.makeSettings();\n        this._baseUrl = options.baseUrl || PageConfig.getBaseUrl();\n        this._retries = options.retries || 2;\n        this._retriesInterval = options.retriesInterval || 10000;\n        this._statusCode = -1;\n        this._configuration = {};\n        this.fetchSessions().catch(e => console.log(e));\n    }\n    /**\n     * Check if the manager is enabled or disabled\n     */\n    get isEnabled() {\n        return this._enabled;\n    }\n    /**\n     * Check if the manager is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Get server connection settings.\n     */\n    get settings() {\n        return this._settings;\n    }\n    /**\n     * Get the language server specs.\n     */\n    get specs() {\n        return this._specs;\n    }\n    /**\n     * Get the status end point.\n     */\n    get statusUrl() {\n        return URLExt.join(this._baseUrl, ILanguageServerManager.URL_NS, 'status');\n    }\n    /**\n     * Signal emitted when a  language server session is changed\n     */\n    get sessionsChanged() {\n        return this._sessionsChanged;\n    }\n    /**\n     * Get the map of language server sessions.\n     */\n    get sessions() {\n        return this._sessions;\n    }\n    /**\n     * A promise resolved when this server manager is ready.\n     */\n    get ready() {\n        return this._ready.promise;\n    }\n    /**\n     * Get the status code of server's responses.\n     */\n    get statusCode() {\n        return this._statusCode;\n    }\n    /**\n     * Enable the language server services\n     */\n    async enable() {\n        this._enabled = true;\n        await this.fetchSessions();\n    }\n    /**\n     * Disable the language server services\n     */\n    disable() {\n        this._enabled = false;\n        this._sessions = new Map();\n        this._sessionsChanged.emit(void 0);\n    }\n    /**\n     * Dispose the manager.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        Signal.clearData(this);\n    }\n    /**\n     * Update the language server configuration.\n     */\n    setConfiguration(configuration) {\n        this._configuration = configuration;\n    }\n    /**\n     * Get matching language server for input language option.\n     */\n    getMatchingServers(options) {\n        if (!options.language) {\n            console.error('Cannot match server by language: language not available; ensure that kernel and specs provide language and MIME type');\n            return [];\n        }\n        const matchingSessionsKeys = [];\n        for (const [key, session] of this._sessions.entries()) {\n            if (this.isMatchingSpec(options, session.spec)) {\n                matchingSessionsKeys.push(key);\n            }\n        }\n        return matchingSessionsKeys.sort(this.compareRanks.bind(this));\n    }\n    /**\n     * Get matching language server spec for input language option.\n     */\n    getMatchingSpecs(options) {\n        const result = new Map();\n        for (const [key, specification] of this._specs.entries()) {\n            if (this.isMatchingSpec(options, specification)) {\n                result.set(key, specification);\n            }\n        }\n        return result;\n    }\n    /**\n     * Fetch the server session list from the status endpoint. The server\n     * manager is ready once this method finishes.\n     */\n    async fetchSessions() {\n        if (!this._enabled) {\n            return;\n        }\n        let response = await ServerConnection.makeRequest(this.statusUrl, { method: 'GET' }, this._settings);\n        this._statusCode = response.status;\n        if (!response.ok) {\n            if (this._retries > 0) {\n                this._retries -= 1;\n                setTimeout(this.fetchSessions.bind(this), this._retriesInterval);\n            }\n            else {\n                this._ready.resolve(undefined);\n                console.log('Missing jupyter_lsp server extension, skipping.');\n            }\n            return;\n        }\n        let sessions;\n        try {\n            const data = await response.json();\n            sessions = data.sessions;\n            try {\n                this.version = data.version;\n                this._specs = new Map(Object.entries(data.specs));\n            }\n            catch (err) {\n                console.warn(err);\n            }\n        }\n        catch (err) {\n            console.warn(err);\n            this._ready.resolve(undefined);\n            return;\n        }\n        for (let key of Object.keys(sessions)) {\n            let id = key;\n            if (this._sessions.has(id)) {\n                Object.assign(this._sessions.get(id) || {}, sessions[key]);\n            }\n            else {\n                this._sessions.set(id, sessions[key]);\n            }\n        }\n        const oldKeys = this._sessions.keys();\n        for (const oldKey in oldKeys) {\n            if (!sessions[oldKey]) {\n                let oldId = oldKey;\n                this._sessions.delete(oldId);\n            }\n        }\n        this._sessionsChanged.emit(void 0);\n        this._ready.resolve(undefined);\n    }\n    /**\n     * Check if input language option maths the language server spec.\n     */\n    isMatchingSpec(options, spec) {\n        // most things speak language\n        // if language is not known, it is guessed based on MIME type earlier\n        // so some language should be available by now (which can be not so obvious, e.g. \"plain\" for txt documents)\n        const lowerCaseLanguage = options.language.toLocaleLowerCase();\n        return spec.languages.some((language) => language.toLocaleLowerCase() == lowerCaseLanguage);\n    }\n    /**\n     * Helper function to warn a message only once.\n     */\n    warnOnce(arg) {\n        if (!this._warningsEmitted.has(arg)) {\n            this._warningsEmitted.add(arg);\n            console.warn(arg);\n        }\n    }\n    /**\n     * Compare the rank of two servers with the same language.\n     */\n    compareRanks(a, b) {\n        var _a, _b, _c, _d;\n        const DEFAULT_RANK = 50;\n        const aRank = (_b = (_a = this._configuration[a]) === null || _a === void 0 ? void 0 : _a.rank) !== null && _b !== void 0 ? _b : DEFAULT_RANK;\n        const bRank = (_d = (_c = this._configuration[b]) === null || _c === void 0 ? void 0 : _c.rank) !== null && _d !== void 0 ? _d : DEFAULT_RANK;\n        if (aRank == bRank) {\n            this.warnOnce(`Two matching servers: ${a} and ${b} have the same rank; choose which one to use by changing the rank in Advanced Settings Editor`);\n            return a.localeCompare(b);\n        }\n        // higher rank = higher in the list (descending order)\n        return bRank - aRank;\n    }\n}\n//# sourceMappingURL=manager.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\nimport { DocumentConnectionManager } from '../connection_manager';\nimport { DefaultMap, untilReady } from '../utils';\n/**\n * Check if given position is within range.\n * Both start and end are inclusive.\n * @param position\n * @param range\n */\nexport function isWithinRange(position, range) {\n    if (range.start.line === range.end.line) {\n        return (position.line === range.start.line &&\n            position.column >= range.start.column &&\n            position.column <= range.end.column);\n    }\n    return ((position.line === range.start.line &&\n        position.column >= range.start.column &&\n        position.line < range.end.line) ||\n        (position.line > range.start.line &&\n            position.column <= range.end.column &&\n            position.line === range.end.line) ||\n        (position.line > range.start.line && position.line < range.end.line));\n}\n/**\n * A virtual implementation of IDocumentInfo\n */\nexport class VirtualDocumentInfo {\n    /**\n     * Creates an instance of VirtualDocumentInfo.\n     * @param document - the virtual document need to\n     * be wrapped.\n     */\n    constructor(document) {\n        /**\n         * Current version of the virtual document.\n         */\n        this.version = 0;\n        this._document = document;\n    }\n    /**\n     * Get the text content of the virtual document.\n     */\n    get text() {\n        return this._document.value;\n    }\n    /**\n     * Get the uri of the virtual document, if the document is not available,\n     * it returns an empty string, users need to check for the length of returned\n     * value before using it.\n     */\n    get uri() {\n        const uris = DocumentConnectionManager.solveUris(this._document, this.languageId);\n        if (!uris) {\n            return '';\n        }\n        return uris.document;\n    }\n    /**\n     * Get the language identifier of the document.\n     */\n    get languageId() {\n        return this._document.language;\n    }\n}\n/**\n *\n * A notebook can hold one or more virtual documents; there is always one,\n * \"root\" document, corresponding to the language of the kernel. All other\n * virtual documents are extracted out of the notebook, based on magics,\n * or other syntax constructs, depending on the kernel language.\n *\n * Virtual documents represent the underlying code in a single language,\n * which has been parsed excluding interactive kernel commands (magics)\n * which could be misunderstood by the specific LSP server.\n *\n * VirtualDocument has no awareness of the notebook or editor it lives in,\n * however it is able to transform its content back to the notebook space,\n * as it keeps editor coordinates for each virtual line.\n *\n * The notebook/editor aware transformations are preferred to be placed in\n * VirtualEditor descendants rather than here.\n *\n * No dependency on editor implementation (such as CodeMirrorEditor)\n * is allowed for VirtualEditor.\n */\nexport class VirtualDocument {\n    constructor(options) {\n        /**\n         * Number of blank lines appended to the virtual document between\n         * each cell.\n         */\n        this.blankLinesBetweenCells = 2;\n        this._isDisposed = false;\n        this._foreignDocumentClosed = new Signal(this);\n        this._foreignDocumentOpened = new Signal(this);\n        this._changed = new Signal(this);\n        this.options = options;\n        this.path = this.options.path;\n        this.fileExtension = options.fileExtension;\n        this.hasLspSupportedFile = options.hasLspSupportedFile;\n        this.parent = options.parent;\n        this.language = options.language;\n        this.virtualLines = new Map();\n        this.sourceLines = new Map();\n        this.foreignDocuments = new Map();\n        this._editorToSourceLine = new Map();\n        this._foreignCodeExtractors = options.foreignCodeExtractors;\n        this.standalone = options.standalone || false;\n        this.instanceId = VirtualDocument.instancesCount;\n        VirtualDocument.instancesCount += 1;\n        this.unusedStandaloneDocuments = new DefaultMap(() => new Array());\n        this._remainingLifetime = 6;\n        this.documentInfo = new VirtualDocumentInfo(this);\n        this.updateManager = new UpdateManager(this);\n        this.updateManager.updateBegan.connect(this._updateBeganSlot, this);\n        this.updateManager.blockAdded.connect(this._blockAddedSlot, this);\n        this.updateManager.updateFinished.connect(this._updateFinishedSlot, this);\n        this.clear();\n    }\n    /**\n     * Convert from code editor position into code mirror position.\n     */\n    static ceToCm(position) {\n        return { line: position.line, ch: position.column };\n    }\n    /**\n     * Test whether the document is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Signal emitted when the foreign document is closed\n     */\n    get foreignDocumentClosed() {\n        return this._foreignDocumentClosed;\n    }\n    /**\n     * Signal emitted when the foreign document is opened\n     */\n    get foreignDocumentOpened() {\n        return this._foreignDocumentOpened;\n    }\n    /**\n     * Signal emitted when the foreign document is changed\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Id of the virtual document.\n     */\n    get virtualId() {\n        // for easier debugging, the language information is included in the ID:\n        return this.standalone\n            ? this.instanceId + '(' + this.language + ')'\n            : this.language;\n    }\n    /**\n     * Return the ancestry to this document.\n     */\n    get ancestry() {\n        if (!this.parent) {\n            return [this];\n        }\n        return this.parent.ancestry.concat([this]);\n    }\n    /**\n     * Return the id path to the virtual document.\n     */\n    get idPath() {\n        if (!this.parent) {\n            return this.virtualId;\n        }\n        return this.parent.idPath + '-' + this.virtualId;\n    }\n    /**\n     * Get the uri of the virtual document.\n     */\n    get uri() {\n        const encodedPath = encodeURI(this.path);\n        if (!this.parent) {\n            return encodedPath;\n        }\n        return encodedPath + '.' + this.idPath + '.' + this.fileExtension;\n    }\n    /**\n     * Get the text value of the document\n     */\n    get value() {\n        let linesPadding = '\\n'.repeat(this.blankLinesBetweenCells);\n        return this.lineBlocks.join(linesPadding);\n    }\n    /**\n     * Get the last line in the virtual document\n     */\n    get lastLine() {\n        const linesInLastBlock = this.lineBlocks[this.lineBlocks.length - 1].split('\\n');\n        return linesInLastBlock[linesInLastBlock.length - 1];\n    }\n    /**\n     * Get the root document of current virtual document.\n     */\n    get root() {\n        return this.parent ? this.parent.root : this;\n    }\n    /**\n     * Dispose the virtual document.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this.parent = null;\n        this.closeAllForeignDocuments();\n        this.updateManager.dispose();\n        // clear all the maps\n        this.foreignDocuments.clear();\n        this.sourceLines.clear();\n        this.unusedStandaloneDocuments.clear();\n        this.virtualLines.clear();\n        // just to be sure - if anything is accessed after disposal (it should not) we\n        // will get altered by errors in the console AND this will limit memory leaks\n        this.documentInfo = null;\n        this.lineBlocks = null;\n        Signal.clearData(this);\n    }\n    /**\n     * Clear the virtual document and all related stuffs\n     */\n    clear() {\n        this.unusedStandaloneDocuments.clear();\n        for (let document of this.foreignDocuments.values()) {\n            document.clear();\n            if (document.standalone) {\n                let set = this.unusedStandaloneDocuments.get(document.language);\n                set.push(document);\n            }\n        }\n        this.virtualLines.clear();\n        this.sourceLines.clear();\n        this.lastVirtualLine = 0;\n        this.lastSourceLine = 0;\n        this.lineBlocks = [];\n    }\n    /**\n     * Get the virtual document from the cursor position of the source\n     * document\n     * @param position - position in source document\n     */\n    documentAtSourcePosition(position) {\n        let sourceLine = this.sourceLines.get(position.line);\n        if (!sourceLine) {\n            return this;\n        }\n        let sourcePositionCe = {\n            line: sourceLine.editorLine,\n            column: position.ch\n        };\n        for (let [range, { virtualDocument: document }] of sourceLine.foreignDocumentsMap) {\n            if (isWithinRange(sourcePositionCe, range)) {\n                let sourcePositionCm = {\n                    line: sourcePositionCe.line - range.start.line,\n                    ch: sourcePositionCe.column - range.start.column\n                };\n                return document.documentAtSourcePosition(sourcePositionCm);\n            }\n        }\n        return this;\n    }\n    /**\n     * Detect if the input source position is belong to the current\n     * virtual document.\n     *\n     * @param sourcePosition - position in the source document\n     */\n    isWithinForeign(sourcePosition) {\n        let sourceLine = this.sourceLines.get(sourcePosition.line);\n        let sourcePositionCe = {\n            line: sourceLine.editorLine,\n            column: sourcePosition.ch\n        };\n        for (let [range] of sourceLine.foreignDocumentsMap) {\n            if (isWithinRange(sourcePositionCe, range)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Compute the position in root document from the position of\n     * a child editor.\n     *\n     * @param editor - the active editor.\n     * @param position - position in the active editor.\n     */\n    transformFromEditorToRoot(editor, position) {\n        if (!this._editorToSourceLine.has(editor)) {\n            console.log('Editor not found in _editorToSourceLine map');\n            return null;\n        }\n        let shift = this._editorToSourceLine.get(editor);\n        return {\n            ...position,\n            line: position.line + shift\n        };\n    }\n    /**\n     * Compute the position in the virtual document from the position\n     * if the source document.\n     *\n     * @param sourcePosition - position in source document\n     */\n    virtualPositionAtDocument(sourcePosition) {\n        let sourceLine = this.sourceLines.get(sourcePosition.line);\n        if (sourceLine == null) {\n            throw new Error('Source line not mapped to virtual position');\n        }\n        let virtualLine = sourceLine.virtualLine;\n        // position inside the cell (block)\n        let sourcePositionCe = {\n            line: sourceLine.editorLine,\n            column: sourcePosition.ch\n        };\n        for (let [range, content] of sourceLine.foreignDocumentsMap) {\n            const { virtualLine, virtualDocument: document } = content;\n            if (isWithinRange(sourcePositionCe, range)) {\n                // position inside the foreign document block\n                let sourcePositionCm = {\n                    line: sourcePositionCe.line - range.start.line,\n                    ch: sourcePositionCe.column - range.start.column\n                };\n                if (document.isWithinForeign(sourcePositionCm)) {\n                    return this.virtualPositionAtDocument(sourcePositionCm);\n                }\n                else {\n                    // where in this block in the entire foreign document?\n                    sourcePositionCm.line += virtualLine;\n                    return sourcePositionCm;\n                }\n            }\n        }\n        return {\n            ch: sourcePosition.ch,\n            line: virtualLine\n        };\n    }\n    /**\n     * Append a code block to the end of the virtual document.\n     *\n     * @param  block - block to be appended\n     * @param  editorShift - position shift in source\n     * document\n     * @param  [virtualShift] - position shift in\n     * virtual document.\n     */\n    appendCodeBlock(block, editorShift = { line: 0, column: 0 }, virtualShift) {\n        let cellCode = block.value;\n        let ceEditor = block.ceEditor;\n        if (this.isDisposed) {\n            console.warn('Cannot append code block: document disposed');\n            return;\n        }\n        let sourceCellLines = cellCode.split('\\n');\n        let { lines, foreignDocumentsMap } = this.prepareCodeBlock(block, editorShift);\n        for (let i = 0; i < lines.length; i++) {\n            this.virtualLines.set(this.lastVirtualLine + i, {\n                skipInspect: [],\n                editor: ceEditor,\n                // TODO this is incorrect, won't work if something was extracted\n                sourceLine: this.lastSourceLine + i\n            });\n        }\n        for (let i = 0; i < sourceCellLines.length; i++) {\n            this.sourceLines.set(this.lastSourceLine + i, {\n                editorLine: i,\n                editorShift: {\n                    line: editorShift.line - ((virtualShift === null || virtualShift === void 0 ? void 0 : virtualShift.line) || 0),\n                    column: i === 0 ? editorShift.column - ((virtualShift === null || virtualShift === void 0 ? void 0 : virtualShift.column) || 0) : 0\n                },\n                // TODO: move those to a new abstraction layer (DocumentBlock class)\n                editor: ceEditor,\n                foreignDocumentsMap,\n                // TODO this is incorrect, won't work if something was extracted\n                virtualLine: this.lastVirtualLine + i\n            });\n        }\n        this.lastVirtualLine += lines.length;\n        // one empty line is necessary to separate code blocks, next 'n' lines are to silence linters;\n        // the final cell does not get the additional lines (thanks to the use of join, see below)\n        this.lineBlocks.push(lines.join('\\n') + '\\n');\n        // adding the virtual lines for the blank lines\n        for (let i = 0; i < this.blankLinesBetweenCells; i++) {\n            this.virtualLines.set(this.lastVirtualLine + i, {\n                skipInspect: [this.idPath],\n                editor: ceEditor,\n                sourceLine: null\n            });\n        }\n        this.lastVirtualLine += this.blankLinesBetweenCells;\n        this.lastSourceLine += sourceCellLines.length;\n    }\n    /**\n     * Extract a code block into list of string in supported language and\n     * a map of foreign document if any.\n     * @param  block - block to be appended\n     * @param  editorShift - position shift in source document\n     */\n    prepareCodeBlock(block, editorShift = { line: 0, column: 0 }) {\n        let { cellCodeKept, foreignDocumentsMap } = this.extractForeignCode(block, editorShift);\n        let lines = cellCodeKept.split('\\n');\n        return { lines, foreignDocumentsMap };\n    }\n    /**\n     * Extract the foreign code from input block by using the registered\n     * extractors.\n     * @param  block - block to be appended\n     * @param  editorShift - position shift in source document\n     */\n    extractForeignCode(block, editorShift) {\n        let foreignDocumentsMap = new Map();\n        let cellCode = block.value;\n        const extractorsForAnyLang = this._foreignCodeExtractors.getExtractors(block.type, null);\n        const extractorsForCurrentLang = this._foreignCodeExtractors.getExtractors(block.type, this.language);\n        for (let extractor of [\n            ...extractorsForAnyLang,\n            ...extractorsForCurrentLang\n        ]) {\n            if (!extractor.hasForeignCode(cellCode, block.type)) {\n                continue;\n            }\n            let results = extractor.extractForeignCode(cellCode);\n            let keptCellCode = '';\n            for (let result of results) {\n                if (result.foreignCode !== null) {\n                    // result.range should only be null if result.foregin_code is null\n                    if (result.range === null) {\n                        console.log('Failure in foreign code extraction: `range` is null but `foreign_code` is not!');\n                        continue;\n                    }\n                    let foreignDocument = this._chooseForeignDocument(extractor);\n                    foreignDocumentsMap.set(result.range, {\n                        virtualLine: foreignDocument.lastVirtualLine,\n                        virtualDocument: foreignDocument,\n                        editor: block.ceEditor\n                    });\n                    let foreignShift = {\n                        line: editorShift.line + result.range.start.line,\n                        column: editorShift.column + result.range.start.column\n                    };\n                    foreignDocument.appendCodeBlock({\n                        value: result.foreignCode,\n                        ceEditor: block.ceEditor,\n                        type: 'code'\n                    }, foreignShift, result.virtualShift);\n                }\n                if (result.hostCode != null) {\n                    keptCellCode += result.hostCode;\n                }\n            }\n            // not breaking - many extractors are allowed to process the code, one after each other\n            // (think JS and CSS in HTML, or %R inside of %%timeit).\n            cellCode = keptCellCode;\n        }\n        return { cellCodeKept: cellCode, foreignDocumentsMap };\n    }\n    /**\n     * Close a foreign document and disconnect all associated signals\n     */\n    closeForeign(document) {\n        this._foreignDocumentClosed.emit({\n            foreignDocument: document,\n            parentHost: this\n        });\n        // remove it from foreign documents list\n        this.foreignDocuments.delete(document.virtualId);\n        // and delete the documents within it\n        document.closeAllForeignDocuments();\n        document.foreignDocumentClosed.disconnect(this.forwardClosedSignal, this);\n        document.foreignDocumentOpened.disconnect(this.forwardOpenedSignal, this);\n        document.dispose();\n    }\n    /**\n     * Close all foreign documents.\n     */\n    closeAllForeignDocuments() {\n        for (let document of this.foreignDocuments.values()) {\n            this.closeForeign(document);\n        }\n    }\n    /**\n     * Close all expired documents.\n     */\n    closeExpiredDocuments() {\n        const usedDocuments = new Set();\n        for (const line of this.sourceLines.values()) {\n            for (const block of line.foreignDocumentsMap.values()) {\n                usedDocuments.add(block.virtualDocument);\n            }\n        }\n        const documentIDs = new Map();\n        for (const [id, document] of this.foreignDocuments.entries()) {\n            const ids = documentIDs.get(document);\n            if (typeof ids !== 'undefined') {\n                documentIDs.set(document, [...ids, id]);\n            }\n            documentIDs.set(document, [id]);\n        }\n        const allDocuments = new Set(documentIDs.keys());\n        const unusedVirtualDocuments = new Set([...allDocuments].filter(x => !usedDocuments.has(x)));\n        for (let document of unusedVirtualDocuments.values()) {\n            document.remainingLifetime -= 1;\n            if (document.remainingLifetime <= 0) {\n                document.dispose();\n                const ids = documentIDs.get(document);\n                for (const id of ids) {\n                    this.foreignDocuments.delete(id);\n                }\n            }\n        }\n    }\n    /**\n     * Transform the position of the source to the editor\n     * position.\n     *\n     * @param  pos - position in the source document\n     * @return position in the editor.\n     */\n    transformSourceToEditor(pos) {\n        let sourceLine = this.sourceLines.get(pos.line);\n        let editorLine = sourceLine.editorLine;\n        let editorShift = sourceLine.editorShift;\n        return {\n            // only shift column in the line beginning the virtual document (first list of the editor in cell magics, but might be any line of editor in line magics!)\n            ch: pos.ch + (editorLine === 0 ? editorShift.column : 0),\n            line: editorLine + editorShift.line\n            // TODO or:\n            //  line: pos.line + editor_shift.line - this.first_line_of_the_block(editor)\n        };\n    }\n    /**\n     * Transform the position in the virtual document to the\n     * editor position.\n     * Can be null because some lines are added as padding/anchors\n     * to the virtual document and those do not exist in the source document\n     * and thus they are absent in the editor.\n     */\n    transformVirtualToEditor(virtualPosition) {\n        let sourcePosition = this.transformVirtualToSource(virtualPosition);\n        if (sourcePosition == null) {\n            return null;\n        }\n        return this.transformSourceToEditor(sourcePosition);\n    }\n    /**\n     * Transform the position in the virtual document to the source.\n     * Can be null because some lines are added as padding/anchors\n     * to the virtual document and those do not exist in the source document.\n     */\n    transformVirtualToSource(position) {\n        const line = this.virtualLines.get(position.line).sourceLine;\n        if (line == null) {\n            return null;\n        }\n        return {\n            ch: position.ch,\n            line: line\n        };\n    }\n    /**\n     * Compute the position in root document from the position of\n     * a virtual document.\n     */\n    transformVirtualToRoot(position) {\n        var _a;\n        const editor = (_a = this.virtualLines.get(position.line)) === null || _a === void 0 ? void 0 : _a.editor;\n        const editorPosition = this.transformVirtualToEditor(position);\n        if (!editor || !editorPosition) {\n            return null;\n        }\n        return this.root.transformFromEditorToRoot(editor, editorPosition);\n    }\n    /**\n     * Get the corresponding editor of the virtual line.\n     */\n    getEditorAtVirtualLine(pos) {\n        let line = pos.line;\n        // tolerate overshot by one (the hanging blank line at the end)\n        if (!this.virtualLines.has(line)) {\n            line -= 1;\n        }\n        return this.virtualLines.get(line).editor;\n    }\n    /**\n     * Get the corresponding editor of the source line\n     */\n    getEditorAtSourceLine(pos) {\n        return this.sourceLines.get(pos.line).editor;\n    }\n    /**\n     * Recursively emits changed signal from the document or any descendant foreign document.\n     */\n    maybeEmitChanged() {\n        if (this.value !== this.previousValue) {\n            this._changed.emit(this);\n        }\n        this.previousValue = this.value;\n        for (let document of this.foreignDocuments.values()) {\n            document.maybeEmitChanged();\n        }\n    }\n    /**\n     * When this counter goes down to 0, the document will be destroyed and the associated connection will be closed;\n     * This is meant to reduce the number of open connections when a foreign code snippet was removed from the document.\n     *\n     * Note: top level virtual documents are currently immortal (unless killed by other means); it might be worth\n     * implementing culling of unused documents, but if and only if JupyterLab will also implement culling of\n     * idle kernels - otherwise the user experience could be a bit inconsistent, and we would need to invent our own rules.\n     */\n    get remainingLifetime() {\n        if (!this.parent) {\n            return Infinity;\n        }\n        return this._remainingLifetime;\n    }\n    set remainingLifetime(value) {\n        if (this.parent) {\n            this._remainingLifetime = value;\n        }\n    }\n    /**\n     * Get the foreign document that can be opened with the input extractor.\n     */\n    _chooseForeignDocument(extractor) {\n        let foreignDocument;\n        // if not standalone, try to append to existing document\n        let foreignExists = this.foreignDocuments.has(extractor.language);\n        if (!extractor.standalone && foreignExists) {\n            foreignDocument = this.foreignDocuments.get(extractor.language);\n        }\n        else {\n            // if (previous document does not exists) or (extractor produces standalone documents\n            // and no old standalone document could be reused): create a new document\n            let unusedStandalone = this.unusedStandaloneDocuments.get(extractor.language);\n            if (extractor.standalone && unusedStandalone.length > 0) {\n                foreignDocument = unusedStandalone.pop();\n            }\n            else {\n                foreignDocument = this.openForeign(extractor.language, extractor.standalone, extractor.fileExtension);\n            }\n        }\n        return foreignDocument;\n    }\n    /**\n     * Create a foreign document from input language and file extension.\n     *\n     * @param  language - the required language\n     * @param  standalone - the document type is supported natively by LSP?\n     * @param  fileExtension - File extension.\n     */\n    openForeign(language, standalone, fileExtension) {\n        let document = new this.constructor({\n            ...this.options,\n            parent: this,\n            standalone: standalone,\n            fileExtension: fileExtension,\n            language: language\n        });\n        const context = {\n            foreignDocument: document,\n            parentHost: this\n        };\n        this._foreignDocumentOpened.emit(context);\n        // pass through any future signals\n        document.foreignDocumentClosed.connect(this.forwardClosedSignal, this);\n        document.foreignDocumentOpened.connect(this.forwardOpenedSignal, this);\n        this.foreignDocuments.set(document.virtualId, document);\n        return document;\n    }\n    /**\n     * Forward the closed signal from the foreign document to the host document's\n     * signal\n     */\n    forwardClosedSignal(host, context) {\n        this._foreignDocumentClosed.emit(context);\n    }\n    /**\n     * Forward the opened signal from the foreign document to the host document's\n     * signal\n     */\n    forwardOpenedSignal(host, context) {\n        this._foreignDocumentOpened.emit(context);\n    }\n    /**\n     * Slot of the `updateBegan` signal.\n     */\n    _updateBeganSlot() {\n        this._editorToSourceLineNew = new Map();\n    }\n    /**\n     * Slot of the `blockAdded` signal.\n     */\n    _blockAddedSlot(updateManager, blockData) {\n        this._editorToSourceLineNew.set(blockData.block.ceEditor, blockData.virtualDocument.lastSourceLine);\n    }\n    /**\n     * Slot of the `updateFinished` signal.\n     */\n    _updateFinishedSlot() {\n        this._editorToSourceLine = this._editorToSourceLineNew;\n    }\n}\nVirtualDocument.instancesCount = 0;\n/**\n * Create foreign documents if available from input virtual documents.\n * @param virtualDocument - the virtual document to be collected\n * @return - Set of generated foreign documents\n */\nexport function collectDocuments(virtualDocument) {\n    let collected = new Set();\n    collected.add(virtualDocument);\n    for (let foreign of virtualDocument.foreignDocuments.values()) {\n        let foreignLanguages = collectDocuments(foreign);\n        foreignLanguages.forEach(collected.add, collected);\n    }\n    return collected;\n}\nexport class UpdateManager {\n    constructor(virtualDocument) {\n        this.virtualDocument = virtualDocument;\n        this._isDisposed = false;\n        /**\n         * Promise resolved when the updating process finishes.\n         */\n        this._updateDone = new Promise(resolve => {\n            resolve();\n        });\n        /**\n         * Virtual documents update guard.\n         */\n        this._isUpdateInProgress = false;\n        /**\n         * Update lock to prevent multiple updates are applied at the same time.\n         */\n        this._updateLock = false;\n        this._blockAdded = new Signal(this);\n        this._documentUpdated = new Signal(this);\n        this._updateBegan = new Signal(this);\n        this._updateFinished = new Signal(this);\n        this.documentUpdated.connect(this._onUpdated, this);\n    }\n    /**\n     * Promise resolved when the updating process finishes.\n     */\n    get updateDone() {\n        return this._updateDone;\n    }\n    /**\n     * Test whether the document is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Signal emitted when a code block is added to the document.\n     */\n    get blockAdded() {\n        return this._blockAdded;\n    }\n    /**\n     * Signal emitted by the editor that triggered the update,\n     * providing the root document of the updated documents.\n     */\n    get documentUpdated() {\n        return this._documentUpdated;\n    }\n    /**\n     * Signal emitted when the update is started\n     */\n    get updateBegan() {\n        return this._updateBegan;\n    }\n    /**\n     * Signal emitted when the update is finished\n     */\n    get updateFinished() {\n        return this._updateFinished;\n    }\n    /**\n     * Dispose the class\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this.documentUpdated.disconnect(this._onUpdated);\n        Signal.clearData(this);\n    }\n    /**\n     * Execute provided callback within an update-locked context, which guarantees that:\n     *  - the previous updates must have finished before the callback call, and\n     *  - no update will happen when executing the callback\n     * @param fn - the callback to execute in update lock\n     */\n    async withUpdateLock(fn) {\n        await untilReady(() => this._canUpdate(), 12, 10).then(() => {\n            try {\n                this._updateLock = true;\n                fn();\n            }\n            finally {\n                this._updateLock = false;\n            }\n        });\n    }\n    /**\n     * Update all the virtual documents, emit documents updated with root document if succeeded,\n     * and resolve a void promise. The promise does not contain the text value of the root document,\n     * as to avoid an easy trap of ignoring the changes in the virtual documents.\n     */\n    async updateDocuments(blocks) {\n        let update = new Promise((resolve, reject) => {\n            // defer the update by up to 50 ms (10 retrials * 5 ms break),\n            // awaiting for the previous update to complete.\n            untilReady(() => this._canUpdate(), 10, 5)\n                .then(() => {\n                if (this.isDisposed || !this.virtualDocument) {\n                    resolve();\n                }\n                try {\n                    this._isUpdateInProgress = true;\n                    this._updateBegan.emit(blocks);\n                    this.virtualDocument.clear();\n                    for (let codeBlock of blocks) {\n                        this._blockAdded.emit({\n                            block: codeBlock,\n                            virtualDocument: this.virtualDocument\n                        });\n                        this.virtualDocument.appendCodeBlock(codeBlock);\n                    }\n                    this._updateFinished.emit(blocks);\n                    if (this.virtualDocument) {\n                        this._documentUpdated.emit(this.virtualDocument);\n                        this.virtualDocument.maybeEmitChanged();\n                    }\n                    resolve();\n                }\n                catch (e) {\n                    console.warn('Documents update failed:', e);\n                    reject(e);\n                }\n                finally {\n                    this._isUpdateInProgress = false;\n                }\n            })\n                .catch(console.error);\n        });\n        this._updateDone = update;\n        return update;\n    }\n    /**\n     * Once all the foreign documents were refreshed, the unused documents (and their connections)\n     * should be terminated if their lifetime has expired.\n     */\n    _onUpdated(manager, rootDocument) {\n        try {\n            rootDocument.closeExpiredDocuments();\n        }\n        catch (e) {\n            console.warn('Failed to close expired documents');\n        }\n    }\n    /**\n     * Check if the document can be updated.\n     */\n    _canUpdate() {\n        return !this.isDisposed && !this._isUpdateInProgress && !this._updateLock;\n    }\n}\n//# sourceMappingURL=document.js.map","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = mergeWith;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.BrowserMessageWriter = exports.BrowserMessageReader = void 0;\nconst ril_1 = require(\"./ril\");\n// Install the browser runtime abstract.\nril_1.default.install();\nconst api_1 = require(\"../common/api\");\n__exportStar(require(\"../common/api\"), exports);\nclass BrowserMessageReader extends api_1.AbstractMessageReader {\n    constructor(port) {\n        super();\n        this._onData = new api_1.Emitter();\n        this._messageListener = (event) => {\n            this._onData.fire(event.data);\n        };\n        port.addEventListener('error', (event) => this.fireError(event));\n        port.onmessage = this._messageListener;\n    }\n    listen(callback) {\n        return this._onData.event(callback);\n    }\n}\nexports.BrowserMessageReader = BrowserMessageReader;\nclass BrowserMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(port) {\n        super();\n        this.port = port;\n        this.errorCount = 0;\n        port.addEventListener('error', (event) => this.fireError(event));\n    }\n    write(msg) {\n        try {\n            this.port.postMessage(msg);\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.BrowserMessageWriter = BrowserMessageWriter;\nfunction createMessageConnection(reader, writer, logger, options) {\n    if (logger === undefined) {\n        logger = api_1.NullLogger;\n    }\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, api_1.createMessageConnection)(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"../common/api\");\nclass MessageBuffer extends api_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n        this.asciiDecoder = new TextDecoder('ascii');\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, _encoding) {\n        return (new TextEncoder()).encode(value);\n    }\n    toString(value, encoding) {\n        if (encoding === 'ascii') {\n            return this.asciiDecoder.decode(value);\n        }\n        else {\n            return (new TextDecoder(encoding)).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer;\n        }\n        else {\n            return buffer.slice(0, length);\n        }\n    }\n    allocNative(length) {\n        return new Uint8Array(length);\n    }\n}\nMessageBuffer.emptyBuffer = new Uint8Array(0);\nclass ReadableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n        this._onData = new api_1.Emitter();\n        this._messageListener = (event) => {\n            const blob = event.data;\n            blob.arrayBuffer().then((buffer) => {\n                this._onData.fire(new Uint8Array(buffer));\n            }, () => {\n                (0, api_1.RAL)().console.error(`Converting blob to array buffer failed.`);\n            });\n        };\n        this.socket.addEventListener('message', this._messageListener);\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    onData(listener) {\n        return this._onData.event(listener);\n    }\n}\nclass WritableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    write(data, encoding) {\n        if (typeof data === 'string') {\n            if (encoding !== undefined && encoding !== 'utf-8') {\n                throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${encoding}`);\n            }\n            this.socket.send(data);\n        }\n        else {\n            this.socket.send(data);\n        }\n        return Promise.resolve();\n    }\n    end() {\n        this.socket.close();\n    }\n}\nconst _textEncoder = new TextEncoder();\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                if (options.charset !== 'utf-8') {\n                    throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${options.charset}`);\n                }\n                return Promise.resolve(_textEncoder.encode(JSON.stringify(msg, undefined, 0)));\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                if (!(buffer instanceof Uint8Array)) {\n                    throw new Error(`In a Browser environments only Uint8Arrays are supported.`);\n                }\n                return Promise.resolve(JSON.parse(new TextDecoder(options.charset).decode(buffer)));\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (socket) => new ReadableStreamWrapper(socket),\n        asWritableStream: (socket) => new WritableStreamWrapper(socket)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            const handle = setTimeout(callback, ms, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setImmediate(callback, ...args) {\n            const handle = setTimeout(callback, 0, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setInterval(callback, ms, ...args) {\n            const handle = setInterval(callback, ms, ...args);\n            return { dispose: () => clearInterval(handle) };\n        },\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        api_1.RAL.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;\nexports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return messages_1.Message; } });\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst linkedMap_1 = require(\"./linkedMap\");\nObject.defineProperty(exports, \"LinkedMap\", { enumerable: true, get: function () { return linkedMap_1.LinkedMap; } });\nObject.defineProperty(exports, \"LRUCache\", { enumerable: true, get: function () { return linkedMap_1.LRUCache; } });\nObject.defineProperty(exports, \"Touch\", { enumerable: true, get: function () { return linkedMap_1.Touch; } });\nconst disposable_1 = require(\"./disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"./events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"./cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst sharedArrayCancellation_1 = require(\"./sharedArrayCancellation\");\nObject.defineProperty(exports, \"SharedArraySenderStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } });\nObject.defineProperty(exports, \"SharedArrayReceiverStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } });\nconst messageReader_1 = require(\"./messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"./messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst messageBuffer_1 = require(\"./messageBuffer\");\nObject.defineProperty(exports, \"AbstractMessageBuffer\", { enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } });\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressToken\", { enumerable: true, get: function () { return connection_1.ProgressToken; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceValues\", { enumerable: true, get: function () { return connection_1.TraceValues; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nObject.defineProperty(exports, \"MessageStrategy\", { enumerable: true, get: function () { return connection_1.MessageStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressToken;\n(function (ProgressToken) {\n    function is(value) {\n        return typeof value === 'string' || typeof value === 'number';\n    }\n    ProgressToken.is = is;\n})(ProgressToken = exports.ProgressToken || (exports.ProgressToken = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Compact\"] = 2] = \"Compact\";\n    Trace[Trace[\"Verbose\"] = 3] = \"Verbose\";\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceValues;\n(function (TraceValues) {\n    /**\n     * Turn tracing off.\n     */\n    TraceValues.Off = 'off';\n    /**\n     * Trace messages only.\n     */\n    TraceValues.Messages = 'messages';\n    /**\n     * Compact message tracing.\n     */\n    TraceValues.Compact = 'compact';\n    /**\n     * Verbose message tracing.\n     */\n    TraceValues.Verbose = 'verbose';\n})(TraceValues = exports.TraceValues || (exports.TraceValues = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'compact':\n                return Trace.Compact;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Compact:\n                return 'compact';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return TraceFormat.Text;\n        }\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\nvar IdCancellationReceiverStrategy;\n(function (IdCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    IdCancellationReceiverStrategy.is = is;\n})(IdCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = {}));\nvar RequestCancellationReceiverStrategy;\n(function (RequestCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    RequestCancellationReceiverStrategy.is = is;\n})(RequestCancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            return conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));\nvar MessageStrategy;\n(function (MessageStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.handleMessage);\n    }\n    MessageStrategy.is = is;\n})(MessageStrategy = exports.MessageStrategy || (exports.MessageStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSequenceNumber = 0;\n    let unknownResponseSequenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = new Map();\n    let starNotificationHandler = undefined;\n    const notificationHandlers = new Map();\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = new Map();\n    let knownCanceledRequests = new Set();\n    let requestTokens = new Map();\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSequenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.Message.isRequest(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = (0, ral_1.default)().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function handleMessage(message) {\n        if (messages_1.Message.isRequest(message)) {\n            handleRequest(message);\n        }\n        else if (messages_1.Message.isNotification(message)) {\n            handleNotification(message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            handleResponse(message);\n        }\n        else {\n            handleInvalidMessage(message);\n        }\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            const messageStrategy = options?.messageStrategy;\n            if (MessageStrategy.is(messageStrategy)) {\n                messageStrategy.handleMessage(message, handleMessage);\n            }\n            else {\n                handleMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {\n                const cancelId = message.params.id;\n                const key = createRequestQueueKey(cancelId);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.Message.isRequest(toCancel)) {\n                    const strategy = options?.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        requestTokens.delete(cancelId);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));\n                        return;\n                    }\n                }\n                const cancellationToken = requestTokens.get(cancelId);\n                // The request is already running. Cancel the token\n                if (cancellationToken !== undefined) {\n                    cancellationToken.cancel();\n                    traceReceivedNotification(message);\n                    return;\n                }\n                else {\n                    // Remember the cancel but still queue the message to\n                    // clean up state in process message.\n                    knownCanceledRequests.add(cancelId);\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers.get(requestMessage.method);\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = requestMessage.id ?? String(Date.now()); //\n            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)\n                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)\n                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);\n            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {\n                cancellationSource.cancel();\n            }\n            if (requestMessage.id !== null) {\n                requestTokens.set(tokenKey, cancellationSource);\n            }\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    requestTokens.delete(tokenKey);\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        requestTokens.delete(tokenKey);\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        requestTokens.delete(tokenKey);\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    requestTokens.delete(tokenKey);\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                requestTokens.delete(tokenKey);\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = responseMessage.id;\n            const responsePromise = responsePromises.get(key);\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise !== undefined) {\n                responsePromises.delete(key);\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            const cancelId = message.params.id;\n            knownCanceledRequests.delete(cancelId);\n            traceReceivedNotification(message);\n            return;\n        }\n        else {\n            const element = notificationHandlers.get(message.method);\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        // There are JSON-RPC libraries that send progress message as positional params although\n                        // specified as named. So convert them if this is the case.\n                        const params = message.params;\n                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {\n                            notificationHandler({ token: params[0], value: params[1] });\n                        }\n                        else {\n                            if (type !== undefined) {\n                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                                }\n                                if (type.numberOfParams !== message.params.length) {\n                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);\n                                }\n                            }\n                            notificationHandler(...params);\n                        }\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = responseMessage.id;\n            const responseHandler = responsePromises.get(key);\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function stringifyTrace(params) {\n        if (params === undefined || params === null) {\n            return undefined;\n        }\n        switch (trace) {\n            case Trace.Verbose:\n                return JSON.stringify(params, null, 4);\n            case Trace.Compact:\n                return JSON.stringify(params);\n            default:\n                return undefined;\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Received parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            return messageWriter.write(notificationMessage).catch((error) => {\n                logger.error(`Sending notification failed.`);\n                throw error;\n            });\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers.set(type, { type: undefined, handler });\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        notificationHandlers.delete(method);\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            // This should not await but simple return to ensure that we don't have another\n            // async scheduling. Otherwise one send could overtake another send.\n            return connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    const p = cancellationStrategy.sender.sendCancellation(connection, id);\n                    if (p === undefined) {\n                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);\n                        return Promise.resolve();\n                    }\n                    else {\n                        return p.catch(() => {\n                            logger.log(`Sending cancellation messages for id ${id} failed`);\n                        });\n                    }\n                });\n            }\n            const requestMessage = {\n                jsonrpc: version,\n                id: id,\n                method: method,\n                params: messageParams\n            };\n            traceSendingRequest(requestMessage);\n            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {\n                cancellationStrategy.sender.enableCancellation(requestMessage);\n            }\n            return new Promise(async (resolve, reject) => {\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                try {\n                    await messageWriter.write(requestMessage);\n                    responsePromises.set(id, responsePromise);\n                }\n                catch (error) {\n                    logger.error(`Sending request failed.`);\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));\n                    throw error;\n                }\n            });\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers.set(type, { handler: handler, type: undefined });\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        requestHandlers.delete(method);\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        hasPendingResponse: () => {\n            return responsePromises.size > 0;\n        },\n        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');\n            for (const promise of responsePromises.values()) {\n                promise.reject(error);\n            }\n            responsePromises = new Map();\n            requestTokens = new Map();\n            knownCanceledRequests = new Set();\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            (0, ral_1.default)().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        const verbose = trace === Trace.Verbose || trace === Trace.Compact;\n        tracer.log(params.message, verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event = exports.Event || (exports.Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch = exports.Touch || (exports.Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[_a] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders(lowerCaseKeys = false) {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error('Message header must separate key and value using :');\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nconst semaphore_1 = require(\"./semaphore\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options ?? 'utf-8';\n        }\n        else {\n            charset = options.charset ?? 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.readSemaphore = new semaphore_1.Semaphore(1);\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        this.buffer.append(data);\n        while (true) {\n            if (this.nextMessageLength === -1) {\n                const headers = this.buffer.tryReadHeaders(true);\n                if (!headers) {\n                    return;\n                }\n                const contentLength = headers.get('content-length');\n                if (!contentLength) {\n                    this.fireError(new Error('Header must provide a Content-Length property.'));\n                    return;\n                }\n                const length = parseInt(contentLength);\n                if (isNaN(length)) {\n                    this.fireError(new Error('Content-Length value must be a number.'));\n                    return;\n                }\n                this.nextMessageLength = length;\n            }\n            const body = this.buffer.tryReadBody(this.nextMessageLength);\n            if (body === undefined) {\n                /** We haven't received the full message yet. */\n                this.setPartialMessageTimer();\n                return;\n            }\n            this.clearPartialMessageTimer();\n            this.nextMessageLength = -1;\n            // Make sure that we convert one received message after the\n            // other. Otherwise it could happen that a decoding of a second\n            // smaller message finished before the decoding of a first larger\n            // message and then we would deliver the second message first.\n            this.readSemaphore.lock(async () => {\n                const bytes = this.options.contentDecoder !== undefined\n                    ? await this.options.contentDecoder.decode(body)\n                    : body;\n                const message = await this.options.contentTypeDecoder.decode(bytes, this.options);\n                this.callback(message);\n            }).catch((error) => {\n                this.fireError(error);\n            });\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            this.partialMessageTimer.dispose();\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };\n        }\n        else {\n            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = -32099;\n    /**\n     * An error occurred when write a message to the transport layer.\n     */\n    ErrorCodes.MessageWriteError = -32099;\n    /**\n     * An error occurred when reading a message from the transport layer.\n     */\n    ErrorCodes.MessageReadError = -32098;\n    /**\n     * The connection got disposed or lost and all pending responses got\n     * rejected.\n     */\n    ErrorCodes.PendingResponseRejected = -32097;\n    /**\n     * The connection is inactive and a use of it failed.\n     */\n    ErrorCodes.ConnectionInactive = -32096;\n    /**\n     * Error code indicating that a server received a notification or\n     * request before the server has received the `initialize` request.\n     */\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = -32000;\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        const result = {\n            code: this.code,\n            message: this.message\n        };\n        if (this.data !== undefined) {\n            result.data = this.data;\n        }\n        return result;\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\nvar Message;\n(function (Message) {\n    /**\n     * Tests if the given message is a request message\n     */\n    function isRequest(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n    }\n    Message.isRequest = isRequest;\n    /**\n     * Tests if the given message is a notification message\n     */\n    function isNotification(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && message.id === void 0;\n    }\n    Message.isNotification = isNotification;\n    /**\n     * Tests if the given message is a response message\n     */\n    function isResponse(message) {\n        const candidate = message;\n        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n    }\n    Message.isResponse = isResponse;\n})(Message = exports.Message || (exports.Message = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;\nconst cancellation_1 = require(\"./cancellation\");\nvar CancellationState;\n(function (CancellationState) {\n    CancellationState.Continue = 0;\n    CancellationState.Cancelled = 1;\n})(CancellationState || (CancellationState = {}));\nclass SharedArraySenderStrategy {\n    constructor() {\n        this.buffers = new Map();\n    }\n    enableCancellation(request) {\n        if (request.id === null) {\n            return;\n        }\n        const buffer = new SharedArrayBuffer(4);\n        const data = new Int32Array(buffer, 0, 1);\n        data[0] = CancellationState.Continue;\n        this.buffers.set(request.id, buffer);\n        request.$cancellationData = buffer;\n    }\n    async sendCancellation(_conn, id) {\n        const buffer = this.buffers.get(id);\n        if (buffer === undefined) {\n            return;\n        }\n        const data = new Int32Array(buffer, 0, 1);\n        Atomics.store(data, 0, CancellationState.Cancelled);\n    }\n    cleanup(id) {\n        this.buffers.delete(id);\n    }\n    dispose() {\n        this.buffers.clear();\n    }\n}\nexports.SharedArraySenderStrategy = SharedArraySenderStrategy;\nclass SharedArrayBufferCancellationToken {\n    constructor(buffer) {\n        this.data = new Int32Array(buffer, 0, 1);\n    }\n    get isCancellationRequested() {\n        return Atomics.load(this.data, 0) === CancellationState.Cancelled;\n    }\n    get onCancellationRequested() {\n        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);\n    }\n}\nclass SharedArrayBufferCancellationTokenSource {\n    constructor(buffer) {\n        this.token = new SharedArrayBufferCancellationToken(buffer);\n    }\n    cancel() {\n    }\n    dispose() {\n    }\n}\nclass SharedArrayReceiverStrategy {\n    constructor() {\n        this.kind = 'request';\n    }\n    createCancellationTokenSource(request) {\n        const buffer = request.$cancellationData;\n        if (buffer === undefined) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n        return new SharedArrayBufferCancellationTokenSource(buffer);\n    }\n}\nexports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;\n"],"names":["EditorAdapter","constructor","options","this","_widgetAdapter","widgetAdapter","_extensions","extensions","editor","ready","then","_injectExtensions","dispose","isDisposed","Signal","clearData","codeEditor","getEditor","forEach","factory","ext","path","widget","context","model","inline","injectExtension","instance","createButton","Dialog","MIME_TYPE_LANGUAGE_MAP","WidgetLSPAdapter","_adapterConnected","_activeEditorChanged","_editorAdded","_editorRemoved","_disposed","_isDisposed","_virtualDocument","_connectionManager","connectionManager","_isConnected","_trans","translator","nullTranslator","load","saveState","connect","onSaveState","closed","onConnectionClosed","disposed","_editorToAdapter","WeakMap","editorAdded","_onEditorAdded","editorRemoved","_onEditorRemoved","languageServerManager","sessionsChanged","_onLspSessionOrFeatureChanged","featureManager","featureRegistered","hasMultipleEditors","editors","length","widgetId","id","language","hasOwnProperty","mimeType","withoutParameters","split","type","subtype","startsWith","substring","adapterConnected","activeEditorChanged","isConnected","trans","updateFinished","_updateFinished","virtualDocument","_","disconnect","emit","_a","_b","uri","unregisterDocument","contentChanged","_onContentChanged","ceEditor","updateDocuments","console","warn","Promise","reject","updateManager","documentChanged","document","isInit","connection","connections","get","isReady","sendFullTextChange","value","documentInfo","log","reloadConnection","initVirtual","connectDocument","catch","state","documentsToSave","sendSaved","foreign","foreignDocuments","values","push","onConnected","data","reason","serverNotifications","message","serverIdentifier","showDialog","title","__","body","serverRequests","setHandler","async","params","actionItems","actions","buttons","map","action","label","result","choice","indexOf","button","sendOpen","foreignDocumentOpened","onForeignDocumentOpened","connectionContext","_connect","error","changed","sendOpenWhenReady","createVirtualDocument","host","foreignDocument","foreignDocumentClosed","_onForeignDocumentClosed","sender","change","editorAdapter","extensionFactories","set","adapter","delete","capabilities","textDocument","synchronization","dynamicRegistration","willSave","didSave","willSaveWaitUntil","workspace","didChangeConfiguration","clientCapabilities","hasLspSupportedFile","promise","_shouldUpdateVirtualDocument","isEnabled","features","WidgetLSPAdapterTracker","_current","_adapters","Set","_adapterAdded","_adapterUpdated","_currentChanged","_shell","shell","currentChanged","args","newValue","DocumentWidget","find","currentAdapter","size","adapterAdded","adapterUpdated","add","warning","Error","has","active","activeWidget","clear","fn","filter","filtered","ILanguageServerManager","URL_NS","ILSPDocumentConnectionManager","Token","ILSPFeatureManager","ILSPCodeExtractorsManager","IWidgetLSPAdapterTracker","Method","sleep","timeout","resolve","setTimeout","untilReady","maxRetrials","interval","intervalModifier","i","expandDottedPaths","obj","settings","key","parsed","expandPath","ServerNotification","ClientNotification","ServerRequest","ClientRequest","Object","create","curr","prop","DefaultMap","Map","defaultFactory","entries","super","k","getOrCreate","v","registerServerCapability","serverCapabilities","registration","serverCapabilitiesCopy","JSON","parse","stringify","method","registerOptions","providerName","unregisterServerCapability","unregistration","WebSocketMessageReader","AbstractMessageReader","socket","events","onMessage","readMessage","onError","fireError","onClose","code","name","fireClose","listen","callback","event","pop","undefined","splice","MessageKind","Private","ProtocolCoordinates","WebSocketMessageWriter","AbstractMessageWriter","errorCount","end","write","msg","content","send","e","ConsoleLogger","info","debug","LspWsConnection","openedUris","_isInitialized","_disposables","_rootUri","rootUri","isInitialized","webSocket","onConnection","logger","onopen","cb","onmessage","onerror","onclose","close","toSocket","messageReader","messageWriter","createMessageConnection","createWebSocketConnection","sendInitialize","registerCapabilityDisposable","onRequest","registrations","capabilityRegistration","err","unregisterCapabilityDisposable","unregisterations","capabilityUnregistration","disposable","initializeParams","sendRequest","onServerInitialized","textDocumentMessage","languageId","text","version","sendNotification","sendChange","textDocumentChange","contentChanges","sendConfigurationChange","processId","workspaceFolders","ClientRequestHandler","emitter","request","clientRequested","resultForClient","ServerRequestHandler","_handle","bind","_handler","handler","clearHandler","serverRequested","responseForServer","createMethodMap","methods","handlerFactory","LSPConnection","_closingManually","_closeSignal","_errorSignal","_serverInitialized","_options","logAllCommunication","serverLanguage","documentsToOpen","clientNotifications","constructNotificationHandlers","closeSignal","errorSignal","serverInitialized","kind","sendSelectiveChange","changeEvent","_sendChange","provides","capability","getCompletionResolve","completionItem","constructClientRequestHandler","constructServerRequestHandler","initializationOptions","afterInitialized","signal","onNotification","serverNotifiedClient","clientNotifiedServer","clientRequests","updatedCapabilities","items","item","changeEvents","DocumentConnectionManager","onNewConnection","_forEachDocumentOfConnection","_closed","_ignoredLanguages","_initialized","updateServerConfigurations","initialConfigurations","closedManually","_connected","_disconnected","_documentsChanged","documents","adapters","setLanguageServerManager","adapterTracker","registerAdapter","initialized","connected","disconnected","documentsChanged","getLanguageServerManager","connectDocumentSignals","onForeignDocumentClosed","disconnectDocumentSignals","_host","pathChanged","newPath","updateConfiguration","allServerSettings","setConfiguration","languageServerId","serverSettings","configuration","updateServerConfiguration","retryToConnect","reconnectDelay","retrialsLeft","success","firstTimeoutSeconds","secondTimeoutMinutes","_connectSocket","Math","round","updateLogging","setTrace","uris","solveUris","matchingServers","getMatchingServers","virtualDocumentUri","currentConnection","serverManager","wsBase","wsUrl","PageConfig","getOption","virtualDocumentsUri","serverOptions","spec","getMatchingSpecs","supportsInMemoryFiles","requires_documents_on_disk","baseUri","documentUri","URLExt","join","replace","base","server","_connections","_languageServerManager","onCreate","WebSocket","serverUri","CodeExtractorsManager","_extractorMap","_extractorMapAnyLanguage","getExtractors","cellType","hostLanguage","currentMap","register","extractor","extractorList","isEqual","self","other","line","ch","positionAtOffset","offset","lines","column","textLine","offsetAtPosition","position","linesIncludeBreaks","breakIncrement","isWithinRange","range","character","start","TextForeignCodeExtractor","standalone","isStandalone","fileExtension","file_extension","hasForeignCode","includes","extractForeignCode","extracts","Array","foreignCodeFragment","hostCode","foreignCode","virtualShift","FeatureManager","_featureRegistered","feature","some","ft","factories","extensionFactory","LanguageServerManager","_sessions","_specs","_warningsEmitted","_ready","PromiseDelegate","_sessionsChanged","_enabled","_settings","ServerConnection","makeSettings","_baseUrl","baseUrl","getBaseUrl","_retries","retries","_retriesInterval","retriesInterval","_statusCode","_configuration","fetchSessions","specs","statusUrl","sessions","statusCode","enable","disable","matchingSessionsKeys","session","isMatchingSpec","sort","compareRanks","specification","response","makeRequest","status","ok","json","keys","assign","oldKeys","oldKey","oldId","lowerCaseLanguage","toLocaleLowerCase","languages","warnOnce","arg","a","b","_c","_d","aRank","rank","bRank","localeCompare","VirtualDocumentInfo","_document","VirtualDocument","blankLinesBetweenCells","_foreignDocumentClosed","_foreignDocumentOpened","_changed","parent","virtualLines","sourceLines","_editorToSourceLine","_foreignCodeExtractors","foreignCodeExtractors","instanceId","instancesCount","unusedStandaloneDocuments","_remainingLifetime","UpdateManager","updateBegan","_updateBeganSlot","blockAdded","_blockAddedSlot","_updateFinishedSlot","ceToCm","virtualId","ancestry","concat","idPath","encodedPath","encodeURI","linesPadding","repeat","lineBlocks","lastLine","linesInLastBlock","root","closeAllForeignDocuments","lastVirtualLine","lastSourceLine","documentAtSourcePosition","sourceLine","sourcePositionCe","editorLine","foreignDocumentsMap","sourcePositionCm","isWithinForeign","sourcePosition","transformFromEditorToRoot","shift","virtualPositionAtDocument","virtualLine","appendCodeBlock","block","editorShift","cellCode","sourceCellLines","prepareCodeBlock","skipInspect","cellCodeKept","extractorsForAnyLang","extractorsForCurrentLang","results","keptCellCode","_chooseForeignDocument","foreignShift","closeForeign","parentHost","forwardClosedSignal","forwardOpenedSignal","closeExpiredDocuments","usedDocuments","documentIDs","ids","allDocuments","unusedVirtualDocuments","x","remainingLifetime","transformSourceToEditor","pos","transformVirtualToEditor","virtualPosition","transformVirtualToSource","transformVirtualToRoot","editorPosition","getEditorAtVirtualLine","getEditorAtSourceLine","maybeEmitChanged","previousValue","Infinity","foreignExists","unusedStandalone","openForeign","_editorToSourceLineNew","blockData","collectDocuments","collected","_updateDone","_isUpdateInProgress","_updateLock","_blockAdded","_documentUpdated","_updateBegan","documentUpdated","_onUpdated","updateDone","withUpdateLock","_canUpdate","blocks","update","codeBlock","manager","rootDocument","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","asyncTag","funcTag","genTag","nullTag","objectTag","proxyTag","undefinedTag","reIsHostCtor","reIsUint","typedArrayTags","uid","func","transform","freeGlobal","g","freeSelf","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","require","types","binding","nodeIsTypedArray","isTypedArray","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","toString","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","call","reIsNative","RegExp","Buffer","Symbol","Uint8Array","getPrototype","allocUnsafe","getPrototypeOf","objectCreate","propertyIsEnumerable","symToStringTag","toStringTag","defineProperty","getNative","nativeIsBuffer","isBuffer","nativeMax","max","nativeNow","Date","now","nativeCreate","baseCreate","object","proto","isObject","Hash","index","entry","ListCache","MapCache","Stack","__data__","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","array","getMapData","pairs","LARGE_ARRAY_SIZE","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseMerge","source","srcIndex","customizer","stack","iteratee","keysFunc","iterable","props","baseFor","srcValue","mergeFunc","safeGet","stacked","typedArray","buffer","arrayBuffer","isCommon","isArr","isArray","isBuff","isTyped","isArrayLike","copyArray","slice","cloneBuffer","byteLength","byteOffset","Ctor","isPlainObject","isArguments","isNew","copyObject","keysIn","toPlainObject","isFunction","isPrototype","initCloneObject","baseMergeDeep","baseSetToString","string","identity","getValue","isMasked","test","toSource","baseIsNative","isIndex","setToString","count","lastCalled","stamp","remaining","arguments","apply","shortOut","isLength","baseUnary","inherited","isArg","isType","skipIndexes","n","baseTimes","String","arrayLikeKeys","nativeKeysIn","isProto","baseKeysIn","assigner","mergeWith","otherArgs","thisArg","overRest","baseRest","sources","guard","isIterateeCall","__createBinding","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__exportStar","p","BrowserMessageWriter","BrowserMessageReader","default","install","api_1","port","_onData","Emitter","_messageListener","fire","addEventListener","postMessage","handleError","reader","writer","NullLogger","ConnectionStrategy","is","connectionStrategy","MessageBuffer","AbstractMessageBuffer","encoding","asciiDecoder","TextDecoder","emptyBuffer","fromString","_encoding","TextEncoder","encode","decode","asNative","allocNative","ReadableStreamWrapper","RAL","listener","Disposable","removeEventListener","onEnd","onData","WritableStreamWrapper","_textEncoder","_ril","freeze","messageBuffer","applicationJson","encoder","charset","decoder","stream","asReadableStream","asWritableStream","timer","ms","handle","clearTimeout","setImmediate","setInterval","clearInterval","RIL","ProgressType","ProgressToken","ConnectionOptions","WriteableStreamMessageWriter","MessageWriter","ReadableStreamMessageReader","MessageReader","SharedArrayReceiverStrategy","SharedArraySenderStrategy","CancellationToken","CancellationTokenSource","Event","LRUCache","Touch","LinkedMap","ParameterStructures","NotificationType9","NotificationType8","NotificationType7","NotificationType6","NotificationType5","NotificationType4","NotificationType3","NotificationType2","NotificationType1","NotificationType0","NotificationType","ErrorCodes","ResponseError","RequestType9","RequestType8","RequestType7","RequestType6","RequestType5","RequestType4","RequestType3","RequestType2","RequestType1","RequestType0","RequestType","Message","MessageStrategy","CancellationStrategy","CancellationSenderStrategy","CancellationReceiverStrategy","ConnectionError","ConnectionErrors","LogTraceNotification","SetTraceNotification","TraceFormat","TraceValues","Trace","messages_1","linkedMap_1","disposable_1","events_1","cancellation_1","sharedArrayCancellation_1","messageReader_1","messageWriter_1","messageBuffer_1","connection_1","ral_1","Is","None","isCancellationRequested","onCancellationRequested","Cancelled","candidate","boolean","shortcutEvent","MutableToken","_isCancelled","cancel","_emitter","token","_token","RequestCancellationReceiverStrategy","IdCancellationReceiverStrategy","CancelNotification","ProgressNotification","StarRequestHandler","ConnectionState","Off","Messages","Compact","Verbose","toLowerCase","Text","setPrototypeOf","cancelUndispatched","createCancellationTokenSource","sendCancellation","conn","cleanup","receiver","handleMessage","cancellationStrategy","messageStrategy","_logger","sequenceNumber","notificationSequenceNumber","unknownResponseSequenceNumber","starRequestHandler","requestHandlers","starNotificationHandler","notificationHandlers","progressHandlers","tracer","messageQueue","responsePromises","knownCanceledRequests","requestTokens","trace","traceFormat","New","errorEmitter","closeEmitter","unhandledNotificationEmitter","unhandledProgressEmitter","disposeEmitter","createRequestQueueKey","_message","isListening","Listening","isClosed","Closed","Disposed","closeHandler","triggerMessageQueue","processMessageQueue","isRequest","requestMessage","reply","resultOrError","startTime","jsonrpc","toJson","traceSendingResponse","replyError","stringifyTrace","logLSPMessage","traceReceivedRequest","element","requestHandler","tokenKey","cancellationSource","handlerResult","numberOfParams","InvalidParams","parameterStructures","byName","byPosition","InternalError","replySuccess","MethodNotFound","handleRequest","isNotification","notificationHandler","cancelId","traceReceivedNotification","handleNotification","isResponse","responseMessage","responsePromise","timerStart","traceReceivedResponse","handleResponse","number","responseHandler","handleInvalidMessage","toCancel","strategy","cancellationToken","queue","addMessageToQueue","lspMessage","isLSPMessage","timestamp","throwIfClosedOrDisposed","undefinedToNull","param","nullToUndefined","isNamedParam","computeSingleParam","auto","computeMessageParams","messageParams","first","paramStart","paramEnd","notificationMessage","traceSendingNotification","onProgress","_type","sendProgress","onUnhandledProgress","throwIfNotListening","last","traceSendingRequest","enableCancellation","r","MessageWriteError","hasPendingResponse","_value","_tracer","sendNotificationOrTraceOptions","_sendNotification","_traceFormat","onUnhandledNotification","onDispose","PendingResponseRejected","AlreadyListening","throwIfListening","inspect","verbose","_disposable","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","invoke","ret","callbacks","contexts","isEmpty","_event","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","stringArray","Number","every","elem","First","AsOld","Last","AsNew","_map","_head","_tail","_size","_state","touch","next","previous","addItemLast","addItemFirst","removeItem","callbackfn","current","iterator","done","trimOld","newSize","currentSize","toJSON","fromJSON","limit","ratio","_limit","_ratio","min","checkTrim","peek","_chunks","_totalLength","append","chunk","toAppend","tryReadHeaders","lowerCaseKeys","chunkIndex","chunkBytesRead","row","_read","headers","header","substr","trim","tryReadBody","numberOfBytes","byteCount","resultOffset","chunkPart","semaphore_1","ResolvedMessageReaderOptions","onPartialMessage","partialMessageEmitter","asError","firePartialMessage","fromOptions","contentDecoder","contentDecoders","contentTypeDecoder","contentTypeDecoders","readable","_partialMessageTimeout","nextMessageLength","messageToken","readSemaphore","Semaphore","partialMessageTimeout","partialMessageTimer","contentLength","parseInt","isNaN","setPartialMessageTimer","clearPartialMessageTimer","lock","bytes","waitingTime","ResolvedMessageWriterOptions","contentTypeEncoder","contentEncoder","writeSemaphore","doWrite","AbstractMessageSignature","ParseError","InvalidRequest","jsonrpcReservedErrorRangeStart","serverErrorStart","MessageReadError","ConnectionInactive","ServerNotInitialized","UnknownErrorCode","jsonrpcReservedErrorRangeEnd","serverErrorEnd","_parameterStructures","_ral","ral","capacity","_capacity","_active","_waiting","thunk","runNext","doRunNext","CancellationState","Continue","buffers","SharedArrayBuffer","Int32Array","$cancellationData","_conn","Atomics","store","SharedArrayBufferCancellationToken","SharedArrayBufferCancellationTokenSource"],"sourceRoot":""}